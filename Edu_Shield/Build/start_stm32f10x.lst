   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Ap_EduMenu.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.KeyPad_DownKeyEvent,"ax",%progbits
  19              		.align	2
  20              		.global	KeyPad_DownKeyEvent
  21              		.thumb
  22              		.thumb_func
  24              	KeyPad_DownKeyEvent:
  25              	.LFB1:
  26              		.file 1 "../LIB_AP/Ap_EduMenu.c"
   1:../LIB_AP/Ap_EduMenu.c **** //----------------------------------------------------------------------------
   2:../LIB_AP/Ap_EduMenu.c **** //    프로그램명 	: Edu Menu 관련 함수
   3:../LIB_AP/Ap_EduMenu.c **** //
   4:../LIB_AP/Ap_EduMenu.c **** //    만든이     	: Cho Han Cheol
   5:../LIB_AP/Ap_EduMenu.c **** //
   6:../LIB_AP/Ap_EduMenu.c **** //    날  짜     	: 
   7:../LIB_AP/Ap_EduMenu.c **** //    
   8:../LIB_AP/Ap_EduMenu.c **** //    최종 수정  	: 
   9:../LIB_AP/Ap_EduMenu.c **** //
  10:../LIB_AP/Ap_EduMenu.c **** //    MPU_Type		:
  11:../LIB_AP/Ap_EduMenu.c **** //
  12:../LIB_AP/Ap_EduMenu.c **** //    파일명     	: Ap_EduMenu.h
  13:../LIB_AP/Ap_EduMenu.c **** //----------------------------------------------------------------------------
  14:../LIB_AP/Ap_EduMenu.c **** 
  15:../LIB_AP/Ap_EduMenu.c **** 
  16:../LIB_AP/Ap_EduMenu.c **** 
  17:../LIB_AP/Ap_EduMenu.c **** //----- 헤더파일 열기
  18:../LIB_AP/Ap_EduMenu.c **** //
  19:../LIB_AP/Ap_EduMenu.c **** #define  AP_EDUMENU_LOCAL
  20:../LIB_AP/Ap_EduMenu.c **** 
  21:../LIB_AP/Ap_EduMenu.c **** #include "Ap_EduMenu.h"
  22:../LIB_AP/Ap_EduMenu.c **** 
  23:../LIB_AP/Ap_EduMenu.c **** 
  24:../LIB_AP/Ap_EduMenu.c **** 
  25:../LIB_AP/Ap_EduMenu.c **** //-- 내부 선언
  26:../LIB_AP/Ap_EduMenu.c **** //
  27:../LIB_AP/Ap_EduMenu.c **** 
  28:../LIB_AP/Ap_EduMenu.c **** 
  29:../LIB_AP/Ap_EduMenu.c **** 
  30:../LIB_AP/Ap_EduMenu.c **** //-- 내부 변수
  31:../LIB_AP/Ap_EduMenu.c **** //
  32:../LIB_AP/Ap_EduMenu.c **** u16 Seg_Count = 0;
  33:../LIB_AP/Ap_EduMenu.c **** 
  34:../LIB_AP/Ap_EduMenu.c **** 
  35:../LIB_AP/Ap_EduMenu.c **** //-- 내부 함수
  36:../LIB_AP/Ap_EduMenu.c **** //
  37:../LIB_AP/Ap_EduMenu.c **** void Ap_EduMenu_ShowMenu(void);
  38:../LIB_AP/Ap_EduMenu.c **** 
  39:../LIB_AP/Ap_EduMenu.c **** 
  40:../LIB_AP/Ap_EduMenu.c **** 
  41:../LIB_AP/Ap_EduMenu.c **** void KeyPad_UpKeyEvent( u32 Event )
  42:../LIB_AP/Ap_EduMenu.c **** {
  43:../LIB_AP/Ap_EduMenu.c **** 	if( Event == HW_KEYPAD_EVENT_RELEASED || Event == HW_KEYPAD_EVENT_REPEAT )
  44:../LIB_AP/Ap_EduMenu.c **** 	{
  45:../LIB_AP/Ap_EduMenu.c **** 		Hw_7Seg_Print( 0, "%d", Seg_Count++ );
  46:../LIB_AP/Ap_EduMenu.c **** 	}
  47:../LIB_AP/Ap_EduMenu.c **** }
  48:../LIB_AP/Ap_EduMenu.c **** 
  49:../LIB_AP/Ap_EduMenu.c **** void KeyPad_DownKeyEvent( u32 Event )
  50:../LIB_AP/Ap_EduMenu.c **** {
  27              		.loc 1 50 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  51:../LIB_AP/Ap_EduMenu.c **** 	if( Event == HW_KEYPAD_EVENT_RELEASED || Event == HW_KEYPAD_EVENT_REPEAT )
  32              		.loc 1 51 0
  33 0000 0138     		subs	r0, r0, #1
  34              	.LVL1:
  35 0002 0128     		cmp	r0, #1
  50:../LIB_AP/Ap_EduMenu.c **** {
  36              		.loc 1 50 0
  37 0004 10B5     		push	{r4, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
  41              		.cfi_offset 14, -4
  42              		.loc 1 51 0
  43 0006 00D9     		bls	.L4
  44 0008 10BD     		pop	{r4, pc}
  45              	.L4:
  46              	.LBB4:
  47              	.LBB5:
  52:../LIB_AP/Ap_EduMenu.c **** 	{
  53:../LIB_AP/Ap_EduMenu.c **** 		Seg_Count -= 2;
  48              		.loc 1 53 0
  49 000a 054B     		ldr	r3, .L5
  54:../LIB_AP/Ap_EduMenu.c **** 		
  55:../LIB_AP/Ap_EduMenu.c **** 		
  56:../LIB_AP/Ap_EduMenu.c **** 		Hw_7Seg_Print( 0, "%d", Seg_Count++ );
  50              		.loc 1 56 0
  51 000c 0020     		movs	r0, #0
  52              	.LVL2:
  53:../LIB_AP/Ap_EduMenu.c **** 		Seg_Count -= 2;
  53              		.loc 1 53 0
  54 000e 1C88     		ldrh	r4, [r3, #0]
  55              		.loc 1 56 0
  56 0010 0449     		ldr	r1, .L5+4
  53:../LIB_AP/Ap_EduMenu.c **** 		Seg_Count -= 2;
  57              		.loc 1 53 0
  58 0012 A21E     		subs	r2, r4, #2
  59              		.loc 1 56 0
  60 0014 013C     		subs	r4, r4, #1
  61 0016 1C80     		strh	r4, [r3, #0]	@ movhi
  62 0018 92B2     		uxth	r2, r2
  63 001a 034B     		ldr	r3, .L5+8
  64 001c 9847     		blx	r3
  65              	.LVL3:
  66 001e 10BD     		pop	{r4, pc}
  67              	.L6:
  68              		.align	2
  69              	.L5:
  70 0020 00000000 		.word	.LANCHOR0
  71 0024 00000000 		.word	.LC0
  72 0028 00000000 		.word	Hw_7Seg_Print
  73              	.LBE5:
  74              	.LBE4:
  75              		.cfi_endproc
  76              	.LFE1:
  78              		.section	.text.KeyPad_UpKeyEvent,"ax",%progbits
  79              		.align	2
  80              		.global	KeyPad_UpKeyEvent
  81              		.thumb
  82              		.thumb_func
  84              	KeyPad_UpKeyEvent:
  85              	.LFB0:
  42:../LIB_AP/Ap_EduMenu.c **** {
  86              		.loc 1 42 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              	.LVL4:
  43:../LIB_AP/Ap_EduMenu.c **** 	if( Event == HW_KEYPAD_EVENT_RELEASED || Event == HW_KEYPAD_EVENT_REPEAT )
  91              		.loc 1 43 0
  92 0000 0138     		subs	r0, r0, #1
  93              	.LVL5:
  94 0002 0128     		cmp	r0, #1
  42:../LIB_AP/Ap_EduMenu.c **** {
  95              		.loc 1 42 0
  96 0004 10B5     		push	{r4, lr}
  97              	.LCFI1:
  98              		.cfi_def_cfa_offset 8
  99              		.cfi_offset 4, -8
 100              		.cfi_offset 14, -4
  43:../LIB_AP/Ap_EduMenu.c **** 	if( Event == HW_KEYPAD_EVENT_RELEASED || Event == HW_KEYPAD_EVENT_REPEAT )
 101              		.loc 1 43 0
 102 0006 00D9     		bls	.L9
 103 0008 10BD     		pop	{r4, pc}
 104              	.L9:
 105              	.LBB8:
 106              	.LBB9:
  45:../LIB_AP/Ap_EduMenu.c **** 		Hw_7Seg_Print( 0, "%d", Seg_Count++ );
 107              		.loc 1 45 0
 108 000a 044B     		ldr	r3, .L10
 109 000c 0020     		movs	r0, #0
 110              	.LVL6:
 111 000e 1A88     		ldrh	r2, [r3, #0]
 112 0010 0349     		ldr	r1, .L10+4
 113 0012 541C     		adds	r4, r2, #1
 114 0014 1C80     		strh	r4, [r3, #0]	@ movhi
 115 0016 034B     		ldr	r3, .L10+8
 116 0018 9847     		blx	r3
 117              	.LVL7:
 118 001a 10BD     		pop	{r4, pc}
 119              	.L11:
 120              		.align	2
 121              	.L10:
 122 001c 00000000 		.word	.LANCHOR0
 123 0020 00000000 		.word	.LC0
 124 0024 00000000 		.word	Hw_7Seg_Print
 125              	.LBE9:
 126              	.LBE8:
 127              		.cfi_endproc
 128              	.LFE0:
 130              		.section	.text.Ap_EduMenu_ShowMenu,"ax",%progbits
 131              		.align	2
 132              		.global	Ap_EduMenu_ShowMenu
 133              		.thumb
 134              		.thumb_func
 136              	Ap_EduMenu_ShowMenu:
 137              	.LFB2:
  57:../LIB_AP/Ap_EduMenu.c **** 	}	
  58:../LIB_AP/Ap_EduMenu.c **** }
  59:../LIB_AP/Ap_EduMenu.c **** 
  60:../LIB_AP/Ap_EduMenu.c **** 
  61:../LIB_AP/Ap_EduMenu.c **** 
  62:../LIB_AP/Ap_EduMenu.c **** /*---------------------------------------------------------------------------
  63:../LIB_AP/Ap_EduMenu.c ****      TITLE   : Ap_EduMenu_ShowMenu
  64:../LIB_AP/Ap_EduMenu.c ****      WORK    : 
  65:../LIB_AP/Ap_EduMenu.c ****      ARG     : void
  66:../LIB_AP/Ap_EduMenu.c ****      RET     : void
  67:../LIB_AP/Ap_EduMenu.c **** ---------------------------------------------------------------------------*/
  68:../LIB_AP/Ap_EduMenu.c **** void Ap_EduMenu_ShowMenu(void)
  69:../LIB_AP/Ap_EduMenu.c **** {
 138              		.loc 1 69 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142 0000 38B5     		push	{r3, r4, r5, lr}
 143              	.LCFI2:
 144              		.cfi_def_cfa_offset 16
 145              		.cfi_offset 3, -16
 146              		.cfi_offset 4, -12
 147              		.cfi_offset 5, -8
 148              		.cfi_offset 14, -4
  70:../LIB_AP/Ap_EduMenu.c **** 	u8 key;
  71:../LIB_AP/Ap_EduMenu.c **** 
  72:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("\n\n");
 149              		.loc 1 72 0
 150 0002 40F20000 		movw	r0, #:lower16:.LC1
 151 0006 40F20004 		movw	r4, #:lower16:Lb_printf
  73:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("*******************************************************\n");
 152              		.loc 1 73 0
 153 000a 40F20005 		movw	r5, #:lower16:.LC2
  72:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("\n\n");
 154              		.loc 1 72 0
 155 000e C0F20004 		movt	r4, #:upper16:Lb_printf
 156              		.loc 1 73 0
 157 0012 C0F20005 		movt	r5, #:upper16:.LC2
  72:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("\n\n");
 158              		.loc 1 72 0
 159 0016 C0F20000 		movt	r0, #:upper16:.LC1
 160 001a A047     		blx	r4
 161              	.LVL8:
 162              		.loc 1 73 0
 163 001c 2846     		mov	r0, r5
 164 001e A047     		blx	r4
 165              	.LVL9:
  74:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("                      Edu V0.6                         \n");
 166              		.loc 1 74 0
 167 0020 40F20000 		movw	r0, #:lower16:.LC3
 168 0024 C0F20000 		movt	r0, #:upper16:.LC3
 169 0028 A047     		blx	r4
 170              	.LVL10:
  75:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("*******************************************************\n");
 171              		.loc 1 75 0
 172 002a 2846     		mov	r0, r5
 173 002c A047     		blx	r4
 174              	.LVL11:
  76:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 1. Test.. LED                                       *\n");
 175              		.loc 1 76 0
 176 002e 40F20000 		movw	r0, #:lower16:.LC4
 177 0032 C0F20000 		movt	r0, #:upper16:.LC4
 178 0036 A047     		blx	r4
 179              	.LVL12:
  77:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 2. Test.. KeyPad                                    *\n");
 180              		.loc 1 77 0
 181 0038 40F20000 		movw	r0, #:lower16:.LC5
 182 003c C0F20000 		movt	r0, #:upper16:.LC5
 183 0040 A047     		blx	r4
 184              	.LVL13:
  78:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 3. Test.. 7Seg                                      *\n");
 185              		.loc 1 78 0
 186 0042 40F20000 		movw	r0, #:lower16:.LC6
 187 0046 C0F20000 		movt	r0, #:upper16:.LC6
 188 004a A047     		blx	r4
 189              	.LVL14:
  79:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 4. Test.. CLcd                                      *\n");
 190              		.loc 1 79 0
 191 004c 40F20000 		movw	r0, #:lower16:.LC7
 192 0050 C0F20000 		movt	r0, #:upper16:.LC7
 193 0054 A047     		blx	r4
 194              	.LVL15:
  80:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 5. Test.. BT                                        *\n");
 195              		.loc 1 80 0
 196 0056 40F20000 		movw	r0, #:lower16:.LC8
 197 005a C0F20000 		movt	r0, #:upper16:.LC8
 198 005e A047     		blx	r4
 199              	.LVL16:
  81:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 6. Test.. Cds                                       *\n");
 200              		.loc 1 81 0
 201 0060 40F20000 		movw	r0, #:lower16:.LC9
 202 0064 C0F20000 		movt	r0, #:upper16:.LC9
 203 0068 A047     		blx	r4
 204              	.LVL17:
  82:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 7.                                                  *\n");
 205              		.loc 1 82 0
 206 006a 40F20000 		movw	r0, #:lower16:.LC10
 207 006e C0F20000 		movt	r0, #:upper16:.LC10
 208 0072 A047     		blx	r4
 209              	.LVL18:
  83:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 8.                                                  *\n");
 210              		.loc 1 83 0
 211 0074 40F20000 		movw	r0, #:lower16:.LC11
 212 0078 C0F20000 		movt	r0, #:upper16:.LC11
 213 007c A047     		blx	r4
 214              	.LVL19:
  84:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 9.                                                  *\n");
 215              		.loc 1 84 0
 216 007e 40F20000 		movw	r0, #:lower16:.LC12
 217 0082 C0F20000 		movt	r0, #:upper16:.LC12
 218 0086 A047     		blx	r4
 219              	.LVL20:
  85:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* m.  Menu                                            *\n");
 220              		.loc 1 85 0
 221 0088 40F20000 		movw	r0, #:lower16:.LC13
 222 008c C0F20000 		movt	r0, #:upper16:.LC13
 223 0090 A047     		blx	r4
 224              	.LVL21:
  86:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("*******************************************************\n");
 225              		.loc 1 86 0
 226 0092 2846     		mov	r0, r5
 227 0094 A047     		blx	r4
 228              	.LVL22:
  87:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("\n");
 229              		.loc 1 87 0
 230 0096 40F20000 		movw	r0, #:lower16:.LC14
 231 009a C0F20000 		movt	r0, #:upper16:.LC14
 232 009e A047     		blx	r4
 233              	.LVL23:
 234 00a0 38BD     		pop	{r3, r4, r5, pc}
 235              		.cfi_endproc
 236              	.LFE2:
 238 00a2 00BF     		.section	.text.Ap_EduMenu_GetCmd,"ax",%progbits
 239              		.align	2
 240              		.global	Ap_EduMenu_GetCmd
 241              		.thumb
 242              		.thumb_func
 244              	Ap_EduMenu_GetCmd:
 245              	.LFB3:
  88:../LIB_AP/Ap_EduMenu.c **** }
  89:../LIB_AP/Ap_EduMenu.c **** 
  90:../LIB_AP/Ap_EduMenu.c **** 
  91:../LIB_AP/Ap_EduMenu.c **** 
  92:../LIB_AP/Ap_EduMenu.c **** 
  93:../LIB_AP/Ap_EduMenu.c **** 
  94:../LIB_AP/Ap_EduMenu.c **** /*---------------------------------------------------------------------------
  95:../LIB_AP/Ap_EduMenu.c ****      TITLE   : Ap_EduMenu_GetCmd
  96:../LIB_AP/Ap_EduMenu.c ****      WORK    : 
  97:../LIB_AP/Ap_EduMenu.c ****      ARG     : void
  98:../LIB_AP/Ap_EduMenu.c ****      RET     : 
  99:../LIB_AP/Ap_EduMenu.c **** 				u8 : 눌려진 메뉴키 데이터 
 100:../LIB_AP/Ap_EduMenu.c **** ---------------------------------------------------------------------------*/
 101:../LIB_AP/Ap_EduMenu.c **** u8 Ap_EduMenu_GetCmd(void)
 102:../LIB_AP/Ap_EduMenu.c **** {
 246              		.loc 1 102 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250 0000 38B5     		push	{r3, r4, r5, lr}
 251              	.LCFI3:
 252              		.cfi_def_cfa_offset 16
 253              		.cfi_offset 3, -16
 254              		.cfi_offset 4, -12
 255              		.cfi_offset 5, -8
 256              		.cfi_offset 14, -4
 103:../LIB_AP/Ap_EduMenu.c **** 	u8  key;
 104:../LIB_AP/Ap_EduMenu.c **** 	
 105:../LIB_AP/Ap_EduMenu.c **** 
 106:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf(">> ");
 257              		.loc 1 106 0
 258 0002 40F20000 		movw	r0, #:lower16:.LC15
 259 0006 40F20004 		movw	r4, #:lower16:Lb_printf
 260 000a C0F20004 		movt	r4, #:upper16:Lb_printf
 261 000e C0F20000 		movt	r0, #:upper16:.LC15
 262 0012 A047     		blx	r4
 263              	.LVL24:
 107:../LIB_AP/Ap_EduMenu.c **** 
 108:../LIB_AP/Ap_EduMenu.c ****     key=get_byte();
 264              		.loc 1 108 0
 265 0014 40F20003 		movw	r3, #:lower16:get_byte
 266 0018 C0F20003 		movt	r3, #:upper16:get_byte
 267 001c 9847     		blx	r3
 268              	.LVL25:
 269 001e 0546     		mov	r5, r0
 270              	.LVL26:
 109:../LIB_AP/Ap_EduMenu.c **** 	
 110:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("\n");
 271              		.loc 1 110 0
 272 0020 40F20000 		movw	r0, #:lower16:.LC14
 273              	.LVL27:
 274 0024 C0F20000 		movt	r0, #:upper16:.LC14
 275 0028 A047     		blx	r4
 276              	.LVL28:
 111:../LIB_AP/Ap_EduMenu.c **** 	
 112:../LIB_AP/Ap_EduMenu.c ****     return key;
 113:../LIB_AP/Ap_EduMenu.c **** }
 277              		.loc 1 113 0
 278 002a 2846     		mov	r0, r5
 279 002c 38BD     		pop	{r3, r4, r5, pc}
 280              		.cfi_endproc
 281              	.LFE3:
 283 002e 00BF     		.section	.text.Ap_EduMenu_ExeCmd,"ax",%progbits
 284              		.align	2
 285              		.global	Ap_EduMenu_ExeCmd
 286              		.thumb
 287              		.thumb_func
 289              	Ap_EduMenu_ExeCmd:
 290              	.LFB4:
 114:../LIB_AP/Ap_EduMenu.c **** 
 115:../LIB_AP/Ap_EduMenu.c **** 
 116:../LIB_AP/Ap_EduMenu.c **** 
 117:../LIB_AP/Ap_EduMenu.c **** 
 118:../LIB_AP/Ap_EduMenu.c **** /*---------------------------------------------------------------------------
 119:../LIB_AP/Ap_EduMenu.c ****      TITLE   : Ap_EduMenu_ExeCmd
 120:../LIB_AP/Ap_EduMenu.c ****      WORK    : 
 121:../LIB_AP/Ap_EduMenu.c ****      ARG     : void
 122:../LIB_AP/Ap_EduMenu.c ****      RET     : 
 123:../LIB_AP/Ap_EduMenu.c **** 				u8 : 눌려진 메뉴키 데이터 
 124:../LIB_AP/Ap_EduMenu.c **** ---------------------------------------------------------------------------*/
 125:../LIB_AP/Ap_EduMenu.c **** u8 Ap_EduMenu_ExeCmd(void)
 126:../LIB_AP/Ap_EduMenu.c **** {
 291              		.loc 1 126 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 16
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              	.LVL29:
 296 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 297              	.LCFI4:
 298              		.cfi_def_cfa_offset 36
 299              		.cfi_offset 4, -36
 300              		.cfi_offset 5, -32
 301              		.cfi_offset 6, -28
 302              		.cfi_offset 7, -24
 303              		.cfi_offset 8, -20
 304              		.cfi_offset 9, -16
 305              		.cfi_offset 10, -12
 306              		.cfi_offset 11, -8
 307              		.cfi_offset 14, -4
 127:../LIB_AP/Ap_EduMenu.c **** 	u8  key;
 128:../LIB_AP/Ap_EduMenu.c **** 	u8  UartData;
 129:../LIB_AP/Ap_EduMenu.c **** 	u8  i;
 130:../LIB_AP/Ap_EduMenu.c **** 	u32 KeyPressedCnt;
 131:../LIB_AP/Ap_EduMenu.c **** 	u32 KeyEvent;
 132:../LIB_AP/Ap_EduMenu.c **** 	u32 KeyNum;
 133:../LIB_AP/Ap_EduMenu.c **** 	u16 SegCnt = 0;
 134:../LIB_AP/Ap_EduMenu.c **** 	s16 Temp = 0;
 135:../LIB_AP/Ap_EduMenu.c **** 	
 136:../LIB_AP/Ap_EduMenu.c **** 	static u8 ExeFirst = TRUE;
 137:../LIB_AP/Ap_EduMenu.c **** 	u16 Ret = ERR_NONE;
 138:../LIB_AP/Ap_EduMenu.c **** 			
 139:../LIB_AP/Ap_EduMenu.c **** 	
 140:../LIB_AP/Ap_EduMenu.c **** 	if( ExeFirst == TRUE )
 141:../LIB_AP/Ap_EduMenu.c **** 	{
 142:../LIB_AP/Ap_EduMenu.c **** 		Ap_EduMenu_ShowMenu();		
 308              		.loc 1 142 0
 309 0004 40F20003 		movw	r3, #:lower16:Ap_EduMenu_ShowMenu
 126:../LIB_AP/Ap_EduMenu.c **** {
 310              		.loc 1 126 0
 311 0008 85B0     		sub	sp, sp, #20
 312              	.LCFI5:
 313              		.cfi_def_cfa_offset 56
 314              		.loc 1 142 0
 315 000a C0F20003 		movt	r3, #:upper16:Ap_EduMenu_ShowMenu
 316 000e 9847     		blx	r3
 317              	.LVL30:
 143:../LIB_AP/Ap_EduMenu.c **** 		
 144:../LIB_AP/Ap_EduMenu.c **** 		Hw_KeyPad_SetEventFunc( 2, KeyPad_UpKeyEvent );
 318              		.loc 1 144 0
 319 0010 A54C     		ldr	r4, .L53
 320 0012 0220     		movs	r0, #2
 321 0014 A549     		ldr	r1, .L53+4
 322 0016 A047     		blx	r4
 323              	.LVL31:
 145:../LIB_AP/Ap_EduMenu.c **** 		Hw_KeyPad_SetEventFunc( 0, KeyPad_DownKeyEvent );	
 324              		.loc 1 145 0
 325 0018 0020     		movs	r0, #0
 326 001a A549     		ldr	r1, .L53+8
 327 001c A047     		blx	r4
 328              	.LVL32:
 329 001e DFF8E4A2 		ldr	sl, .L53+92
 146:../LIB_AP/Ap_EduMenu.c **** 	}
 147:../LIB_AP/Ap_EduMenu.c **** 
 148:../LIB_AP/Ap_EduMenu.c ****     while( (key = Ap_EduMenu_GetCmd()) != 0 )
 149:../LIB_AP/Ap_EduMenu.c ****     {
 150:../LIB_AP/Ap_EduMenu.c ****         switch(key)
 151:../LIB_AP/Ap_EduMenu.c ****         {
 152:../LIB_AP/Ap_EduMenu.c ****            case '1':
 153:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 0 );
 154:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 155:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 1 );
 156:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 157:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 2 );;
 158:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 159:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 3 );
 160:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 161:../LIB_AP/Ap_EduMenu.c ****                	break;
 162:../LIB_AP/Ap_EduMenu.c **** 
 163:../LIB_AP/Ap_EduMenu.c ****            case '2':
 164:../LIB_AP/Ap_EduMenu.c ****            		Lb_printf("KeyPad Start : press two keys to exit\n");
 165:../LIB_AP/Ap_EduMenu.c ****            		while(1)
 166:../LIB_AP/Ap_EduMenu.c ****            		{
 167:../LIB_AP/Ap_EduMenu.c ****            			KeyEvent = Hw_KeyPad_WaitForEvent(1000);
 168:../LIB_AP/Ap_EduMenu.c ****            			 
 169:../LIB_AP/Ap_EduMenu.c ****            			if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_PRESSED) )
 170:../LIB_AP/Ap_EduMenu.c ****            			{ 
 171:../LIB_AP/Ap_EduMenu.c ****            				Lb_printf("%x KeyPressed\n", Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_PRESSED) );  
 172:../LIB_AP/Ap_EduMenu.c **** 					}										
 173:../LIB_AP/Ap_EduMenu.c **** 					else
 174:../LIB_AP/Ap_EduMenu.c **** 					if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_RELEASED) )
 175:../LIB_AP/Ap_EduMenu.c **** 					{
 176:../LIB_AP/Ap_EduMenu.c **** 						Lb_printf("%x KeyReleased\n", Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_RELEASED) );         
 177:../LIB_AP/Ap_EduMenu.c **** 					}
 178:../LIB_AP/Ap_EduMenu.c **** 					else
 179:../LIB_AP/Ap_EduMenu.c **** 					if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_REPEAT) )
 180:../LIB_AP/Ap_EduMenu.c **** 					{
 181:../LIB_AP/Ap_EduMenu.c **** 						KeyNum = Hw_KeyPad_GetEventKeyNum(HW_KEYPAD_EVENT_REPEAT);
 182:../LIB_AP/Ap_EduMenu.c **** 						
 183:../LIB_AP/Ap_EduMenu.c **** 						Lb_printf("%x KeyRepeat Cnt : %d\n",Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_REPEAT), Hw_Key
 184:../LIB_AP/Ap_EduMenu.c **** 					}
 185:../LIB_AP/Ap_EduMenu.c **** 					
 186:../LIB_AP/Ap_EduMenu.c **** 					KeyPressedCnt = Hw_KeyPad_GetPressedCnt();
 187:../LIB_AP/Ap_EduMenu.c **** 						
 188:../LIB_AP/Ap_EduMenu.c **** 					if( KeyPressedCnt >= 2 )
 189:../LIB_AP/Ap_EduMenu.c **** 					{
 190:../LIB_AP/Ap_EduMenu.c **** 						Lb_printf("Key Exit\n");
 191:../LIB_AP/Ap_EduMenu.c **** 						break;
 192:../LIB_AP/Ap_EduMenu.c **** 					}	
 193:../LIB_AP/Ap_EduMenu.c **** 				}
 194:../LIB_AP/Ap_EduMenu.c **** 				break;
 195:../LIB_AP/Ap_EduMenu.c **** 
 196:../LIB_AP/Ap_EduMenu.c ****            case '3':	
 197:../LIB_AP/Ap_EduMenu.c ****            		Hw_7Seg_Print( 0, "%d", Seg_Count++ );
 198:../LIB_AP/Ap_EduMenu.c ****                break; 
 199:../LIB_AP/Ap_EduMenu.c **** 
 200:../LIB_AP/Ap_EduMenu.c ****            case '4':
 201:../LIB_AP/Ap_EduMenu.c ****            		Hw_CLcd_Print( 0, 1, "Cnt : %d", Seg_Count++);
 202:../LIB_AP/Ap_EduMenu.c **** 				break;  
 203:../LIB_AP/Ap_EduMenu.c **** 
 204:../LIB_AP/Ap_EduMenu.c ****            case '5':
 205:../LIB_AP/Ap_EduMenu.c ****            		Lb_printf("BT Test Start, press x to exit\n");
 206:../LIB_AP/Ap_EduMenu.c **** 
 207:../LIB_AP/Ap_EduMenu.c ****            		while(1)
 208:../LIB_AP/Ap_EduMenu.c ****            		{
 209:../LIB_AP/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_BT, &UartData) == TRUE )
 210:../LIB_AP/Ap_EduMenu.c ****            			{
 211:../LIB_AP/Ap_EduMenu.c ****            				Lb_printf( "BT Rxd : %c \n", UartData );
 212:../LIB_AP/Ap_EduMenu.c ****            			}
 213:../LIB_AP/Ap_EduMenu.c **** 
 214:../LIB_AP/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_MENU, &UartData ) == TRUE )
 215:../LIB_AP/Ap_EduMenu.c ****            			{
 216:../LIB_AP/Ap_EduMenu.c ****            				if( UartData == 'x' )
 217:../LIB_AP/Ap_EduMenu.c ****            				{
 218:../LIB_AP/Ap_EduMenu.c ****            					break;
 219:../LIB_AP/Ap_EduMenu.c ****            				}
 220:../LIB_AP/Ap_EduMenu.c ****            				else
 221:../LIB_AP/Ap_EduMenu.c ****            				{
 222:../LIB_AP/Ap_EduMenu.c ****            					Hw_Uart_Print( HW_USE_UART_CH_BT, "Menu:Send : %c\r\n",UartData );
 223:../LIB_AP/Ap_EduMenu.c ****            				}
 224:../LIB_AP/Ap_EduMenu.c ****            			}
 225:../LIB_AP/Ap_EduMenu.c **** 
 226:../LIB_AP/Ap_EduMenu.c **** 				}
 227:../LIB_AP/Ap_EduMenu.c **** 				
 228:../LIB_AP/Ap_EduMenu.c **** 				Lb_printf("BT Test Exit\n");
 229:../LIB_AP/Ap_EduMenu.c **** 				break; 
 230:../LIB_AP/Ap_EduMenu.c **** 
 231:../LIB_AP/Ap_EduMenu.c ****            case '6':
 232:../LIB_AP/Ap_EduMenu.c ****            		Lb_printf("Cds Test Start, press x to exit\n");
 330              		.loc 1 232 0
 331 0022 A44D     		ldr	r5, .L53+12
 332 0024 A44C     		ldr	r4, .L53+16
 233:../LIB_AP/Ap_EduMenu.c ****            		
 234:../LIB_AP/Ap_EduMenu.c ****            		while(1)
 235:../LIB_AP/Ap_EduMenu.c ****            		{
 236:../LIB_AP/Ap_EduMenu.c **** 
 237:../LIB_AP/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_MENU, &UartData ) == TRUE )
 238:../LIB_AP/Ap_EduMenu.c ****            			{
 239:../LIB_AP/Ap_EduMenu.c ****            				if( UartData == 'x' )
 240:../LIB_AP/Ap_EduMenu.c ****            				{
 241:../LIB_AP/Ap_EduMenu.c ****            					break;
 242:../LIB_AP/Ap_EduMenu.c ****            				}
 243:../LIB_AP/Ap_EduMenu.c ****            			}
 244:../LIB_AP/Ap_EduMenu.c **** 
 245:../LIB_AP/Ap_EduMenu.c ****            			Hw_CLcd_Print( 0, 1, "Cds : %d", Hw_Cds_GetData() );
 333              		.loc 1 245 0
 334 0026 A54F     		ldr	r7, .L53+20
 335 0028 A54E     		ldr	r6, .L53+24
 336              	.LVL33:
 337              	.L46:
 148:../LIB_AP/Ap_EduMenu.c ****     while( (key = Ap_EduMenu_GetCmd()) != 0 )
 338              		.loc 1 148 0 discriminator 1
 339 002a D047     		blx	sl
 340              	.LVL34:
 341 002c 0346     		mov	r3, r0
 342 002e 0028     		cmp	r0, #0
 343 0030 00F09D80 		beq	.L48
 344              	.L37:
 150:../LIB_AP/Ap_EduMenu.c ****         switch(key)
 345              		.loc 1 150 0
 346 0034 A3F13100 		sub	r0, r3, #49
 347              	.LVL35:
 348 0038 3C28     		cmp	r0, #60
 349 003a F6D8     		bhi	.L46
 350 003c 01A3     		adr	r3, .L24
 351 003e 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 352 0042 00BF     		.align	2
 353              	.L24:
 354 0044 33020000 		.word	.L17+1
 355 0048 75010000 		.word	.L18+1
 356 004c 1D020000 		.word	.L19+1
 357 0050 C1010000 		.word	.L20+1
 358 0054 DB010000 		.word	.L21+1
 359 0058 39010000 		.word	.L22+1
 360 005c 2B000000 		.word	.L46+1
 361 0060 2B000000 		.word	.L46+1
 362 0064 2B000000 		.word	.L46+1
 363 0068 2B000000 		.word	.L46+1
 364 006c 2B000000 		.word	.L46+1
 365 0070 2B000000 		.word	.L46+1
 366 0074 2B000000 		.word	.L46+1
 367 0078 2B000000 		.word	.L46+1
 368 007c 2B000000 		.word	.L46+1
 369 0080 2B000000 		.word	.L46+1
 370 0084 2B000000 		.word	.L46+1
 371 0088 2B000000 		.word	.L46+1
 372 008c 2B000000 		.word	.L46+1
 373 0090 2B000000 		.word	.L46+1
 374 0094 2B000000 		.word	.L46+1
 375 0098 2B000000 		.word	.L46+1
 376 009c 2B000000 		.word	.L46+1
 377 00a0 2B000000 		.word	.L46+1
 378 00a4 2B000000 		.word	.L46+1
 379 00a8 2B000000 		.word	.L46+1
 380 00ac 2B000000 		.word	.L46+1
 381 00b0 2B000000 		.word	.L46+1
 382 00b4 B5010000 		.word	.L23+1
 383 00b8 2B000000 		.word	.L46+1
 384 00bc 2B000000 		.word	.L46+1
 385 00c0 2B000000 		.word	.L46+1
 386 00c4 2B000000 		.word	.L46+1
 387 00c8 2B000000 		.word	.L46+1
 388 00cc 2B000000 		.word	.L46+1
 389 00d0 2B000000 		.word	.L46+1
 390 00d4 2B000000 		.word	.L46+1
 391 00d8 2B000000 		.word	.L46+1
 392 00dc 2B000000 		.word	.L46+1
 393 00e0 2B000000 		.word	.L46+1
 394 00e4 2B000000 		.word	.L46+1
 395 00e8 2B000000 		.word	.L46+1
 396 00ec 2B000000 		.word	.L46+1
 397 00f0 2B000000 		.word	.L46+1
 398 00f4 2B000000 		.word	.L46+1
 399 00f8 2B000000 		.word	.L46+1
 400 00fc 2B000000 		.word	.L46+1
 401 0100 2B000000 		.word	.L46+1
 402 0104 2B000000 		.word	.L46+1
 403 0108 2B000000 		.word	.L46+1
 404 010c 2B000000 		.word	.L46+1
 405 0110 2B000000 		.word	.L46+1
 406 0114 2B000000 		.word	.L46+1
 407 0118 2B000000 		.word	.L46+1
 408 011c 2B000000 		.word	.L46+1
 409 0120 2B000000 		.word	.L46+1
 410 0124 2B000000 		.word	.L46+1
 411 0128 2B000000 		.word	.L46+1
 412 012c 2B000000 		.word	.L46+1
 413 0130 2B000000 		.word	.L46+1
 414 0134 B5010000 		.word	.L23+1
 415              	.L22:
 232:../LIB_AP/Ap_EduMenu.c ****            		Lb_printf("Cds Test Start, press x to exit\n");
 416              		.loc 1 232 0
 417 0138 6248     		ldr	r0, .L53+28
 418 013a A847     		blx	r5
 419              	.LVL36:
 420 013c 0DF10F08 		add	r8, sp, #15
 421 0140 05E0     		b	.L36
 422              	.L34:
 423              		.loc 1 245 0
 424 0142 B847     		blx	r7
 425              	.LVL37:
 426 0144 0121     		movs	r1, #1
 427 0146 0346     		mov	r3, r0
 428 0148 5F4A     		ldr	r2, .L53+32
 429 014a 0020     		movs	r0, #0
 430 014c B047     		blx	r6
 431              	.LVL38:
 432              	.L36:
 237:../LIB_AP/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_MENU, &UartData ) == TRUE )
 433              		.loc 1 237 0
 434 014e 0020     		movs	r0, #0
 435 0150 4146     		mov	r1, r8
 436 0152 A047     		blx	r4
 437              	.LVL39:
 438 0154 0128     		cmp	r0, #1
 439 0156 F4D1     		bne	.L34
 239:../LIB_AP/Ap_EduMenu.c ****            				if( UartData == 'x' )
 440              		.loc 1 239 0
 441 0158 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 442              	.LVL40:
 443 015c 782B     		cmp	r3, #120
 444              	.LVL41:
 445 015e F0D1     		bne	.L34
 246:../LIB_AP/Ap_EduMenu.c **** 
 247:../LIB_AP/Ap_EduMenu.c **** 				}      
 248:../LIB_AP/Ap_EduMenu.c **** 
 249:../LIB_AP/Ap_EduMenu.c **** 				Lb_printf("Cds Test Exit\n");     		
 446              		.loc 1 249 0
 447 0160 5A48     		ldr	r0, .L53+36
 448 0162 A847     		blx	r5
 449              	.LVL42:
 148:../LIB_AP/Ap_EduMenu.c ****     while( (key = Ap_EduMenu_GetCmd()) != 0 )
 450              		.loc 1 148 0
 451 0164 D047     		blx	sl
 452              	.LVL43:
 453 0166 0346     		mov	r3, r0
 454 0168 0028     		cmp	r0, #0
 455 016a 7FF463AF 		bne	.L37
 456              	.LVL44:
 457              	.L48:
 250:../LIB_AP/Ap_EduMenu.c ****                break;  
 251:../LIB_AP/Ap_EduMenu.c **** 
 252:../LIB_AP/Ap_EduMenu.c ****            case '7':
 253:../LIB_AP/Ap_EduMenu.c ****                break;  
 254:../LIB_AP/Ap_EduMenu.c **** 
 255:../LIB_AP/Ap_EduMenu.c ****            case '8':           		
 256:../LIB_AP/Ap_EduMenu.c ****                break;
 257:../LIB_AP/Ap_EduMenu.c **** 
 258:../LIB_AP/Ap_EduMenu.c ****            case '9': 
 259:../LIB_AP/Ap_EduMenu.c ****                break;
 260:../LIB_AP/Ap_EduMenu.c **** 
 261:../LIB_AP/Ap_EduMenu.c ****            case '0':
 262:../LIB_AP/Ap_EduMenu.c ****                break;
 263:../LIB_AP/Ap_EduMenu.c **** 
 264:../LIB_AP/Ap_EduMenu.c **** 			case 'm':
 265:../LIB_AP/Ap_EduMenu.c **** 			case 'M':
 266:../LIB_AP/Ap_EduMenu.c **** 				Ap_EduMenu_ShowMenu();
 267:../LIB_AP/Ap_EduMenu.c **** 				break;
 268:../LIB_AP/Ap_EduMenu.c **** 				
 269:../LIB_AP/Ap_EduMenu.c ****            default :
 270:../LIB_AP/Ap_EduMenu.c ****                break;
 271:../LIB_AP/Ap_EduMenu.c ****         }
 272:../LIB_AP/Ap_EduMenu.c ****     }
 273:../LIB_AP/Ap_EduMenu.c ****     
 274:../LIB_AP/Ap_EduMenu.c ****     return Ret;
 275:../LIB_AP/Ap_EduMenu.c **** }
 458              		.loc 1 275 0
 459 016e 05B0     		add	sp, sp, #20
 460 0170 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 461              	.LVL45:
 462              	.L18:
 164:../LIB_AP/Ap_EduMenu.c ****            		Lb_printf("KeyPad Start : press two keys to exit\n");
 463              		.loc 1 164 0
 464 0174 5648     		ldr	r0, .L53+40
 465 0176 A847     		blx	r5
 466              	.LVL46:
 467 0178 DFF88C91 		ldr	r9, .L53+96
 468 017c DFF88C81 		ldr	r8, .L53+100
 183:../LIB_AP/Ap_EduMenu.c **** 						Lb_printf("%x KeyRepeat Cnt : %d\n",Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_REPEAT), Hw_Key
 469              		.loc 1 183 0
 470 0180 DFF88CB1 		ldr	fp, .L53+104
 471 0184 06E0     		b	.L29
 472              	.LVL47:
 473              	.L26:
 174:../LIB_AP/Ap_EduMenu.c **** 					if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_RELEASED) )
 474              		.loc 1 174 0
 475 0186 4207     		lsls	r2, r0, #29
 476 0188 6CD4     		bmi	.L49
 179:../LIB_AP/Ap_EduMenu.c **** 					if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_REPEAT) )
 477              		.loc 1 179 0
 478 018a 8307     		lsls	r3, r0, #30
 479 018c 70D4     		bmi	.L50
 480              	.LVL48:
 481              	.L27:
 186:../LIB_AP/Ap_EduMenu.c **** 					KeyPressedCnt = Hw_KeyPad_GetPressedCnt();
 482              		.loc 1 186 0
 483 018e C047     		blx	r8
 484              	.LVL49:
 188:../LIB_AP/Ap_EduMenu.c **** 					if( KeyPressedCnt >= 2 )
 485              		.loc 1 188 0
 486 0190 0128     		cmp	r0, #1
 487 0192 0CD8     		bhi	.L51
 488              	.LVL50:
 489              	.L29:
 167:../LIB_AP/Ap_EduMenu.c ****            			KeyEvent = Hw_KeyPad_WaitForEvent(1000);
 490              		.loc 1 167 0
 491 0194 4FF47A70 		mov	r0, #1000
 492 0198 C847     		blx	r9
 493              	.LVL51:
 169:../LIB_AP/Ap_EduMenu.c ****            			if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_PRESSED) )
 494              		.loc 1 169 0
 495 019a C107     		lsls	r1, r0, #31
 496 019c F3D5     		bpl	.L26
 171:../LIB_AP/Ap_EduMenu.c ****            				Lb_printf("%x KeyPressed\n", Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_PRESSED) );  
 497              		.loc 1 171 0
 498 019e 0020     		movs	r0, #0
 499              	.LVL52:
 500 01a0 D847     		blx	fp
 501              	.LVL53:
 502 01a2 0146     		mov	r1, r0
 503 01a4 4B48     		ldr	r0, .L53+44
 504 01a6 A847     		blx	r5
 505              	.LVL54:
 186:../LIB_AP/Ap_EduMenu.c **** 					KeyPressedCnt = Hw_KeyPad_GetPressedCnt();
 506              		.loc 1 186 0
 507 01a8 C047     		blx	r8
 508              	.LVL55:
 188:../LIB_AP/Ap_EduMenu.c **** 					if( KeyPressedCnt >= 2 )
 509              		.loc 1 188 0
 510 01aa 0128     		cmp	r0, #1
 511 01ac F2D9     		bls	.L29
 512              	.L51:
 190:../LIB_AP/Ap_EduMenu.c **** 						Lb_printf("Key Exit\n");
 513              		.loc 1 190 0
 514 01ae 4A48     		ldr	r0, .L53+48
 515              	.LVL56:
 516 01b0 A847     		blx	r5
 517              	.LVL57:
 194:../LIB_AP/Ap_EduMenu.c **** 				break;
 518              		.loc 1 194 0
 519 01b2 3AE7     		b	.L46
 520              	.L23:
 266:../LIB_AP/Ap_EduMenu.c **** 				Ap_EduMenu_ShowMenu();
 521              		.loc 1 266 0
 522 01b4 40F20003 		movw	r3, #:lower16:Ap_EduMenu_ShowMenu
 523 01b8 C0F20003 		movt	r3, #:upper16:Ap_EduMenu_ShowMenu
 524 01bc 9847     		blx	r3
 525              	.LVL58:
 267:../LIB_AP/Ap_EduMenu.c **** 				break;
 526              		.loc 1 267 0
 527 01be 34E7     		b	.L46
 528              	.L20:
 201:../LIB_AP/Ap_EduMenu.c ****            		Hw_CLcd_Print( 0, 1, "Cnt : %d", Seg_Count++);
 529              		.loc 1 201 0
 530 01c0 DFF828E1 		ldr	lr, .L53+68
 531 01c4 0121     		movs	r1, #1
 532 01c6 BEF80030 		ldrh	r3, [lr, #0]
 533 01ca 444A     		ldr	r2, .L53+52
 534 01cc 03EB010C 		add	ip, r3, r1
 535 01d0 0020     		movs	r0, #0
 536 01d2 AEF800C0 		strh	ip, [lr, #0]	@ movhi
 537 01d6 B047     		blx	r6
 538              	.LVL59:
 202:../LIB_AP/Ap_EduMenu.c **** 				break;  
 539              		.loc 1 202 0
 540 01d8 27E7     		b	.L46
 541              	.L21:
 205:../LIB_AP/Ap_EduMenu.c ****            		Lb_printf("BT Test Start, press x to exit\n");
 542              		.loc 1 205 0
 543 01da 4148     		ldr	r0, .L53+56
 544 01dc A847     		blx	r5
 545              	.LVL60:
 222:../LIB_AP/Ap_EduMenu.c ****            					Hw_Uart_Print( HW_USE_UART_CH_BT, "Menu:Send : %c\r\n",UartData );
 546              		.loc 1 222 0
 547 01de DFF83491 		ldr	r9, .L53+108
 548 01e2 0DF10F08 		add	r8, sp, #15
 549 01e6 04E0     		b	.L47
 550              	.L30:
 214:../LIB_AP/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_MENU, &UartData ) == TRUE )
 551              		.loc 1 214 0
 552 01e8 0020     		movs	r0, #0
 553 01ea 4146     		mov	r1, r8
 554 01ec A047     		blx	r4
 555              	.LVL61:
 556 01ee 0128     		cmp	r0, #1
 557 01f0 0DD0     		beq	.L52
 558              	.L47:
 209:../LIB_AP/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_BT, &UartData) == TRUE )
 559              		.loc 1 209 0
 560 01f2 0120     		movs	r0, #1
 561 01f4 4146     		mov	r1, r8
 562 01f6 A047     		blx	r4
 563              	.LVL62:
 564 01f8 0128     		cmp	r0, #1
 565 01fa F5D1     		bne	.L30
 211:../LIB_AP/Ap_EduMenu.c ****            				Lb_printf( "BT Rxd : %c \n", UartData );
 566              		.loc 1 211 0
 567 01fc 9DF80F10 		ldrb	r1, [sp, #15]	@ zero_extendqisi2
 568 0200 3848     		ldr	r0, .L53+60
 569 0202 A847     		blx	r5
 570              	.LVL63:
 214:../LIB_AP/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_MENU, &UartData ) == TRUE )
 571              		.loc 1 214 0
 572 0204 0020     		movs	r0, #0
 573 0206 4146     		mov	r1, r8
 574 0208 A047     		blx	r4
 575              	.LVL64:
 576 020a 0128     		cmp	r0, #1
 577 020c F1D1     		bne	.L47
 578              	.L52:
 216:../LIB_AP/Ap_EduMenu.c ****            				if( UartData == 'x' )
 579              		.loc 1 216 0
 580 020e 9DF80F20 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
 222:../LIB_AP/Ap_EduMenu.c ****            					Hw_Uart_Print( HW_USE_UART_CH_BT, "Menu:Send : %c\r\n",UartData );
 581              		.loc 1 222 0
 582 0212 3549     		ldr	r1, .L53+64
 216:../LIB_AP/Ap_EduMenu.c ****            				if( UartData == 'x' )
 583              		.loc 1 216 0
 584 0214 782A     		cmp	r2, #120
 585 0216 43D0     		beq	.L32
 222:../LIB_AP/Ap_EduMenu.c ****            					Hw_Uart_Print( HW_USE_UART_CH_BT, "Menu:Send : %c\r\n",UartData );
 586              		.loc 1 222 0
 587 0218 C847     		blx	r9
 588              	.LVL65:
 589 021a EAE7     		b	.L47
 590              	.L19:
 197:../LIB_AP/Ap_EduMenu.c ****            		Hw_7Seg_Print( 0, "%d", Seg_Count++ );
 591              		.loc 1 197 0
 592 021c 334B     		ldr	r3, .L53+68
 593 021e 0020     		movs	r0, #0
 594 0220 1A88     		ldrh	r2, [r3, #0]
 595 0222 3349     		ldr	r1, .L53+72
 596 0224 02F1010E 		add	lr, r2, #1
 597 0228 A3F800E0 		strh	lr, [r3, #0]	@ movhi
 598 022c 314B     		ldr	r3, .L53+76
 599 022e 9847     		blx	r3
 600              	.LVL66:
 198:../LIB_AP/Ap_EduMenu.c ****                break; 
 601              		.loc 1 198 0
 602 0230 FBE6     		b	.L46
 603              	.L17:
 153:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 0 );
 604              		.loc 1 153 0
 605 0232 DFF8E490 		ldr	r9, .L53+112
 606 0236 0020     		movs	r0, #0
 154:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 607              		.loc 1 154 0
 608 0238 DFF8E080 		ldr	r8, .L53+116
 153:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 0 );
 609              		.loc 1 153 0
 610 023c C847     		blx	r9
 611              	.LVL67:
 154:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 612              		.loc 1 154 0
 613 023e 4FF4FA70 		mov	r0, #500
 614 0242 C047     		blx	r8
 615              	.LVL68:
 155:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 1 );
 616              		.loc 1 155 0
 617 0244 0120     		movs	r0, #1
 618 0246 C847     		blx	r9
 619              	.LVL69:
 156:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 620              		.loc 1 156 0
 621 0248 4FF4FA70 		mov	r0, #500
 622 024c C047     		blx	r8
 623              	.LVL70:
 157:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 2 );;
 624              		.loc 1 157 0
 625 024e 0220     		movs	r0, #2
 626 0250 C847     		blx	r9
 627              	.LVL71:
 158:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 628              		.loc 1 158 0
 629 0252 4FF4FA70 		mov	r0, #500
 630 0256 C047     		blx	r8
 631              	.LVL72:
 159:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 3 );
 632              		.loc 1 159 0
 633 0258 0320     		movs	r0, #3
 634 025a C847     		blx	r9
 635              	.LVL73:
 160:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 636              		.loc 1 160 0
 637 025c 4FF4FA70 		mov	r0, #500
 638 0260 C047     		blx	r8
 639              	.LVL74:
 161:../LIB_AP/Ap_EduMenu.c ****                	break;
 640              		.loc 1 161 0
 641 0262 E2E6     		b	.L46
 642              	.LVL75:
 643              	.L49:
 176:../LIB_AP/Ap_EduMenu.c **** 						Lb_printf("%x KeyReleased\n", Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_RELEASED) );         
 644              		.loc 1 176 0
 645 0264 0220     		movs	r0, #2
 646              	.LVL76:
 647 0266 D847     		blx	fp
 648              	.LVL77:
 649 0268 0146     		mov	r1, r0
 650 026a 2348     		ldr	r0, .L53+80
 651 026c A847     		blx	r5
 652              	.LVL78:
 653 026e 8EE7     		b	.L27
 654              	.LVL79:
 655              	.L50:
 181:../LIB_AP/Ap_EduMenu.c **** 						KeyNum = Hw_KeyPad_GetEventKeyNum(HW_KEYPAD_EVENT_REPEAT);
 656              		.loc 1 181 0
 657 0270 40F20003 		movw	r3, #:lower16:Hw_KeyPad_GetEventKeyNum
 658 0274 0120     		movs	r0, #1
 659              	.LVL80:
 660 0276 C0F20003 		movt	r3, #:upper16:Hw_KeyPad_GetEventKeyNum
 661 027a 9847     		blx	r3
 662              	.LVL81:
 663 027c 0346     		mov	r3, r0
 664              	.LVL82:
 183:../LIB_AP/Ap_EduMenu.c **** 						Lb_printf("%x KeyRepeat Cnt : %d\n",Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_REPEAT), Hw_Key
 665              		.loc 1 183 0
 666 027e 0120     		movs	r0, #1
 667              	.LVL83:
 668 0280 0193     		str	r3, [sp, #4]
 669 0282 D847     		blx	fp
 670              	.LVL84:
 671 0284 019B     		ldr	r3, [sp, #4]
 672 0286 0146     		mov	r1, r0
 673 0288 D8B2     		uxtb	r0, r3
 674 028a 40F20003 		movw	r3, #:lower16:Hw_KeyPad_GetRepeatCnt
 675 028e 0191     		str	r1, [sp, #4]
 676 0290 C0F20003 		movt	r3, #:upper16:Hw_KeyPad_GetRepeatCnt
 677 0294 9847     		blx	r3
 678              	.LVL85:
 679 0296 0199     		ldr	r1, [sp, #4]
 680 0298 0246     		mov	r2, r0
 681 029a 1848     		ldr	r0, .L53+84
 682 029c A847     		blx	r5
 683              	.LVL86:
 684 029e 76E7     		b	.L27
 685              	.L32:
 228:../LIB_AP/Ap_EduMenu.c **** 				Lb_printf("BT Test Exit\n");
 686              		.loc 1 228 0
 687 02a0 1748     		ldr	r0, .L53+88
 688 02a2 A847     		blx	r5
 689              	.LVL87:
 229:../LIB_AP/Ap_EduMenu.c **** 				break; 
 690              		.loc 1 229 0
 691 02a4 C1E6     		b	.L46
 692              	.L54:
 693 02a6 00BF     		.align	2
 694              	.L53:
 695 02a8 00000000 		.word	Hw_KeyPad_SetEventFunc
 696 02ac 00000000 		.word	KeyPad_UpKeyEvent
 697 02b0 00000000 		.word	KeyPad_DownKeyEvent
 698 02b4 00000000 		.word	Lb_printf
 699 02b8 00000000 		.word	Hw_Uart_GetchNoWait
 700 02bc 00000000 		.word	Hw_Cds_GetData
 701 02c0 00000000 		.word	Hw_CLcd_Print
 702 02c4 AC030000 		.word	.LC26
 703 02c8 D0030000 		.word	.LC27
 704 02cc DC030000 		.word	.LC28
 705 02d0 E0020000 		.word	.LC16
 706 02d4 08030000 		.word	.LC17
 707 02d8 40030000 		.word	.LC20
 708 02dc 4C030000 		.word	.LC21
 709 02e0 58030000 		.word	.LC22
 710 02e4 78030000 		.word	.LC23
 711 02e8 88030000 		.word	.LC24
 712 02ec 00000000 		.word	.LANCHOR0
 713 02f0 00000000 		.word	.LC0
 714 02f4 00000000 		.word	Hw_7Seg_Print
 715 02f8 18030000 		.word	.LC18
 716 02fc 28030000 		.word	.LC19
 717 0300 9C030000 		.word	.LC25
 718 0304 00000000 		.word	Ap_EduMenu_GetCmd
 719 0308 00000000 		.word	Hw_KeyPad_WaitForEvent
 720 030c 00000000 		.word	Hw_KeyPad_GetPressedCnt
 721 0310 00000000 		.word	Hw_KeyPad_GetEventKeyData
 722 0314 00000000 		.word	Hw_Uart_Print
 723 0318 00000000 		.word	Hw_Led_Toggle
 724 031c 00000000 		.word	Hw_Timer_Delay_ms
 725              		.cfi_endproc
 726              	.LFE4:
 728              		.global	Seg_Count
 729              		.section	.rodata.str1.4,"aMS",%progbits,1
 730              		.align	2
 731              	.LC0:
 732 0000 256400   		.ascii	"%d\000"
 733 0003 00       		.space	1
 734              	.LC1:
 735 0004 0A0A00   		.ascii	"\012\012\000"
 736 0007 00       		.space	1
 737              	.LC2:
 738 0008 2A2A2A2A 		.ascii	"***************************************************"
 738      2A2A2A2A 
 738      2A2A2A2A 
 738      2A2A2A2A 
 738      2A2A2A2A 
 739 003b 2A2A2A2A 		.ascii	"****\012\000"
 739      0A00
 740 0041 000000   		.space	3
 741              	.LC3:
 742 0044 20202020 		.ascii	"                      Edu V0.6                     "
 742      20202020 
 742      20202020 
 742      20202020 
 742      20202020 
 743 0077 20202020 		.ascii	"    \012\000"
 743      0A00
 744 007d 000000   		.space	3
 745              	.LC4:
 746 0080 2A20312E 		.ascii	"* 1. Test.. LED                                    "
 746      20546573 
 746      742E2E20 
 746      4C454420 
 746      20202020 
 747 00b3 2020202A 		.ascii	"   *\012\000"
 747      0A00
 748 00b9 000000   		.space	3
 749              	.LC5:
 750 00bc 2A20322E 		.ascii	"* 2. Test.. KeyPad                                 "
 750      20546573 
 750      742E2E20 
 750      4B657950 
 750      61642020 
 751 00ef 2020202A 		.ascii	"   *\012\000"
 751      0A00
 752 00f5 000000   		.space	3
 753              	.LC6:
 754 00f8 2A20332E 		.ascii	"* 3. Test.. 7Seg                                   "
 754      20546573 
 754      742E2E20 
 754      37536567 
 754      20202020 
 755 012b 2020202A 		.ascii	"   *\012\000"
 755      0A00
 756 0131 000000   		.space	3
 757              	.LC7:
 758 0134 2A20342E 		.ascii	"* 4. Test.. CLcd                                   "
 758      20546573 
 758      742E2E20 
 758      434C6364 
 758      20202020 
 759 0167 2020202A 		.ascii	"   *\012\000"
 759      0A00
 760 016d 000000   		.space	3
 761              	.LC8:
 762 0170 2A20352E 		.ascii	"* 5. Test.. BT                                     "
 762      20546573 
 762      742E2E20 
 762      42542020 
 762      20202020 
 763 01a3 2020202A 		.ascii	"   *\012\000"
 763      0A00
 764 01a9 000000   		.space	3
 765              	.LC9:
 766 01ac 2A20362E 		.ascii	"* 6. Test.. Cds                                    "
 766      20546573 
 766      742E2E20 
 766      43647320 
 766      20202020 
 767 01df 2020202A 		.ascii	"   *\012\000"
 767      0A00
 768 01e5 000000   		.space	3
 769              	.LC10:
 770 01e8 2A20372E 		.ascii	"* 7.                                               "
 770      20202020 
 770      20202020 
 770      20202020 
 770      20202020 
 771 021b 2020202A 		.ascii	"   *\012\000"
 771      0A00
 772 0221 000000   		.space	3
 773              	.LC11:
 774 0224 2A20382E 		.ascii	"* 8.                                               "
 774      20202020 
 774      20202020 
 774      20202020 
 774      20202020 
 775 0257 2020202A 		.ascii	"   *\012\000"
 775      0A00
 776 025d 000000   		.space	3
 777              	.LC12:
 778 0260 2A20392E 		.ascii	"* 9.                                               "
 778      20202020 
 778      20202020 
 778      20202020 
 778      20202020 
 779 0293 2020202A 		.ascii	"   *\012\000"
 779      0A00
 780 0299 000000   		.space	3
 781              	.LC13:
 782 029c 2A206D2E 		.ascii	"* m.  Menu                                         "
 782      20204D65 
 782      6E752020 
 782      20202020 
 782      20202020 
 783 02cf 2020202A 		.ascii	"   *\012\000"
 783      0A00
 784 02d5 000000   		.space	3
 785              	.LC14:
 786 02d8 0A00     		.ascii	"\012\000"
 787 02da 0000     		.space	2
 788              	.LC15:
 789 02dc 3E3E2000 		.ascii	">> \000"
 790              	.LC16:
 791 02e0 4B657950 		.ascii	"KeyPad Start : press two keys to exit\012\000"
 791      61642053 
 791      74617274 
 791      203A2070 
 791      72657373 
 792 0307 00       		.space	1
 793              	.LC17:
 794 0308 2578204B 		.ascii	"%x KeyPressed\012\000"
 794      65795072 
 794      65737365 
 794      640A00
 795 0317 00       		.space	1
 796              	.LC18:
 797 0318 2578204B 		.ascii	"%x KeyReleased\012\000"
 797      65795265 
 797      6C656173 
 797      65640A00 
 798              	.LC19:
 799 0328 2578204B 		.ascii	"%x KeyRepeat Cnt : %d\012\000"
 799      65795265 
 799      70656174 
 799      20436E74 
 799      203A2025 
 800 033f 00       		.space	1
 801              	.LC20:
 802 0340 4B657920 		.ascii	"Key Exit\012\000"
 802      45786974 
 802      0A00
 803 034a 0000     		.space	2
 804              	.LC21:
 805 034c 436E7420 		.ascii	"Cnt : %d\000"
 805      3A202564 
 805      00
 806 0355 000000   		.space	3
 807              	.LC22:
 808 0358 42542054 		.ascii	"BT Test Start, press x to exit\012\000"
 808      65737420 
 808      53746172 
 808      742C2070 
 808      72657373 
 809              	.LC23:
 810 0378 42542052 		.ascii	"BT Rxd : %c \012\000"
 810      7864203A 
 810      20256320 
 810      0A00
 811 0386 0000     		.space	2
 812              	.LC24:
 813 0388 4D656E75 		.ascii	"Menu:Send : %c\015\012\000"
 813      3A53656E 
 813      64203A20 
 813      25630D0A 
 813      00
 814 0399 000000   		.space	3
 815              	.LC25:
 816 039c 42542054 		.ascii	"BT Test Exit\012\000"
 816      65737420 
 816      45786974 
 816      0A00
 817 03aa 0000     		.space	2
 818              	.LC26:
 819 03ac 43647320 		.ascii	"Cds Test Start, press x to exit\012\000"
 819      54657374 
 819      20537461 
 819      72742C20 
 819      70726573 
 820 03cd 000000   		.space	3
 821              	.LC27:
 822 03d0 43647320 		.ascii	"Cds : %d\000"
 822      3A202564 
 822      00
 823 03d9 000000   		.space	3
 824              	.LC28:
 825 03dc 43647320 		.ascii	"Cds Test Exit\012\000"
 825      54657374 
 825      20457869 
 825      740A00
 826 03eb 00       		.section	.bss.Seg_Count,"aw",%nobits
 827              		.align	1
 828              		.set	.LANCHOR0,. + 0
 831              	Seg_Count:
 832 0000 0000     		.space	2
 833              		.text
 834              	.Letext0:
 835              		.file 2 "../LIB_HW/Hw_Define.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ap_EduMenu.c
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:19     .text.KeyPad_DownKeyEvent:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:24     .text.KeyPad_DownKeyEvent:0000000000000000 KeyPad_DownKeyEvent
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:70     .text.KeyPad_DownKeyEvent:0000000000000020 $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:79     .text.KeyPad_UpKeyEvent:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:84     .text.KeyPad_UpKeyEvent:0000000000000000 KeyPad_UpKeyEvent
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:122    .text.KeyPad_UpKeyEvent:000000000000001c $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:131    .text.Ap_EduMenu_ShowMenu:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:136    .text.Ap_EduMenu_ShowMenu:0000000000000000 Ap_EduMenu_ShowMenu
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:734    .rodata.str1.4:0000000000000004 .LC1
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:737    .rodata.str1.4:0000000000000008 .LC2
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:741    .rodata.str1.4:0000000000000044 .LC3
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:745    .rodata.str1.4:0000000000000080 .LC4
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:749    .rodata.str1.4:00000000000000bc .LC5
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:753    .rodata.str1.4:00000000000000f8 .LC6
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:757    .rodata.str1.4:0000000000000134 .LC7
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:761    .rodata.str1.4:0000000000000170 .LC8
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:765    .rodata.str1.4:00000000000001ac .LC9
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:769    .rodata.str1.4:00000000000001e8 .LC10
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:773    .rodata.str1.4:0000000000000224 .LC11
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:777    .rodata.str1.4:0000000000000260 .LC12
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:781    .rodata.str1.4:000000000000029c .LC13
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:785    .rodata.str1.4:00000000000002d8 .LC14
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:239    .text.Ap_EduMenu_GetCmd:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:244    .text.Ap_EduMenu_GetCmd:0000000000000000 Ap_EduMenu_GetCmd
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:788    .rodata.str1.4:00000000000002dc .LC15
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:284    .text.Ap_EduMenu_ExeCmd:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:289    .text.Ap_EduMenu_ExeCmd:0000000000000000 Ap_EduMenu_ExeCmd
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:354    .text.Ap_EduMenu_ExeCmd:0000000000000044 $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:417    .text.Ap_EduMenu_ExeCmd:0000000000000138 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:695    .text.Ap_EduMenu_ExeCmd:00000000000002a8 $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:831    .bss.Seg_Count:0000000000000000 Seg_Count
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:730    .rodata.str1.4:0000000000000000 $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccq5c9P4.s:827    .bss.Seg_Count:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
Hw_7Seg_Print
Lb_printf
get_byte
Hw_KeyPad_GetEventKeyNum
Hw_KeyPad_GetRepeatCnt
Hw_KeyPad_SetEventFunc
Hw_Uart_GetchNoWait
Hw_Cds_GetData
Hw_CLcd_Print
Hw_KeyPad_WaitForEvent
Hw_KeyPad_GetPressedCnt
Hw_KeyPad_GetEventKeyData
Hw_Uart_Print
Hw_Led_Toggle
Hw_Timer_Delay_ms
