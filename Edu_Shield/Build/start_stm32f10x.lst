   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Ap_EduMenu.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.KeyPad_DownKeyEvent,"ax",%progbits
  19              		.align	2
  20              		.global	KeyPad_DownKeyEvent
  21              		.thumb
  22              		.thumb_func
  24              	KeyPad_DownKeyEvent:
  25              	.LFB1:
  26              		.file 1 "../LIB_AP/Lib/Menu/Ap_EduMenu.c"
   1:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //----------------------------------------------------------------------------
   2:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //    프로그램명 	: Edu Menu 관련 함수
   3:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //
   4:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //    만든이     	: Cho Han Cheol
   5:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //
   6:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //    날  짜     	: 
   7:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //    
   8:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //    최종 수정  	: 
   9:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //
  10:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //    MPU_Type		:
  11:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //
  12:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //    파일명     	: Ap_EduMenu.h
  13:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //----------------------------------------------------------------------------
  14:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  15:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  16:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  17:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //----- 헤더파일 열기
  18:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //
  19:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** #define  AP_EDUMENU_LOCAL
  20:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  21:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** #include "Ap_EduMenu.h"
  22:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  23:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  24:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  25:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //-- 내부 선언
  26:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //
  27:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  28:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  29:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  30:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //-- 내부 변수
  31:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //
  32:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** u16 Seg_Count = 0;
  33:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  34:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  35:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //-- 내부 함수
  36:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** //
  37:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** void Ap_EduMenu_ShowMenu(void);
  38:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  39:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  40:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  41:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** void KeyPad_UpKeyEvent( u32 Event )
  42:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** {
  43:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	if( Event == HW_KEYPAD_EVENT_RELEASED || Event == HW_KEYPAD_EVENT_REPEAT )
  44:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	{
  45:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		Hw_7Seg_Printf( 0, "%d", Seg_Count++ );
  46:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	}
  47:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** }
  48:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  49:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** void KeyPad_DownKeyEvent( u32 Event )
  50:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** {
  27              		.loc 1 50 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  51:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	if( Event == HW_KEYPAD_EVENT_RELEASED || Event == HW_KEYPAD_EVENT_REPEAT )
  32              		.loc 1 51 0
  33 0000 0138     		subs	r0, r0, #1
  34              	.LVL1:
  35 0002 0128     		cmp	r0, #1
  50:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** {
  36              		.loc 1 50 0
  37 0004 10B5     		push	{r4, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
  41              		.cfi_offset 14, -4
  42              		.loc 1 51 0
  43 0006 00D9     		bls	.L4
  44 0008 10BD     		pop	{r4, pc}
  45              	.L4:
  46              	.LBB4:
  47              	.LBB5:
  52:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	{
  53:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		Seg_Count -= 2;
  48              		.loc 1 53 0
  49 000a 054B     		ldr	r3, .L5
  54:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		
  55:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		
  56:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		Hw_7Seg_Printf( 0, "%d", Seg_Count++ );
  50              		.loc 1 56 0
  51 000c 0020     		movs	r0, #0
  52              	.LVL2:
  53:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		Seg_Count -= 2;
  53              		.loc 1 53 0
  54 000e 1C88     		ldrh	r4, [r3, #0]
  55              		.loc 1 56 0
  56 0010 0449     		ldr	r1, .L5+4
  53:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		Seg_Count -= 2;
  57              		.loc 1 53 0
  58 0012 A21E     		subs	r2, r4, #2
  59              		.loc 1 56 0
  60 0014 013C     		subs	r4, r4, #1
  61 0016 1C80     		strh	r4, [r3, #0]	@ movhi
  62 0018 92B2     		uxth	r2, r2
  63 001a 034B     		ldr	r3, .L5+8
  64 001c 9847     		blx	r3
  65              	.LVL3:
  66 001e 10BD     		pop	{r4, pc}
  67              	.L6:
  68              		.align	2
  69              	.L5:
  70 0020 00000000 		.word	.LANCHOR0
  71 0024 00000000 		.word	.LC0
  72 0028 00000000 		.word	Hw_7Seg_Printf
  73              	.LBE5:
  74              	.LBE4:
  75              		.cfi_endproc
  76              	.LFE1:
  78              		.section	.text.KeyPad_UpKeyEvent,"ax",%progbits
  79              		.align	2
  80              		.global	KeyPad_UpKeyEvent
  81              		.thumb
  82              		.thumb_func
  84              	KeyPad_UpKeyEvent:
  85              	.LFB0:
  42:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** {
  86              		.loc 1 42 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              	.LVL4:
  43:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	if( Event == HW_KEYPAD_EVENT_RELEASED || Event == HW_KEYPAD_EVENT_REPEAT )
  91              		.loc 1 43 0
  92 0000 0138     		subs	r0, r0, #1
  93              	.LVL5:
  94 0002 0128     		cmp	r0, #1
  42:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** {
  95              		.loc 1 42 0
  96 0004 10B5     		push	{r4, lr}
  97              	.LCFI1:
  98              		.cfi_def_cfa_offset 8
  99              		.cfi_offset 4, -8
 100              		.cfi_offset 14, -4
  43:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	if( Event == HW_KEYPAD_EVENT_RELEASED || Event == HW_KEYPAD_EVENT_REPEAT )
 101              		.loc 1 43 0
 102 0006 00D9     		bls	.L9
 103 0008 10BD     		pop	{r4, pc}
 104              	.L9:
 105              	.LBB8:
 106              	.LBB9:
  45:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		Hw_7Seg_Printf( 0, "%d", Seg_Count++ );
 107              		.loc 1 45 0
 108 000a 044B     		ldr	r3, .L10
 109 000c 0020     		movs	r0, #0
 110              	.LVL6:
 111 000e 1A88     		ldrh	r2, [r3, #0]
 112 0010 0349     		ldr	r1, .L10+4
 113 0012 541C     		adds	r4, r2, #1
 114 0014 1C80     		strh	r4, [r3, #0]	@ movhi
 115 0016 034B     		ldr	r3, .L10+8
 116 0018 9847     		blx	r3
 117              	.LVL7:
 118 001a 10BD     		pop	{r4, pc}
 119              	.L11:
 120              		.align	2
 121              	.L10:
 122 001c 00000000 		.word	.LANCHOR0
 123 0020 00000000 		.word	.LC0
 124 0024 00000000 		.word	Hw_7Seg_Printf
 125              	.LBE9:
 126              	.LBE8:
 127              		.cfi_endproc
 128              	.LFE0:
 130              		.section	.text.Ap_EduMenu_ShowMenu,"ax",%progbits
 131              		.align	2
 132              		.global	Ap_EduMenu_ShowMenu
 133              		.thumb
 134              		.thumb_func
 136              	Ap_EduMenu_ShowMenu:
 137              	.LFB2:
  57:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	}	
  58:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** }
  59:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  60:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  61:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  62:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** /*---------------------------------------------------------------------------
  63:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****      TITLE   : Ap_EduMenu_ShowMenu
  64:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****      WORK    : 
  65:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****      ARG     : void
  66:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****      RET     : void
  67:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** ---------------------------------------------------------------------------*/
  68:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** void Ap_EduMenu_ShowMenu(void)
  69:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** {
 138              		.loc 1 69 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142 0000 38B5     		push	{r3, r4, r5, lr}
 143              	.LCFI2:
 144              		.cfi_def_cfa_offset 16
 145              		.cfi_offset 3, -16
 146              		.cfi_offset 4, -12
 147              		.cfi_offset 5, -8
 148              		.cfi_offset 14, -4
  70:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	u8 key;
  71:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  72:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("\n\n");
 149              		.loc 1 72 0
 150 0002 40F20000 		movw	r0, #:lower16:.LC1
 151 0006 40F20004 		movw	r4, #:lower16:Lb_printf
  73:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("*******************************************************\n");
 152              		.loc 1 73 0
 153 000a 40F20005 		movw	r5, #:lower16:.LC2
  72:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("\n\n");
 154              		.loc 1 72 0
 155 000e C0F20004 		movt	r4, #:upper16:Lb_printf
 156              		.loc 1 73 0
 157 0012 C0F20005 		movt	r5, #:upper16:.LC2
  72:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("\n\n");
 158              		.loc 1 72 0
 159 0016 C0F20000 		movt	r0, #:upper16:.LC1
 160 001a A047     		blx	r4
 161              	.LVL8:
 162              		.loc 1 73 0
 163 001c 2846     		mov	r0, r5
 164 001e A047     		blx	r4
 165              	.LVL9:
  74:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("                      Edu V0.6                         \n");
 166              		.loc 1 74 0
 167 0020 40F20000 		movw	r0, #:lower16:.LC3
 168 0024 C0F20000 		movt	r0, #:upper16:.LC3
 169 0028 A047     		blx	r4
 170              	.LVL10:
  75:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("*******************************************************\n");
 171              		.loc 1 75 0
 172 002a 2846     		mov	r0, r5
 173 002c A047     		blx	r4
 174              	.LVL11:
  76:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("* 1. Test.. LED                                       *\n");
 175              		.loc 1 76 0
 176 002e 40F20000 		movw	r0, #:lower16:.LC4
 177 0032 C0F20000 		movt	r0, #:upper16:.LC4
 178 0036 A047     		blx	r4
 179              	.LVL12:
  77:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("* 2. Test.. KeyPad                                    *\n");
 180              		.loc 1 77 0
 181 0038 40F20000 		movw	r0, #:lower16:.LC5
 182 003c C0F20000 		movt	r0, #:upper16:.LC5
 183 0040 A047     		blx	r4
 184              	.LVL13:
  78:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("* 3. Test.. 7Seg                                      *\n");
 185              		.loc 1 78 0
 186 0042 40F20000 		movw	r0, #:lower16:.LC6
 187 0046 C0F20000 		movt	r0, #:upper16:.LC6
 188 004a A047     		blx	r4
 189              	.LVL14:
  79:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("* 4. Test.. CLcd                                      *\n");
 190              		.loc 1 79 0
 191 004c 40F20000 		movw	r0, #:lower16:.LC7
 192 0050 C0F20000 		movt	r0, #:upper16:.LC7
 193 0054 A047     		blx	r4
 194              	.LVL15:
  80:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("* 5. Test.. BT                                        *\n");
 195              		.loc 1 80 0
 196 0056 40F20000 		movw	r0, #:lower16:.LC8
 197 005a C0F20000 		movt	r0, #:upper16:.LC8
 198 005e A047     		blx	r4
 199              	.LVL16:
  81:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("* 6. Test.. Cds                                       *\n");
 200              		.loc 1 81 0
 201 0060 40F20000 		movw	r0, #:lower16:.LC9
 202 0064 C0F20000 		movt	r0, #:upper16:.LC9
 203 0068 A047     		blx	r4
 204              	.LVL17:
  82:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("* 7.                                                  *\n");
 205              		.loc 1 82 0
 206 006a 40F20000 		movw	r0, #:lower16:.LC10
 207 006e C0F20000 		movt	r0, #:upper16:.LC10
 208 0072 A047     		blx	r4
 209              	.LVL18:
  83:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("* 8.                                                  *\n");
 210              		.loc 1 83 0
 211 0074 40F20000 		movw	r0, #:lower16:.LC11
 212 0078 C0F20000 		movt	r0, #:upper16:.LC11
 213 007c A047     		blx	r4
 214              	.LVL19:
  84:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("* 9.                                                  *\n");
 215              		.loc 1 84 0
 216 007e 40F20000 		movw	r0, #:lower16:.LC12
 217 0082 C0F20000 		movt	r0, #:upper16:.LC12
 218 0086 A047     		blx	r4
 219              	.LVL20:
  85:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("* m.  Menu                                            *\n");
 220              		.loc 1 85 0
 221 0088 40F20000 		movw	r0, #:lower16:.LC13
 222 008c C0F20000 		movt	r0, #:upper16:.LC13
 223 0090 A047     		blx	r4
 224              	.LVL21:
  86:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("*******************************************************\n");
 225              		.loc 1 86 0
 226 0092 2846     		mov	r0, r5
 227 0094 A047     		blx	r4
 228              	.LVL22:
  87:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("\n");
 229              		.loc 1 87 0
 230 0096 40F20000 		movw	r0, #:lower16:.LC14
 231 009a C0F20000 		movt	r0, #:upper16:.LC14
 232 009e A047     		blx	r4
 233              	.LVL23:
 234 00a0 38BD     		pop	{r3, r4, r5, pc}
 235              		.cfi_endproc
 236              	.LFE2:
 238 00a2 00BF     		.section	.text.Ap_EduMenu_GetCmd,"ax",%progbits
 239              		.align	2
 240              		.global	Ap_EduMenu_GetCmd
 241              		.thumb
 242              		.thumb_func
 244              	Ap_EduMenu_GetCmd:
 245              	.LFB3:
  88:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** }
  89:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  90:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  91:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  92:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  93:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
  94:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** /*---------------------------------------------------------------------------
  95:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****      TITLE   : Ap_EduMenu_GetCmd
  96:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****      WORK    : 
  97:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****      ARG     : void
  98:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****      RET     : 
  99:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				u8 : 눌려진 메뉴키 데이터 
 100:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** ---------------------------------------------------------------------------*/
 101:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** u8 Ap_EduMenu_GetCmd(void)
 102:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** {
 246              		.loc 1 102 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250 0000 38B5     		push	{r3, r4, r5, lr}
 251              	.LCFI3:
 252              		.cfi_def_cfa_offset 16
 253              		.cfi_offset 3, -16
 254              		.cfi_offset 4, -12
 255              		.cfi_offset 5, -8
 256              		.cfi_offset 14, -4
 103:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	u8  key;
 104:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	
 105:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 106:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf(">> ");
 257              		.loc 1 106 0
 258 0002 40F20000 		movw	r0, #:lower16:.LC15
 259 0006 40F20004 		movw	r4, #:lower16:Lb_printf
 260 000a C0F20004 		movt	r4, #:upper16:Lb_printf
 261 000e C0F20000 		movt	r0, #:upper16:.LC15
 262 0012 A047     		blx	r4
 263              	.LVL24:
 107:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 108:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****     key=get_byte();
 264              		.loc 1 108 0
 265 0014 40F20003 		movw	r3, #:lower16:get_byte
 266 0018 C0F20003 		movt	r3, #:upper16:get_byte
 267 001c 9847     		blx	r3
 268              	.LVL25:
 269 001e 0546     		mov	r5, r0
 270              	.LVL26:
 109:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	
 110:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	Lb_printf("\n");
 271              		.loc 1 110 0
 272 0020 40F20000 		movw	r0, #:lower16:.LC14
 273              	.LVL27:
 274 0024 C0F20000 		movt	r0, #:upper16:.LC14
 275 0028 A047     		blx	r4
 276              	.LVL28:
 111:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	
 112:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****     return key;
 113:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** }
 277              		.loc 1 113 0
 278 002a 2846     		mov	r0, r5
 279 002c 38BD     		pop	{r3, r4, r5, pc}
 280              		.cfi_endproc
 281              	.LFE3:
 283 002e 00BF     		.section	.text.Ap_EduMenu_ExeCmd,"ax",%progbits
 284              		.align	2
 285              		.global	Ap_EduMenu_ExeCmd
 286              		.thumb
 287              		.thumb_func
 289              	Ap_EduMenu_ExeCmd:
 290              	.LFB4:
 114:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 115:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 116:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 117:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 118:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** /*---------------------------------------------------------------------------
 119:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****      TITLE   : Ap_EduMenu_ExeCmd
 120:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****      WORK    : 
 121:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****      ARG     : void
 122:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****      RET     : 
 123:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				u8 : 눌려진 메뉴키 데이터 
 124:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** ---------------------------------------------------------------------------*/
 125:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** u8 Ap_EduMenu_ExeCmd(void)
 126:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** {
 291              		.loc 1 126 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 8
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              	.LVL29:
 296 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 297              	.LCFI4:
 298              		.cfi_def_cfa_offset 36
 299              		.cfi_offset 4, -36
 300              		.cfi_offset 5, -32
 301              		.cfi_offset 6, -28
 302              		.cfi_offset 7, -24
 303              		.cfi_offset 8, -20
 304              		.cfi_offset 9, -16
 305              		.cfi_offset 10, -12
 306              		.cfi_offset 11, -8
 307              		.cfi_offset 14, -4
 127:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	u8  key;
 128:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	u8  UartData;
 129:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	u8  i;
 130:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	u32 KeyPressedCnt;
 131:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	u32 KeyEvent;
 132:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	u32 KeyNum;
 133:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	u16 SegCnt = 0;
 134:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	s16 Temp = 0;
 135:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	
 136:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	static u8 ExeFirst = TRUE;
 137:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	u16 Ret = ERR_NONE;
 138:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 			
 139:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	
 140:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	if( ExeFirst == TRUE )
 308              		.loc 1 140 0
 309 0004 A04C     		ldr	r4, .L54
 126:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** {
 310              		.loc 1 126 0
 311 0006 83B0     		sub	sp, sp, #12
 312              	.LCFI5:
 313              		.cfi_def_cfa_offset 48
 314              		.loc 1 140 0
 315 0008 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 316 000a 012B     		cmp	r3, #1
 317 000c 00F09480 		beq	.L48
 318              	.L15:
 319              	.LVL30:
 141:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	{
 142:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		Ap_EduMenu_ShowMenu();		
 143:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		
 144:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		Hw_KeyPad_SetEventFunc( 2, KeyPad_UpKeyEvent );
 145:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		Hw_KeyPad_SetEventFunc( 0, KeyPad_DownKeyEvent );	
 146:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 147:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		ExeFirst = FALSE;
 148:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	}
 149:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 150:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	key = 0;
 151:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 152:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_MENU, &UartData ) == TRUE )
 320              		.loc 1 152 0
 321 0010 0020     		movs	r0, #0
 322 0012 0DF10701 		add	r1, sp, #7
 323 0016 9D4C     		ldr	r4, .L54+4
 324 0018 A047     		blx	r4
 325              	.LVL31:
 326 001a 0128     		cmp	r0, #1
 327 001c 03D0     		beq	.L49
 328              	.LVL32:
 329              	.L17:
 153:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	{
 154:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		Lb_printf(">> %c\n", UartData);
 155:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		key = UartData;
 156:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	}
 157:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	else
 158:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	{
 159:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		return 0;
 160:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 	}
 161:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 162:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****     if( key > 0 )
 163:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****     {
 164:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****         switch(key)
 165:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****         {
 166:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            case '1':
 167:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Led_Toggle( 0 );
 168:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 169:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Led_Toggle( 1 );
 170:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 171:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Led_Toggle( 2 );;
 172:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 173:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Led_Toggle( 3 );
 174:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 175:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****                	break;
 176:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 177:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            case '2':
 178:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Lb_printf("KeyPad Start : press two keys to exit\n");
 179:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		while(1)
 180:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		{
 181:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			KeyEvent = Hw_KeyPad_WaitForEvent(1000);
 182:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			 
 183:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_PRESSED) )
 184:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			{ 
 185:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            				Lb_printf("%x KeyPressed\n", Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_PRESSED) );  
 186:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					}										
 187:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					else
 188:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_RELEASED) )
 189:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					{
 190:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 						Lb_printf("%x KeyReleased\n", Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_RELEASED) );         
 191:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					}
 192:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					else
 193:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_REPEAT) )
 194:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					{
 195:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 						KeyNum = Hw_KeyPad_GetEventKeyNum(HW_KEYPAD_EVENT_REPEAT);
 196:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 						
 197:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 						Lb_printf("%x KeyRepeat Cnt : %d\n",Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_REPEAT), Hw_Key
 198:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					}
 199:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					
 200:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					KeyPressedCnt = Hw_KeyPad_GetPressedCnt();
 201:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 						
 202:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					if( KeyPressedCnt >= 2 )
 203:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					{
 204:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 						Lb_printf("Key Exit\n");
 205:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 						break;
 206:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					}	
 207:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				}
 208:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				break;
 209:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 210:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            case '3':	
 211:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_7Seg_Printf( 0, "%d", Seg_Count++ );
 212:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****                break; 
 213:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 214:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            case '4':
 215:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_CLcd_Printf( 0, 1, "Cnt : %d", Seg_Count++);
 216:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				break;  
 217:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 218:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            case '5':
 219:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Lb_printf("BT Test Start, press x to exit\n");
 220:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 221:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		while(1)
 222:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		{
 223:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_BT, &UartData) == TRUE )
 224:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			{
 225:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            				Lb_printf( "BT Rxd : %c \n", UartData );
 226:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			}
 227:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 228:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_MENU, &UartData ) == TRUE )
 229:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			{
 230:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            				if( UartData == 'x' )
 231:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            				{
 232:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            					break;
 233:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            				}
 234:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            				else
 235:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            				{
 236:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            					Hw_Uart_Printf( HW_USE_UART_CH_BT, "Menu:Send : %c\r\n",UartData );
 237:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            				}
 238:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			}
 239:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 240:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				}
 241:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				
 242:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				Lb_printf("BT Test Exit\n");
 243:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				break; 
 244:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 245:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            case '6':
 246:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Lb_printf("Cds Test Start, press x to exit\n");
 247:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		
 248:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		while(1)
 249:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		{
 250:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 251:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_MENU, &UartData ) == TRUE )
 252:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			{
 253:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            				if( UartData == 'x' )
 254:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            				{
 255:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            					break;
 256:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            				}
 257:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			}
 258:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 259:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			Hw_CLcd_Printf( 0, 1, "Cds : %d", Hw_Cds_GetData() );
 260:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 261:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				}      
 262:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 263:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				Lb_printf("Cds Test Exit\n");     		
 264:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****                break;  
 265:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 266:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            case '7':
 267:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****                break;  
 268:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 269:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            case '8':           		
 270:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****                break;
 271:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 272:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            case '9': 
 273:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****                break;
 274:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 275:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            case '0':
 276:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****                break;
 277:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 
 278:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 			case 'm':
 279:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 			case 'M':
 280:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				Ap_EduMenu_ShowMenu();
 281:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				break;
 282:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				
 283:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            default :
 284:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****                break;
 285:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****         }
 286:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****     }
 287:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****     
 288:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****     return Ret;
 289:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** }
 330              		.loc 1 289 0
 331 001e 0020     		movs	r0, #0
 332 0020 03B0     		add	sp, sp, #12
 333 0022 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 334              	.LVL33:
 335              	.L49:
 154:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		Lb_printf(">> %c\n", UartData);
 336              		.loc 1 154 0
 337 0026 9A48     		ldr	r0, .L54+8
 338              	.LVL34:
 339 0028 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 340 002c 994D     		ldr	r5, .L54+12
 341 002e A847     		blx	r5
 342              	.LVL35:
 155:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		key = UartData;
 343              		.loc 1 155 0
 344 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 345              	.LVL36:
 162:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****     if( key > 0 )
 346              		.loc 1 162 0
 347 0034 002B     		cmp	r3, #0
 348 0036 F2D0     		beq	.L17
 164:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****         switch(key)
 349              		.loc 1 164 0
 350 0038 313B     		subs	r3, r3, #49
 351 003a 3C2B     		cmp	r3, #60
 352 003c EFD8     		bhi	.L17
 353 003e 01A2     		adr	r2, .L26
 354 0040 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 355              		.align	2
 356              	.L26:
 357 0044 21020000 		.word	.L19+1
 358 0048 E9010000 		.word	.L20+1
 359 004c D7010000 		.word	.L21+1
 360 0050 C3010000 		.word	.L22+1
 361 0054 81010000 		.word	.L23+1
 362 0058 51010000 		.word	.L24+1
 363 005c 1F000000 		.word	.L17+1
 364 0060 1F000000 		.word	.L17+1
 365 0064 1F000000 		.word	.L17+1
 366 0068 1F000000 		.word	.L17+1
 367 006c 1F000000 		.word	.L17+1
 368 0070 1F000000 		.word	.L17+1
 369 0074 1F000000 		.word	.L17+1
 370 0078 1F000000 		.word	.L17+1
 371 007c 1F000000 		.word	.L17+1
 372 0080 1F000000 		.word	.L17+1
 373 0084 1F000000 		.word	.L17+1
 374 0088 1F000000 		.word	.L17+1
 375 008c 1F000000 		.word	.L17+1
 376 0090 1F000000 		.word	.L17+1
 377 0094 1F000000 		.word	.L17+1
 378 0098 1F000000 		.word	.L17+1
 379 009c 1F000000 		.word	.L17+1
 380 00a0 1F000000 		.word	.L17+1
 381 00a4 1F000000 		.word	.L17+1
 382 00a8 1F000000 		.word	.L17+1
 383 00ac 1F000000 		.word	.L17+1
 384 00b0 1F000000 		.word	.L17+1
 385 00b4 4F020000 		.word	.L25+1
 386 00b8 1F000000 		.word	.L17+1
 387 00bc 1F000000 		.word	.L17+1
 388 00c0 1F000000 		.word	.L17+1
 389 00c4 1F000000 		.word	.L17+1
 390 00c8 1F000000 		.word	.L17+1
 391 00cc 1F000000 		.word	.L17+1
 392 00d0 1F000000 		.word	.L17+1
 393 00d4 1F000000 		.word	.L17+1
 394 00d8 1F000000 		.word	.L17+1
 395 00dc 1F000000 		.word	.L17+1
 396 00e0 1F000000 		.word	.L17+1
 397 00e4 1F000000 		.word	.L17+1
 398 00e8 1F000000 		.word	.L17+1
 399 00ec 1F000000 		.word	.L17+1
 400 00f0 1F000000 		.word	.L17+1
 401 00f4 1F000000 		.word	.L17+1
 402 00f8 1F000000 		.word	.L17+1
 403 00fc 1F000000 		.word	.L17+1
 404 0100 1F000000 		.word	.L17+1
 405 0104 1F000000 		.word	.L17+1
 406 0108 1F000000 		.word	.L17+1
 407 010c 1F000000 		.word	.L17+1
 408 0110 1F000000 		.word	.L17+1
 409 0114 1F000000 		.word	.L17+1
 410 0118 1F000000 		.word	.L17+1
 411 011c 1F000000 		.word	.L17+1
 412 0120 1F000000 		.word	.L17+1
 413 0124 1F000000 		.word	.L17+1
 414 0128 1F000000 		.word	.L17+1
 415 012c 1F000000 		.word	.L17+1
 416 0130 1F000000 		.word	.L17+1
 417 0134 4F020000 		.word	.L25+1
 418              	.LVL37:
 419              	.L48:
 142:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		Ap_EduMenu_ShowMenu();		
 420              		.loc 1 142 0
 421 0138 574B     		ldr	r3, .L54+16
 422 013a 9847     		blx	r3
 423              	.LVL38:
 144:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		Hw_KeyPad_SetEventFunc( 2, KeyPad_UpKeyEvent );
 424              		.loc 1 144 0
 425 013c 574D     		ldr	r5, .L54+20
 426 013e 0220     		movs	r0, #2
 427 0140 5749     		ldr	r1, .L54+24
 428 0142 A847     		blx	r5
 429              	.LVL39:
 145:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		Hw_KeyPad_SetEventFunc( 0, KeyPad_DownKeyEvent );	
 430              		.loc 1 145 0
 431 0144 0020     		movs	r0, #0
 432 0146 5749     		ldr	r1, .L54+28
 433 0148 A847     		blx	r5
 434              	.LVL40:
 147:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 		ExeFirst = FALSE;
 435              		.loc 1 147 0
 436 014a 0023     		movs	r3, #0
 437 014c 2370     		strb	r3, [r4, #0]
 438 014e 5FE7     		b	.L15
 439              	.LVL41:
 440              	.L24:
 246:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Lb_printf("Cds Test Start, press x to exit\n");
 441              		.loc 1 246 0
 442 0150 5548     		ldr	r0, .L54+32
 443 0152 A847     		blx	r5
 444              	.LVL42:
 259:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			Hw_CLcd_Printf( 0, 1, "Cds : %d", Hw_Cds_GetData() );
 445              		.loc 1 259 0
 446 0154 554F     		ldr	r7, .L54+36
 447 0156 564E     		ldr	r6, .L54+40
 448 0158 05E0     		b	.L37
 449              	.L35:
 450 015a B847     		blx	r7
 451              	.LVL43:
 452 015c 0121     		movs	r1, #1
 453 015e 0346     		mov	r3, r0
 454 0160 544A     		ldr	r2, .L54+44
 455 0162 0020     		movs	r0, #0
 456 0164 B047     		blx	r6
 457              	.LVL44:
 458              	.L37:
 251:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_MENU, &UartData ) == TRUE )
 459              		.loc 1 251 0
 460 0166 0020     		movs	r0, #0
 461 0168 0DF10701 		add	r1, sp, #7
 462 016c A047     		blx	r4
 463              	.LVL45:
 464 016e 0128     		cmp	r0, #1
 465 0170 F3D1     		bne	.L35
 253:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            				if( UartData == 'x' )
 466              		.loc 1 253 0
 467 0172 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 468              	.LVL46:
 469 0176 782B     		cmp	r3, #120
 470              	.LVL47:
 471 0178 EFD1     		bne	.L35
 263:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				Lb_printf("Cds Test Exit\n");     		
 472              		.loc 1 263 0
 473 017a 4F48     		ldr	r0, .L54+48
 474 017c A847     		blx	r5
 475              	.LVL48:
 264:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****                break;  
 476              		.loc 1 264 0
 477 017e 4EE7     		b	.L17
 478              	.LVL49:
 479              	.L23:
 219:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Lb_printf("BT Test Start, press x to exit\n");
 480              		.loc 1 219 0
 481 0180 4E48     		ldr	r0, .L54+52
 482 0182 A847     		blx	r5
 483              	.LVL50:
 236:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            					Hw_Uart_Printf( HW_USE_UART_CH_BT, "Menu:Send : %c\r\n",UartData );
 484              		.loc 1 236 0
 485 0184 4E4E     		ldr	r6, .L54+56
 486 0186 05E0     		b	.L47
 487              	.L31:
 228:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_MENU, &UartData ) == TRUE )
 488              		.loc 1 228 0
 489 0188 0020     		movs	r0, #0
 490 018a 0DF10701 		add	r1, sp, #7
 491 018e A047     		blx	r4
 492              	.LVL51:
 493 0190 0128     		cmp	r0, #1
 494 0192 0FD0     		beq	.L50
 495              	.L47:
 223:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_BT, &UartData) == TRUE )
 496              		.loc 1 223 0
 497 0194 0120     		movs	r0, #1
 498 0196 0DF10701 		add	r1, sp, #7
 499 019a A047     		blx	r4
 500              	.LVL52:
 501 019c 0128     		cmp	r0, #1
 502 019e F3D1     		bne	.L31
 225:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            				Lb_printf( "BT Rxd : %c \n", UartData );
 503              		.loc 1 225 0
 504 01a0 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 505 01a4 4748     		ldr	r0, .L54+60
 506 01a6 A847     		blx	r5
 507              	.LVL53:
 228:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_MENU, &UartData ) == TRUE )
 508              		.loc 1 228 0
 509 01a8 0020     		movs	r0, #0
 510 01aa 0DF10701 		add	r1, sp, #7
 511 01ae A047     		blx	r4
 512              	.LVL54:
 513 01b0 0128     		cmp	r0, #1
 514 01b2 EFD1     		bne	.L47
 515              	.L50:
 230:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            				if( UartData == 'x' )
 516              		.loc 1 230 0
 517 01b4 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 236:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            					Hw_Uart_Printf( HW_USE_UART_CH_BT, "Menu:Send : %c\r\n",UartData );
 518              		.loc 1 236 0
 519 01b8 4349     		ldr	r1, .L54+64
 230:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            				if( UartData == 'x' )
 520              		.loc 1 230 0
 521 01ba 782A     		cmp	r2, #120
 522 01bc 61D0     		beq	.L33
 236:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            					Hw_Uart_Printf( HW_USE_UART_CH_BT, "Menu:Send : %c\r\n",UartData );
 523              		.loc 1 236 0
 524 01be B047     		blx	r6
 525              	.LVL55:
 526 01c0 E8E7     		b	.L47
 527              	.LVL56:
 528              	.L22:
 215:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_CLcd_Printf( 0, 1, "Cnt : %d", Seg_Count++);
 529              		.loc 1 215 0
 530 01c2 424C     		ldr	r4, .L54+68
 531 01c4 0121     		movs	r1, #1
 532 01c6 2388     		ldrh	r3, [r4, #0]
 533 01c8 414A     		ldr	r2, .L54+72
 534 01ca 5D18     		adds	r5, r3, r1
 535 01cc 2580     		strh	r5, [r4, #0]	@ movhi
 536 01ce 0020     		movs	r0, #0
 537 01d0 374C     		ldr	r4, .L54+40
 538 01d2 A047     		blx	r4
 539              	.LVL57:
 216:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				break;  
 540              		.loc 1 216 0
 541 01d4 23E7     		b	.L17
 542              	.LVL58:
 543              	.L21:
 211:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_7Seg_Printf( 0, "%d", Seg_Count++ );
 544              		.loc 1 211 0
 545 01d6 3D4B     		ldr	r3, .L54+68
 546 01d8 0020     		movs	r0, #0
 547 01da 1A88     		ldrh	r2, [r3, #0]
 548 01dc 3D49     		ldr	r1, .L54+76
 549 01de 541C     		adds	r4, r2, #1
 550 01e0 1C80     		strh	r4, [r3, #0]	@ movhi
 551 01e2 3D4B     		ldr	r3, .L54+80
 552 01e4 9847     		blx	r3
 553              	.LVL59:
 212:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****                break; 
 554              		.loc 1 212 0
 555 01e6 1AE7     		b	.L17
 556              	.LVL60:
 557              	.L20:
 178:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Lb_printf("KeyPad Start : press two keys to exit\n");
 558              		.loc 1 178 0
 559 01e8 3C48     		ldr	r0, .L54+84
 560 01ea A847     		blx	r5
 561              	.LVL61:
 562 01ec 3C4E     		ldr	r6, .L54+88
 563 01ee 3D4C     		ldr	r4, .L54+92
 195:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 						KeyNum = Hw_KeyPad_GetEventKeyNum(HW_KEYPAD_EVENT_REPEAT);
 564              		.loc 1 195 0
 565 01f0 DFF81491 		ldr	r9, .L54+128
 197:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 						Lb_printf("%x KeyRepeat Cnt : %d\n",Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_REPEAT), Hw_Key
 566              		.loc 1 197 0
 567 01f4 3C4F     		ldr	r7, .L54+96
 568 01f6 DFF81481 		ldr	r8, .L54+132
 569 01fa 06E0     		b	.L30
 570              	.LVL62:
 571              	.L27:
 188:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_RELEASED) )
 572              		.loc 1 188 0
 573 01fc 4207     		lsls	r2, r0, #29
 574 01fe 29D4     		bmi	.L51
 193:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_REPEAT) )
 575              		.loc 1 193 0
 576 0200 8307     		lsls	r3, r0, #30
 577 0202 2DD4     		bmi	.L52
 578              	.LVL63:
 579              	.L28:
 200:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					KeyPressedCnt = Hw_KeyPad_GetPressedCnt();
 580              		.loc 1 200 0
 581 0204 A047     		blx	r4
 582              	.LVL64:
 202:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 					if( KeyPressedCnt >= 2 )
 583              		.loc 1 202 0
 584 0206 0128     		cmp	r0, #1
 585 0208 38D8     		bhi	.L53
 586              	.LVL65:
 587              	.L30:
 181:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			KeyEvent = Hw_KeyPad_WaitForEvent(1000);
 588              		.loc 1 181 0
 589 020a 4FF47A70 		mov	r0, #1000
 590 020e B047     		blx	r6
 591              	.LVL66:
 183:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            			if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_PRESSED) )
 592              		.loc 1 183 0
 593 0210 C107     		lsls	r1, r0, #31
 594 0212 F3D5     		bpl	.L27
 185:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            				Lb_printf("%x KeyPressed\n", Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_PRESSED) );  
 595              		.loc 1 185 0
 596 0214 0020     		movs	r0, #0
 597              	.LVL67:
 598 0216 B847     		blx	r7
 599              	.LVL68:
 600 0218 0146     		mov	r1, r0
 601 021a 3448     		ldr	r0, .L54+100
 602 021c A847     		blx	r5
 603              	.LVL69:
 604 021e F1E7     		b	.L28
 605              	.LVL70:
 606              	.L19:
 167:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Led_Toggle( 0 );
 607              		.loc 1 167 0
 608 0220 334D     		ldr	r5, .L54+104
 609 0222 0020     		movs	r0, #0
 168:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 610              		.loc 1 168 0
 611 0224 334C     		ldr	r4, .L54+108
 167:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Led_Toggle( 0 );
 612              		.loc 1 167 0
 613 0226 A847     		blx	r5
 614              	.LVL71:
 168:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 615              		.loc 1 168 0
 616 0228 4FF4FA70 		mov	r0, #500
 617 022c A047     		blx	r4
 618              	.LVL72:
 169:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Led_Toggle( 1 );
 619              		.loc 1 169 0
 620 022e 0120     		movs	r0, #1
 621 0230 A847     		blx	r5
 622              	.LVL73:
 170:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 623              		.loc 1 170 0
 624 0232 4FF4FA70 		mov	r0, #500
 625 0236 A047     		blx	r4
 626              	.LVL74:
 171:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Led_Toggle( 2 );;
 627              		.loc 1 171 0
 628 0238 0220     		movs	r0, #2
 629 023a A847     		blx	r5
 630              	.LVL75:
 172:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 631              		.loc 1 172 0
 632 023c 4FF4FA70 		mov	r0, #500
 633 0240 A047     		blx	r4
 634              	.LVL76:
 173:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Led_Toggle( 3 );
 635              		.loc 1 173 0
 636 0242 0320     		movs	r0, #3
 637 0244 A847     		blx	r5
 638              	.LVL77:
 174:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 639              		.loc 1 174 0
 640 0246 4FF4FA70 		mov	r0, #500
 641 024a A047     		blx	r4
 642              	.LVL78:
 175:../LIB_AP/Lib/Menu/Ap_EduMenu.c ****                	break;
 643              		.loc 1 175 0
 644 024c E7E6     		b	.L17
 645              	.LVL79:
 646              	.L25:
 280:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				Ap_EduMenu_ShowMenu();
 647              		.loc 1 280 0
 648 024e 124B     		ldr	r3, .L54+16
 649 0250 9847     		blx	r3
 650              	.LVL80:
 281:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				break;
 651              		.loc 1 281 0
 652 0252 E4E6     		b	.L17
 653              	.LVL81:
 654              	.L51:
 190:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 						Lb_printf("%x KeyReleased\n", Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_RELEASED) );         
 655              		.loc 1 190 0
 656 0254 0220     		movs	r0, #2
 657              	.LVL82:
 658 0256 B847     		blx	r7
 659              	.LVL83:
 660 0258 0146     		mov	r1, r0
 661 025a 2748     		ldr	r0, .L54+112
 662 025c A847     		blx	r5
 663              	.LVL84:
 664 025e D1E7     		b	.L28
 665              	.LVL85:
 666              	.L52:
 195:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 						KeyNum = Hw_KeyPad_GetEventKeyNum(HW_KEYPAD_EVENT_REPEAT);
 667              		.loc 1 195 0
 668 0260 0120     		movs	r0, #1
 669              	.LVL86:
 670 0262 C847     		blx	r9
 671              	.LVL87:
 672 0264 8346     		mov	fp, r0
 673              	.LVL88:
 197:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 						Lb_printf("%x KeyRepeat Cnt : %d\n",Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_REPEAT), Hw_Key
 674              		.loc 1 197 0
 675 0266 0120     		movs	r0, #1
 676              	.LVL89:
 677 0268 B847     		blx	r7
 678              	.LVL90:
 679 026a 8246     		mov	sl, r0
 680 026c 5FFA8BF0 		uxtb	r0, fp
 681 0270 C047     		blx	r8
 682              	.LVL91:
 683 0272 5146     		mov	r1, sl
 684 0274 0246     		mov	r2, r0
 685 0276 2148     		ldr	r0, .L54+116
 686 0278 A847     		blx	r5
 687              	.LVL92:
 688 027a C3E7     		b	.L28
 689              	.LVL93:
 690              	.L53:
 204:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 						Lb_printf("Key Exit\n");
 691              		.loc 1 204 0
 692 027c 2048     		ldr	r0, .L54+120
 693              	.LVL94:
 694 027e A847     		blx	r5
 695              	.LVL95:
 208:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				break;
 696              		.loc 1 208 0
 697 0280 CDE6     		b	.L17
 698              	.L33:
 242:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				Lb_printf("BT Test Exit\n");
 699              		.loc 1 242 0
 700 0282 2048     		ldr	r0, .L54+124
 701 0284 A847     		blx	r5
 702              	.LVL96:
 243:../LIB_AP/Lib/Menu/Ap_EduMenu.c **** 				break; 
 703              		.loc 1 243 0
 704 0286 CAE6     		b	.L17
 705              	.L55:
 706              		.align	2
 707              	.L54:
 708 0288 00000000 		.word	.LANCHOR1
 709 028c 00000000 		.word	Hw_Uart_GetchNoWait
 710 0290 E0020000 		.word	.LC16
 711 0294 00000000 		.word	Lb_printf
 712 0298 00000000 		.word	Ap_EduMenu_ShowMenu
 713 029c 00000000 		.word	Hw_KeyPad_SetEventFunc
 714 02a0 00000000 		.word	KeyPad_UpKeyEvent
 715 02a4 00000000 		.word	KeyPad_DownKeyEvent
 716 02a8 B4030000 		.word	.LC27
 717 02ac 00000000 		.word	Hw_Cds_GetData
 718 02b0 00000000 		.word	Hw_CLcd_Printf
 719 02b4 D8030000 		.word	.LC28
 720 02b8 E4030000 		.word	.LC29
 721 02bc 60030000 		.word	.LC23
 722 02c0 00000000 		.word	Hw_Uart_Printf
 723 02c4 80030000 		.word	.LC24
 724 02c8 90030000 		.word	.LC25
 725 02cc 00000000 		.word	.LANCHOR0
 726 02d0 54030000 		.word	.LC22
 727 02d4 00000000 		.word	.LC0
 728 02d8 00000000 		.word	Hw_7Seg_Printf
 729 02dc E8020000 		.word	.LC17
 730 02e0 00000000 		.word	Hw_KeyPad_WaitForEvent
 731 02e4 00000000 		.word	Hw_KeyPad_GetPressedCnt
 732 02e8 00000000 		.word	Hw_KeyPad_GetEventKeyData
 733 02ec 10030000 		.word	.LC18
 734 02f0 00000000 		.word	Hw_Led_Toggle
 735 02f4 00000000 		.word	Hw_Timer_Delay_ms
 736 02f8 20030000 		.word	.LC19
 737 02fc 30030000 		.word	.LC20
 738 0300 48030000 		.word	.LC21
 739 0304 A4030000 		.word	.LC26
 740 0308 00000000 		.word	Hw_KeyPad_GetEventKeyNum
 741 030c 00000000 		.word	Hw_KeyPad_GetRepeatCnt
 742              		.cfi_endproc
 743              	.LFE4:
 745              		.global	Seg_Count
 746              		.section	.data.ExeFirst.4494,"aw",%progbits
 747              		.set	.LANCHOR1,. + 0
 750              	ExeFirst.4494:
 751 0000 01       		.byte	1
 752              		.section	.rodata.str1.4,"aMS",%progbits,1
 753              		.align	2
 754              	.LC0:
 755 0000 256400   		.ascii	"%d\000"
 756 0003 00       		.space	1
 757              	.LC1:
 758 0004 0A0A00   		.ascii	"\012\012\000"
 759 0007 00       		.space	1
 760              	.LC2:
 761 0008 2A2A2A2A 		.ascii	"***************************************************"
 761      2A2A2A2A 
 761      2A2A2A2A 
 761      2A2A2A2A 
 761      2A2A2A2A 
 762 003b 2A2A2A2A 		.ascii	"****\012\000"
 762      0A00
 763 0041 000000   		.space	3
 764              	.LC3:
 765 0044 20202020 		.ascii	"                      Edu V0.6                     "
 765      20202020 
 765      20202020 
 765      20202020 
 765      20202020 
 766 0077 20202020 		.ascii	"    \012\000"
 766      0A00
 767 007d 000000   		.space	3
 768              	.LC4:
 769 0080 2A20312E 		.ascii	"* 1. Test.. LED                                    "
 769      20546573 
 769      742E2E20 
 769      4C454420 
 769      20202020 
 770 00b3 2020202A 		.ascii	"   *\012\000"
 770      0A00
 771 00b9 000000   		.space	3
 772              	.LC5:
 773 00bc 2A20322E 		.ascii	"* 2. Test.. KeyPad                                 "
 773      20546573 
 773      742E2E20 
 773      4B657950 
 773      61642020 
 774 00ef 2020202A 		.ascii	"   *\012\000"
 774      0A00
 775 00f5 000000   		.space	3
 776              	.LC6:
 777 00f8 2A20332E 		.ascii	"* 3. Test.. 7Seg                                   "
 777      20546573 
 777      742E2E20 
 777      37536567 
 777      20202020 
 778 012b 2020202A 		.ascii	"   *\012\000"
 778      0A00
 779 0131 000000   		.space	3
 780              	.LC7:
 781 0134 2A20342E 		.ascii	"* 4. Test.. CLcd                                   "
 781      20546573 
 781      742E2E20 
 781      434C6364 
 781      20202020 
 782 0167 2020202A 		.ascii	"   *\012\000"
 782      0A00
 783 016d 000000   		.space	3
 784              	.LC8:
 785 0170 2A20352E 		.ascii	"* 5. Test.. BT                                     "
 785      20546573 
 785      742E2E20 
 785      42542020 
 785      20202020 
 786 01a3 2020202A 		.ascii	"   *\012\000"
 786      0A00
 787 01a9 000000   		.space	3
 788              	.LC9:
 789 01ac 2A20362E 		.ascii	"* 6. Test.. Cds                                    "
 789      20546573 
 789      742E2E20 
 789      43647320 
 789      20202020 
 790 01df 2020202A 		.ascii	"   *\012\000"
 790      0A00
 791 01e5 000000   		.space	3
 792              	.LC10:
 793 01e8 2A20372E 		.ascii	"* 7.                                               "
 793      20202020 
 793      20202020 
 793      20202020 
 793      20202020 
 794 021b 2020202A 		.ascii	"   *\012\000"
 794      0A00
 795 0221 000000   		.space	3
 796              	.LC11:
 797 0224 2A20382E 		.ascii	"* 8.                                               "
 797      20202020 
 797      20202020 
 797      20202020 
 797      20202020 
 798 0257 2020202A 		.ascii	"   *\012\000"
 798      0A00
 799 025d 000000   		.space	3
 800              	.LC12:
 801 0260 2A20392E 		.ascii	"* 9.                                               "
 801      20202020 
 801      20202020 
 801      20202020 
 801      20202020 
 802 0293 2020202A 		.ascii	"   *\012\000"
 802      0A00
 803 0299 000000   		.space	3
 804              	.LC13:
 805 029c 2A206D2E 		.ascii	"* m.  Menu                                         "
 805      20204D65 
 805      6E752020 
 805      20202020 
 805      20202020 
 806 02cf 2020202A 		.ascii	"   *\012\000"
 806      0A00
 807 02d5 000000   		.space	3
 808              	.LC14:
 809 02d8 0A00     		.ascii	"\012\000"
 810 02da 0000     		.space	2
 811              	.LC15:
 812 02dc 3E3E2000 		.ascii	">> \000"
 813              	.LC16:
 814 02e0 3E3E2025 		.ascii	">> %c\012\000"
 814      630A00
 815 02e7 00       		.space	1
 816              	.LC17:
 817 02e8 4B657950 		.ascii	"KeyPad Start : press two keys to exit\012\000"
 817      61642053 
 817      74617274 
 817      203A2070 
 817      72657373 
 818 030f 00       		.space	1
 819              	.LC18:
 820 0310 2578204B 		.ascii	"%x KeyPressed\012\000"
 820      65795072 
 820      65737365 
 820      640A00
 821 031f 00       		.space	1
 822              	.LC19:
 823 0320 2578204B 		.ascii	"%x KeyReleased\012\000"
 823      65795265 
 823      6C656173 
 823      65640A00 
 824              	.LC20:
 825 0330 2578204B 		.ascii	"%x KeyRepeat Cnt : %d\012\000"
 825      65795265 
 825      70656174 
 825      20436E74 
 825      203A2025 
 826 0347 00       		.space	1
 827              	.LC21:
 828 0348 4B657920 		.ascii	"Key Exit\012\000"
 828      45786974 
 828      0A00
 829 0352 0000     		.space	2
 830              	.LC22:
 831 0354 436E7420 		.ascii	"Cnt : %d\000"
 831      3A202564 
 831      00
 832 035d 000000   		.space	3
 833              	.LC23:
 834 0360 42542054 		.ascii	"BT Test Start, press x to exit\012\000"
 834      65737420 
 834      53746172 
 834      742C2070 
 834      72657373 
 835              	.LC24:
 836 0380 42542052 		.ascii	"BT Rxd : %c \012\000"
 836      7864203A 
 836      20256320 
 836      0A00
 837 038e 0000     		.space	2
 838              	.LC25:
 839 0390 4D656E75 		.ascii	"Menu:Send : %c\015\012\000"
 839      3A53656E 
 839      64203A20 
 839      25630D0A 
 839      00
 840 03a1 000000   		.space	3
 841              	.LC26:
 842 03a4 42542054 		.ascii	"BT Test Exit\012\000"
 842      65737420 
 842      45786974 
 842      0A00
 843 03b2 0000     		.space	2
 844              	.LC27:
 845 03b4 43647320 		.ascii	"Cds Test Start, press x to exit\012\000"
 845      54657374 
 845      20537461 
 845      72742C20 
 845      70726573 
 846 03d5 000000   		.space	3
 847              	.LC28:
 848 03d8 43647320 		.ascii	"Cds : %d\000"
 848      3A202564 
 848      00
 849 03e1 000000   		.space	3
 850              	.LC29:
 851 03e4 43647320 		.ascii	"Cds Test Exit\012\000"
 851      54657374 
 851      20457869 
 851      740A00
 852 03f3 00       		.section	.bss.Seg_Count,"aw",%nobits
 853              		.align	1
 854              		.set	.LANCHOR0,. + 0
 857              	Seg_Count:
 858 0000 0000     		.space	2
 859              		.text
 860              	.Letext0:
 861              		.file 2 "../LIB_HW/Core/Hw_Define.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ap_EduMenu.c
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:19     .text.KeyPad_DownKeyEvent:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:24     .text.KeyPad_DownKeyEvent:0000000000000000 KeyPad_DownKeyEvent
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:70     .text.KeyPad_DownKeyEvent:0000000000000020 $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:79     .text.KeyPad_UpKeyEvent:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:84     .text.KeyPad_UpKeyEvent:0000000000000000 KeyPad_UpKeyEvent
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:122    .text.KeyPad_UpKeyEvent:000000000000001c $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:131    .text.Ap_EduMenu_ShowMenu:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:136    .text.Ap_EduMenu_ShowMenu:0000000000000000 Ap_EduMenu_ShowMenu
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:757    .rodata.str1.4:0000000000000004 .LC1
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:760    .rodata.str1.4:0000000000000008 .LC2
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:764    .rodata.str1.4:0000000000000044 .LC3
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:768    .rodata.str1.4:0000000000000080 .LC4
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:772    .rodata.str1.4:00000000000000bc .LC5
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:776    .rodata.str1.4:00000000000000f8 .LC6
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:780    .rodata.str1.4:0000000000000134 .LC7
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:784    .rodata.str1.4:0000000000000170 .LC8
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:788    .rodata.str1.4:00000000000001ac .LC9
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:792    .rodata.str1.4:00000000000001e8 .LC10
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:796    .rodata.str1.4:0000000000000224 .LC11
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:800    .rodata.str1.4:0000000000000260 .LC12
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:804    .rodata.str1.4:000000000000029c .LC13
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:808    .rodata.str1.4:00000000000002d8 .LC14
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:239    .text.Ap_EduMenu_GetCmd:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:244    .text.Ap_EduMenu_GetCmd:0000000000000000 Ap_EduMenu_GetCmd
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:811    .rodata.str1.4:00000000000002dc .LC15
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:284    .text.Ap_EduMenu_ExeCmd:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:289    .text.Ap_EduMenu_ExeCmd:0000000000000000 Ap_EduMenu_ExeCmd
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:357    .text.Ap_EduMenu_ExeCmd:0000000000000044 $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:421    .text.Ap_EduMenu_ExeCmd:0000000000000138 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:708    .text.Ap_EduMenu_ExeCmd:0000000000000288 $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:857    .bss.Seg_Count:0000000000000000 Seg_Count
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:750    .data.ExeFirst.4494:0000000000000000 ExeFirst.4494
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:753    .rodata.str1.4:0000000000000000 $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccr2XYx2.s:853    .bss.Seg_Count:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
Hw_7Seg_Printf
Lb_printf
get_byte
Hw_Uart_GetchNoWait
Hw_KeyPad_SetEventFunc
Hw_Cds_GetData
Hw_CLcd_Printf
Hw_Uart_Printf
Hw_KeyPad_WaitForEvent
Hw_KeyPad_GetPressedCnt
Hw_KeyPad_GetEventKeyData
Hw_Led_Toggle
Hw_Timer_Delay_ms
Hw_KeyPad_GetEventKeyNum
Hw_KeyPad_GetRepeatCnt
