   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Ap_StrCmd.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Ap_StrCmd_PutFunc,"ax",%progbits
  19              		.align	2
  20              		.global	Ap_StrCmd_PutFunc
  21              		.thumb
  22              		.thumb_func
  24              	Ap_StrCmd_PutFunc:
  25              	.LFB0:
  26              		.file 1 "../LIB_AP/Core/Ap_StrCmd.c"
   1:../LIB_AP/Core/Ap_StrCmd.c **** //----------------------------------------------------------------------------
   2:../LIB_AP/Core/Ap_StrCmd.c **** //    프로그램명 	: StrCmd 관련 함수
   3:../LIB_AP/Core/Ap_StrCmd.c **** //
   4:../LIB_AP/Core/Ap_StrCmd.c **** //    만든이     	: 
   5:../LIB_AP/Core/Ap_StrCmd.c **** //
   6:../LIB_AP/Core/Ap_StrCmd.c **** //    날  짜     	: 
   7:../LIB_AP/Core/Ap_StrCmd.c **** //    
   8:../LIB_AP/Core/Ap_StrCmd.c **** //    최종 수정  	: 
   9:../LIB_AP/Core/Ap_StrCmd.c **** //
  10:../LIB_AP/Core/Ap_StrCmd.c **** //    MPU_Type 		:
  11:../LIB_AP/Core/Ap_StrCmd.c **** //
  12:../LIB_AP/Core/Ap_StrCmd.c **** //    파일명     	: AP_StrCmd.c
  13:../LIB_AP/Core/Ap_StrCmd.c **** //----------------------------------------------------------------------------
  14:../LIB_AP/Core/Ap_StrCmd.c **** 
  15:../LIB_AP/Core/Ap_StrCmd.c **** 
  16:../LIB_AP/Core/Ap_StrCmd.c **** 
  17:../LIB_AP/Core/Ap_StrCmd.c **** 
  18:../LIB_AP/Core/Ap_StrCmd.c **** 
  19:../LIB_AP/Core/Ap_StrCmd.c **** //----- 헤더파일 열기
  20:../LIB_AP/Core/Ap_StrCmd.c **** //
  21:../LIB_AP/Core/Ap_StrCmd.c **** #define  AP_STRCMD_LOCAL  
  22:../LIB_AP/Core/Ap_StrCmd.c **** 
  23:../LIB_AP/Core/Ap_StrCmd.c **** #include "Ap_StrCmd.h"
  24:../LIB_AP/Core/Ap_StrCmd.c **** #include "Ap_StrCmd_Q.h"
  25:../LIB_AP/Core/Ap_StrCmd.c **** 
  26:../LIB_AP/Core/Ap_StrCmd.c **** 
  27:../LIB_AP/Core/Ap_StrCmd.c **** //#include <stdarg.h >
  28:../LIB_AP/Core/Ap_StrCmd.c **** #include <ctype.h>
  29:../LIB_AP/Core/Ap_StrCmd.c **** #include <string.h>
  30:../LIB_AP/Core/Ap_StrCmd.c **** 
  31:../LIB_AP/Core/Ap_StrCmd.c **** 
  32:../LIB_AP/Core/Ap_StrCmd.c **** //-- 내부 선언
  33:../LIB_AP/Core/Ap_StrCmd.c **** //
  34:../LIB_AP/Core/Ap_StrCmd.c **** 
  35:../LIB_AP/Core/Ap_StrCmd.c **** 
  36:../LIB_AP/Core/Ap_StrCmd.c **** 
  37:../LIB_AP/Core/Ap_StrCmd.c **** //-- 내부 변수
  38:../LIB_AP/Core/Ap_StrCmd.c **** //
  39:../LIB_AP/Core/Ap_StrCmd.c **** AP_STRCMD_OBJ 	Ap_StrCmd_Dic_Ptr[AP_STRCMD_DIC_MAX];	// 명령어 정보를 가지고 있는 구조
  40:../LIB_AP/Core/Ap_StrCmd.c **** 
  41:../LIB_AP/Core/Ap_StrCmd.c **** volatile u16 	Ap_StrCmd_Size;							// 명령어 갯수
  42:../LIB_AP/Core/Ap_StrCmd.c **** 
  43:../LIB_AP/Core/Ap_StrCmd.c **** 
  44:../LIB_AP/Core/Ap_StrCmd.c **** volatile u16 	Ap_StrCmd_ChSize;     					// 시리얼로 들어오는 문자 갯수
  45:../LIB_AP/Core/Ap_StrCmd.c **** volatile char	Ap_StrCmd_CmdCheck;   					// 명령어가 완료 되었는지?
  46:../LIB_AP/Core/Ap_StrCmd.c **** char			Ap_StrCmd_CmdStr[AP_STRCMD_STR_MAX];	// 명령어 문자열
  47:../LIB_AP/Core/Ap_StrCmd.c **** char			Ap_StrCmd_CmdStrExe[AP_STRCMD_STR_MAX]; // 실행하기 위한 
  48:../LIB_AP/Core/Ap_StrCmd.c **** 
  49:../LIB_AP/Core/Ap_StrCmd.c **** void            (*Ap_StrCmd_PutchPtr)( char );  		// 시리얼로 데이터 1바이트 보내는것
  50:../LIB_AP/Core/Ap_StrCmd.c **** void            (*Ap_StrCmd_PrintPtr)( char *);  
  51:../LIB_AP/Core/Ap_StrCmd.c **** 
  52:../LIB_AP/Core/Ap_StrCmd.c **** volatile u8		Ap_StrCmd_EchoEnable = FALSE;
  53:../LIB_AP/Core/Ap_StrCmd.c **** 
  54:../LIB_AP/Core/Ap_StrCmd.c **** //-- 내부 함수
  55:../LIB_AP/Core/Ap_StrCmd.c **** //
  56:../LIB_AP/Core/Ap_StrCmd.c **** u16  Ap_StrCmd_StrLen( char *Dest );
  57:../LIB_AP/Core/Ap_StrCmd.c **** u16  Ap_StrCmd_CmdStrLen( char *Dest );
  58:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_StrCopy( char *Dest, char *Origin );
  59:../LIB_AP/Core/Ap_StrCmd.c ****                               
  60:../LIB_AP/Core/Ap_StrCmd.c **** 
  61:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_Echo( u8 OpCode,  void *arg );
  62:../LIB_AP/Core/Ap_StrCmd.c **** 
  63:../LIB_AP/Core/Ap_StrCmd.c **** 
  64:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_PutFunc( char Ch )
  65:../LIB_AP/Core/Ap_StrCmd.c **** {
  27              		.loc 1 65 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  66:../LIB_AP/Core/Ap_StrCmd.c **** 	Hw_Uart_Putch( HW_USE_UART_CH_STRCMD, Ch );
  37              		.loc 1 66 0
  38 0002 40F20003 		movw	r3, #:lower16:Hw_Uart_Putch
  65:../LIB_AP/Core/Ap_StrCmd.c **** {
  39              		.loc 1 65 0
  40 0006 0146     		mov	r1, r0
  41              		.loc 1 66 0
  42 0008 C0F20003 		movt	r3, #:upper16:Hw_Uart_Putch
  43 000c 0120     		movs	r0, #1
  44              	.LVL1:
  45 000e 9847     		blx	r3
  46              	.LVL2:
  47 0010 08BD     		pop	{r3, pc}
  48              		.cfi_endproc
  49              	.LFE0:
  51 0012 00BF     		.section	.text.Ap_StrCmd_CallBack_RxdISR,"ax",%progbits
  52              		.align	2
  53              		.global	Ap_StrCmd_CallBack_RxdISR
  54              		.thumb
  55              		.thumb_func
  57              	Ap_StrCmd_CallBack_RxdISR:
  58              	.LFB7:
  67:../LIB_AP/Core/Ap_StrCmd.c **** }
  68:../LIB_AP/Core/Ap_StrCmd.c **** 
  69:../LIB_AP/Core/Ap_StrCmd.c **** 
  70:../LIB_AP/Core/Ap_StrCmd.c **** 
  71:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
  72:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_Init
  73:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
  74:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
  75:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
  76:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
  77:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_Init( void )
  78:../LIB_AP/Core/Ap_StrCmd.c **** {
  79:../LIB_AP/Core/Ap_StrCmd.c **** 	int i;
  80:../LIB_AP/Core/Ap_StrCmd.c **** 		
  81:../LIB_AP/Core/Ap_StrCmd.c **** 	//----- 명령어 사전 포인터 초기화
  82:../LIB_AP/Core/Ap_StrCmd.c **** 	//
  83:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<AP_STRCMD_DIC_MAX; i++)
  84:../LIB_AP/Core/Ap_StrCmd.c **** 	{
  85:../LIB_AP/Core/Ap_StrCmd.c **** 		AP_STRCMD_DIC_FUNC(i)   = NULL_FUNC;  // 모두 어떠한 함수도 가르키지 않는다
  86:../LIB_AP/Core/Ap_StrCmd.c **** 	}    
  87:../LIB_AP/Core/Ap_StrCmd.c **** 		
  88:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Size     	= 0;				
  89:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_ChSize   	= 0;
  90:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdCheck 	= 0;	
  91:../LIB_AP/Core/Ap_StrCmd.c **** 	
  92:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_PutchPtr 	= NULL;
  93:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_PrintPtr 	= NULL;
  94:../LIB_AP/Core/Ap_StrCmd.c **** 	
  95:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_EchoEnable = FALSE;
  96:../LIB_AP/Core/Ap_StrCmd.c **** 
  97:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_AddCmd( "HELP", "Menu Help",        Ap_StrCmd_ShowMenuHelp );	
  98:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_AddCmd( "MENU", "Display Menu",     Ap_StrCmd_ShowMenu );
  99:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_AddCmd( "INFO", "Info",     		  Ap_StrCmd_ShowInfo );
 100:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_AddCmd( "ECHO", "Echo",     		  Ap_StrCmd_Echo );
 101:../LIB_AP/Core/Ap_StrCmd.c **** 
 102:../LIB_AP/Core/Ap_StrCmd.c **** 
 103:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Q_Init();
 104:../LIB_AP/Core/Ap_StrCmd.c **** 
 105:../LIB_AP/Core/Ap_StrCmd.c **** 
 106:../LIB_AP/Core/Ap_StrCmd.c **** 	//-- 통신 함수 설정 
 107:../LIB_AP/Core/Ap_StrCmd.c **** 	//
 108:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_SetFunc_Putch( Ap_StrCmd_PutFunc );
 109:../LIB_AP/Core/Ap_StrCmd.c **** 
 110:../LIB_AP/Core/Ap_StrCmd.c **** 	Hw_Uart_SetReceiveFuncISR( HW_USE_UART_CH_STRCMD, Ap_StrCmd_CallBack_RxdISR );
 111:../LIB_AP/Core/Ap_StrCmd.c **** }
 112:../LIB_AP/Core/Ap_StrCmd.c **** 
 113:../LIB_AP/Core/Ap_StrCmd.c **** 
 114:../LIB_AP/Core/Ap_StrCmd.c **** 
 115:../LIB_AP/Core/Ap_StrCmd.c **** 
 116:../LIB_AP/Core/Ap_StrCmd.c **** 
 117:../LIB_AP/Core/Ap_StrCmd.c **** 
 118:../LIB_AP/Core/Ap_StrCmd.c **** 
 119:../LIB_AP/Core/Ap_StrCmd.c **** 
 120:../LIB_AP/Core/Ap_StrCmd.c **** 
 121:../LIB_AP/Core/Ap_StrCmd.c **** 
 122:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 123:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_Menu
 124:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 125:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 126:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 127:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 128:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_ShowMenu( u8 OpCode, void *arg )
 129:../LIB_AP/Core/Ap_StrCmd.c **** {
 130:../LIB_AP/Core/Ap_StrCmd.c **** 	u16 i;
 131:../LIB_AP/Core/Ap_StrCmd.c **** 	char StrBuf[200];
 132:../LIB_AP/Core/Ap_StrCmd.c **** 	
 133:../LIB_AP/Core/Ap_StrCmd.c **** 	OpCode = OpCode;
 134:../LIB_AP/Core/Ap_StrCmd.c **** 	arg = arg;
 135:../LIB_AP/Core/Ap_StrCmd.c **** 	
 136:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<Ap_StrCmd_GetSize(); i++ )
 137:../LIB_AP/Core/Ap_StrCmd.c **** 	{
 138:../LIB_AP/Core/Ap_StrCmd.c **** 		Lb_sprintf( StrBuf, "%c%s\n", AP_STRCMD_FRAME_PRINT, Ap_StrCmd_Dic_Ptr[i].NameStr );
 139:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_Print( StrBuf );
 140:../LIB_AP/Core/Ap_StrCmd.c **** 	}			
 141:../LIB_AP/Core/Ap_StrCmd.c **** 
 142:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdClear();
 143:../LIB_AP/Core/Ap_StrCmd.c **** }
 144:../LIB_AP/Core/Ap_StrCmd.c **** 
 145:../LIB_AP/Core/Ap_StrCmd.c **** 
 146:../LIB_AP/Core/Ap_StrCmd.c **** 
 147:../LIB_AP/Core/Ap_StrCmd.c **** 
 148:../LIB_AP/Core/Ap_StrCmd.c **** 
 149:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 150:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_ShowMenuHelp
 151:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 152:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 153:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 154:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 155:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_ShowMenuHelp( u8 OpCode,  void *arg )
 156:../LIB_AP/Core/Ap_StrCmd.c **** {
 157:../LIB_AP/Core/Ap_StrCmd.c **** 	u16 i;
 158:../LIB_AP/Core/Ap_StrCmd.c **** 	char StrBuf[100];
 159:../LIB_AP/Core/Ap_StrCmd.c **** 	
 160:../LIB_AP/Core/Ap_StrCmd.c **** 	arg = arg;
 161:../LIB_AP/Core/Ap_StrCmd.c **** 
 162:../LIB_AP/Core/Ap_StrCmd.c **** 	
 163:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<Ap_StrCmd_GetSize(); i++ )
 164:../LIB_AP/Core/Ap_StrCmd.c **** 	{
 165:../LIB_AP/Core/Ap_StrCmd.c **** 		Lb_sprintf( StrBuf, "%c<%s> - %s\n", AP_STRCMD_FRAME_PRINT, Ap_StrCmd_Dic_Ptr[i].NameStr, Ap_StrC
 166:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_Print( StrBuf );
 167:../LIB_AP/Core/Ap_StrCmd.c **** 	}			
 168:../LIB_AP/Core/Ap_StrCmd.c **** 	
 169:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdClear();
 170:../LIB_AP/Core/Ap_StrCmd.c **** 
 171:../LIB_AP/Core/Ap_StrCmd.c **** }
 172:../LIB_AP/Core/Ap_StrCmd.c **** 
 173:../LIB_AP/Core/Ap_StrCmd.c **** 
 174:../LIB_AP/Core/Ap_StrCmd.c **** 
 175:../LIB_AP/Core/Ap_StrCmd.c **** 
 176:../LIB_AP/Core/Ap_StrCmd.c **** 
 177:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 178:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_ShowInfo
 179:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 180:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 181:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 182:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 183:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_ShowInfo( u8 OpCode,  void *arg )
 184:../LIB_AP/Core/Ap_StrCmd.c **** {
 185:../LIB_AP/Core/Ap_StrCmd.c **** 	OpCode = OpCode;
 186:../LIB_AP/Core/Ap_StrCmd.c **** 	arg = arg;
 187:../LIB_AP/Core/Ap_StrCmd.c **** 
 188:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Printf( "%c----------------------------------------- \r\n", AP_STRCMD_FRAME_PRINT );
 189:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Printf( "%c             Ap_StrCmd v0.1               \r\n", AP_STRCMD_FRAME_PRINT );
 190:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Printf( "%c                                          \r\n", AP_STRCMD_FRAME_PRINT );
 191:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Printf( "%c        made by : Cho Han Cheol           \r\n", AP_STRCMD_FRAME_PRINT );	
 192:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Printf( "%c----------------------------------------- \r\n", AP_STRCMD_FRAME_PRINT );
 193:../LIB_AP/Core/Ap_StrCmd.c **** 	
 194:../LIB_AP/Core/Ap_StrCmd.c **** 
 195:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdClear();
 196:../LIB_AP/Core/Ap_StrCmd.c **** }
 197:../LIB_AP/Core/Ap_StrCmd.c **** 
 198:../LIB_AP/Core/Ap_StrCmd.c **** 
 199:../LIB_AP/Core/Ap_StrCmd.c **** 
 200:../LIB_AP/Core/Ap_StrCmd.c **** 
 201:../LIB_AP/Core/Ap_StrCmd.c **** 
 202:../LIB_AP/Core/Ap_StrCmd.c **** 
 203:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 204:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_Echo
 205:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 206:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 207:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 208:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 209:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_Echo( u8 OpCode,  void *arg )
 210:../LIB_AP/Core/Ap_StrCmd.c **** {
 211:../LIB_AP/Core/Ap_StrCmd.c **** 	char CmdMain[10];
 212:../LIB_AP/Core/Ap_StrCmd.c **** 	char Arg1[10];
 213:../LIB_AP/Core/Ap_StrCmd.c **** 
 214:../LIB_AP/Core/Ap_StrCmd.c **** 	OpCode = OpCode;
 215:../LIB_AP/Core/Ap_StrCmd.c **** 	arg = arg;
 216:../LIB_AP/Core/Ap_StrCmd.c **** 
 217:../LIB_AP/Core/Ap_StrCmd.c **** 	sscanf(arg, "%s %s", CmdMain, Arg1);
 218:../LIB_AP/Core/Ap_StrCmd.c **** 
 219:../LIB_AP/Core/Ap_StrCmd.c **** 	if( strncmp( Arg1, "ON", 2 ) == 0 )
 220:../LIB_AP/Core/Ap_StrCmd.c **** 	{
 221:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_EchoEnable = TRUE;
 222:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_Printf("%cEcho on\n", AP_STRCMD_FRAME_PRINT);
 223:../LIB_AP/Core/Ap_StrCmd.c **** 	}
 224:../LIB_AP/Core/Ap_StrCmd.c **** 	else
 225:../LIB_AP/Core/Ap_StrCmd.c **** 	{
 226:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_EchoEnable = FALSE;
 227:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_Printf("%cEcho off\n", AP_STRCMD_FRAME_PRINT);	
 228:../LIB_AP/Core/Ap_StrCmd.c **** 	}
 229:../LIB_AP/Core/Ap_StrCmd.c **** 
 230:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdClear();
 231:../LIB_AP/Core/Ap_StrCmd.c **** }
 232:../LIB_AP/Core/Ap_StrCmd.c **** 
 233:../LIB_AP/Core/Ap_StrCmd.c **** 
 234:../LIB_AP/Core/Ap_StrCmd.c **** 
 235:../LIB_AP/Core/Ap_StrCmd.c **** 
 236:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 237:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_SetFunc_Putch
 238:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 239:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 240:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 241:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 242:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_SetFunc_Putch( void (*FuncPtr)( char ) )
 243:../LIB_AP/Core/Ap_StrCmd.c **** {
 244:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_PutchPtr = FuncPtr;
 245:../LIB_AP/Core/Ap_StrCmd.c **** }
 246:../LIB_AP/Core/Ap_StrCmd.c **** 
 247:../LIB_AP/Core/Ap_StrCmd.c **** 
 248:../LIB_AP/Core/Ap_StrCmd.c **** 
 249:../LIB_AP/Core/Ap_StrCmd.c **** 
 250:../LIB_AP/Core/Ap_StrCmd.c **** 
 251:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 252:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_CallBack_RxdISR
 253:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 254:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 255:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 256:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 257:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_CallBack_RxdISR( char Ch )
 258:../LIB_AP/Core/Ap_StrCmd.c **** {	
  59              		.loc 1 258 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              	.LVL3:
  64 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 24
  67              		.cfi_offset 3, -24
  68              		.cfi_offset 4, -20
  69              		.cfi_offset 5, -16
  70              		.cfi_offset 6, -12
  71              		.cfi_offset 7, -8
  72              		.cfi_offset 14, -4
 259:../LIB_AP/Core/Ap_StrCmd.c **** 
 260:../LIB_AP/Core/Ap_StrCmd.c **** 	if( Ap_StrCmd_ChSize >= AP_STRCMD_STR_MAX )
  73              		.loc 1 260 0
  74 0002 1A4B     		ldr	r3, .L14
 258:../LIB_AP/Core/Ap_StrCmd.c **** {	
  75              		.loc 1 258 0
  76 0004 0446     		mov	r4, r0
  77              		.loc 1 260 0
  78 0006 1A88     		ldrh	r2, [r3, #0]
  79 0008 92B2     		uxth	r2, r2
  80 000a 3B2A     		cmp	r2, #59
  81 000c 01D9     		bls	.L3
 261:../LIB_AP/Core/Ap_StrCmd.c **** 	{
 262:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_ChSize = 0;
  82              		.loc 1 262 0
  83 000e 0022     		movs	r2, #0
  84 0010 1A80     		strh	r2, [r3, #0]	@ movhi
  85              	.L3:
 263:../LIB_AP/Core/Ap_StrCmd.c **** 	}
 264:../LIB_AP/Core/Ap_StrCmd.c **** 	
 265:../LIB_AP/Core/Ap_StrCmd.c **** 	//Ch = toupper( Ch );
 266:../LIB_AP/Core/Ap_StrCmd.c **** 	
 267:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdStr[ Ap_StrCmd_ChSize ] = Ch;
  86              		.loc 1 267 0
  87 0012 1888     		ldrh	r0, [r3, #0]
  88              	.LVL4:
 268:../LIB_AP/Core/Ap_StrCmd.c **** 	
 269:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_ChSize++;
  89              		.loc 1 269 0
  90 0014 1988     		ldrh	r1, [r3, #0]
 267:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdStr[ Ap_StrCmd_ChSize ] = Ch;
  91              		.loc 1 267 0
  92 0016 164A     		ldr	r2, .L14+4
  93              		.loc 1 269 0
  94 0018 0131     		adds	r1, r1, #1
 267:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdStr[ Ap_StrCmd_ChSize ] = Ch;
  95              		.loc 1 267 0
  96 001a 80B2     		uxth	r0, r0
  97              		.loc 1 269 0
  98 001c 89B2     		uxth	r1, r1
 270:../LIB_AP/Core/Ap_StrCmd.c **** 	
 271:../LIB_AP/Core/Ap_StrCmd.c **** 
 272:../LIB_AP/Core/Ap_StrCmd.c **** 	if( Ch == 0x0D )  // '\n'
  99              		.loc 1 272 0
 100 001e 0D2C     		cmp	r4, #13
 269:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_ChSize++;
 101              		.loc 1 269 0
 102 0020 1980     		strh	r1, [r3, #0]	@ movhi
 267:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdStr[ Ap_StrCmd_ChSize ] = Ch;
 103              		.loc 1 267 0
 104 0022 1454     		strb	r4, [r2, r0]
 105 0024 114B     		ldr	r3, .L14
 106              		.loc 1 272 0
 107 0026 10D0     		beq	.L12
 108              	.L4:
 273:../LIB_AP/Core/Ap_StrCmd.c **** 	{
 274:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_CmdStr[ Ap_StrCmd_ChSize ] = 0;
 275:../LIB_AP/Core/Ap_StrCmd.c **** 		
 276:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_ChSize    = 0;
 277:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_DlyCheck  = 1;
 278:../LIB_AP/Core/Ap_StrCmd.c **** 		
 279:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_CmdCheck  = 1;
 280:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_LoopCheck = 1;
 281:../LIB_AP/Core/Ap_StrCmd.c **** 		
 282:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_Q_Push( AP_STRCMD_Q_RX_CH, (AP_STRCMD_CMD_OBJ *)Ap_StrCmd_CmdStr );
 283:../LIB_AP/Core/Ap_StrCmd.c **** 	}
 284:../LIB_AP/Core/Ap_StrCmd.c **** 
 285:../LIB_AP/Core/Ap_StrCmd.c **** 	if( Ap_StrCmd_EchoEnable == TRUE )
 109              		.loc 1 285 0
 110 0028 124B     		ldr	r3, .L14+8
 111 002a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 112 002c 012B     		cmp	r3, #1
 113 002e 00D0     		beq	.L13
 114              	.L2:
 115 0030 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 116              	.L13:
 286:../LIB_AP/Core/Ap_StrCmd.c **** 	{
 287:../LIB_AP/Core/Ap_StrCmd.c **** 		if( Ap_StrCmd_PutchPtr != NULL_FUNC )
 117              		.loc 1 287 0
 118 0032 114D     		ldr	r5, .L14+12
 119 0034 2B68     		ldr	r3, [r5, #0]
 120 0036 002B     		cmp	r3, #0
 121 0038 FAD0     		beq	.L2
 288:../LIB_AP/Core/Ap_StrCmd.c **** 		{
 289:../LIB_AP/Core/Ap_StrCmd.c **** 
 290:../LIB_AP/Core/Ap_StrCmd.c **** 			(*Ap_StrCmd_PutchPtr)( Ch );
 122              		.loc 1 290 0
 123 003a 2046     		mov	r0, r4
 124 003c 9847     		blx	r3
 125              	.LVL5:
 291:../LIB_AP/Core/Ap_StrCmd.c **** 			
 292:../LIB_AP/Core/Ap_StrCmd.c **** 			if( Ch == '\r' )
 126              		.loc 1 292 0
 127 003e 0D2C     		cmp	r4, #13
 128 0040 F6D1     		bne	.L2
 129              	.LBB45:
 130              	.LBB46:
 293:../LIB_AP/Core/Ap_StrCmd.c **** 			{
 294:../LIB_AP/Core/Ap_StrCmd.c **** 				(*Ap_StrCmd_PutchPtr)( '\n' );	
 131              		.loc 1 294 0
 132 0042 2B68     		ldr	r3, [r5, #0]
 133 0044 0A20     		movs	r0, #10
 134 0046 9847     		blx	r3
 135              	.LVL6:
 136 0048 F2E7     		b	.L2
 137              	.L12:
 138              	.LBE46:
 139              	.LBE45:
 274:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_CmdStr[ Ap_StrCmd_ChSize ] = 0;
 140              		.loc 1 274 0
 141 004a 0026     		movs	r6, #0
 142 004c 1F88     		ldrh	r7, [r3, #0]
 276:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_ChSize    = 0;
 143              		.loc 1 276 0
 144 004e 1E80     		strh	r6, [r3, #0]	@ movhi
 277:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_DlyCheck  = 1;
 145              		.loc 1 277 0
 146 0050 0A4B     		ldr	r3, .L14+16
 147 0052 0125     		movs	r5, #1
 148 0054 1D70     		strb	r5, [r3, #0]
 279:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_CmdCheck  = 1;
 149              		.loc 1 279 0
 150 0056 0A4B     		ldr	r3, .L14+20
 274:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_CmdStr[ Ap_StrCmd_ChSize ] = 0;
 151              		.loc 1 274 0
 152 0058 BFB2     		uxth	r7, r7
 279:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_CmdCheck  = 1;
 153              		.loc 1 279 0
 154 005a 1D70     		strb	r5, [r3, #0]
 280:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_LoopCheck = 1;
 155              		.loc 1 280 0
 156 005c 094B     		ldr	r3, .L14+24
 282:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_Q_Push( AP_STRCMD_Q_RX_CH, (AP_STRCMD_CMD_OBJ *)Ap_StrCmd_CmdStr );
 157              		.loc 1 282 0
 158 005e 3046     		mov	r0, r6
 280:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_LoopCheck = 1;
 159              		.loc 1 280 0
 160 0060 1D70     		strb	r5, [r3, #0]
 282:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_Q_Push( AP_STRCMD_Q_RX_CH, (AP_STRCMD_CMD_OBJ *)Ap_StrCmd_CmdStr );
 161              		.loc 1 282 0
 162 0062 1146     		mov	r1, r2
 163 0064 084B     		ldr	r3, .L14+28
 274:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_CmdStr[ Ap_StrCmd_ChSize ] = 0;
 164              		.loc 1 274 0
 165 0066 D655     		strb	r6, [r2, r7]
 282:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_Q_Push( AP_STRCMD_Q_RX_CH, (AP_STRCMD_CMD_OBJ *)Ap_StrCmd_CmdStr );
 166              		.loc 1 282 0
 167 0068 9847     		blx	r3
 168              	.LVL7:
 169 006a DDE7     		b	.L4
 170              	.L15:
 171              		.align	2
 172              	.L14:
 173 006c 00000000 		.word	Ap_StrCmd_ChSize
 174 0070 00000000 		.word	Ap_StrCmd_CmdStr
 175 0074 00000000 		.word	.LANCHOR0
 176 0078 00000000 		.word	Ap_StrCmd_PutchPtr
 177 007c 00000000 		.word	Ap_StrCmd_DlyCheck
 178 0080 00000000 		.word	Ap_StrCmd_CmdCheck
 179 0084 00000000 		.word	Ap_StrCmd_LoopCheck
 180 0088 00000000 		.word	Ap_StrCmd_Q_Push
 181              		.cfi_endproc
 182              	.LFE7:
 184              		.section	.text.Ap_StrCmd_SetFunc_Putch,"ax",%progbits
 185              		.align	2
 186              		.global	Ap_StrCmd_SetFunc_Putch
 187              		.thumb
 188              		.thumb_func
 190              	Ap_StrCmd_SetFunc_Putch:
 191              	.LFB6:
 243:../LIB_AP/Core/Ap_StrCmd.c **** {
 192              		.loc 1 243 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197              	.LVL8:
 244:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_PutchPtr = FuncPtr;
 198              		.loc 1 244 0
 199 0000 40F20003 		movw	r3, #:lower16:Ap_StrCmd_PutchPtr
 200 0004 C0F20003 		movt	r3, #:upper16:Ap_StrCmd_PutchPtr
 201 0008 1860     		str	r0, [r3, #0]
 202 000a 7047     		bx	lr
 203              		.cfi_endproc
 204              	.LFE6:
 206              		.section	.text.Ap_StrCmd_Putch,"ax",%progbits
 207              		.align	2
 208              		.global	Ap_StrCmd_Putch
 209              		.thumb
 210              		.thumb_func
 212              	Ap_StrCmd_Putch:
 213              	.LFB8:
 295:../LIB_AP/Core/Ap_StrCmd.c **** 			}
 296:../LIB_AP/Core/Ap_StrCmd.c **** 		}		
 297:../LIB_AP/Core/Ap_StrCmd.c **** 	}    
 298:../LIB_AP/Core/Ap_StrCmd.c **** }
 299:../LIB_AP/Core/Ap_StrCmd.c **** 
 300:../LIB_AP/Core/Ap_StrCmd.c **** 
 301:../LIB_AP/Core/Ap_StrCmd.c **** 
 302:../LIB_AP/Core/Ap_StrCmd.c **** 
 303:../LIB_AP/Core/Ap_StrCmd.c **** 
 304:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 305:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_Putch
 306:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 307:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 308:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 309:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 310:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_Putch( char Ch )
 311:../LIB_AP/Core/Ap_StrCmd.c **** {
 214              		.loc 1 311 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              	.LVL9:
 219 0000 08B5     		push	{r3, lr}
 220              	.LCFI2:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 3, -8
 223              		.cfi_offset 14, -4
 312:../LIB_AP/Core/Ap_StrCmd.c **** 	if( Ap_StrCmd_PutchPtr != NULL_FUNC )
 224              		.loc 1 312 0
 225 0002 024B     		ldr	r3, .L22
 226 0004 1B68     		ldr	r3, [r3, #0]
 227 0006 03B1     		cbz	r3, .L17
 313:../LIB_AP/Core/Ap_StrCmd.c **** 	{
 314:../LIB_AP/Core/Ap_StrCmd.c **** 		(*Ap_StrCmd_PutchPtr)( Ch );
 228              		.loc 1 314 0
 229 0008 9847     		blx	r3
 230              	.LVL10:
 231              	.L17:
 232 000a 08BD     		pop	{r3, pc}
 233              	.L23:
 234              		.align	2
 235              	.L22:
 236 000c 00000000 		.word	Ap_StrCmd_PutchPtr
 237              		.cfi_endproc
 238              	.LFE8:
 240              		.section	.text.Ap_StrCmd_AddCmd,"ax",%progbits
 241              		.align	2
 242              		.global	Ap_StrCmd_AddCmd
 243              		.thumb
 244              		.thumb_func
 246              	Ap_StrCmd_AddCmd:
 247              	.LFB9:
 315:../LIB_AP/Core/Ap_StrCmd.c **** 	}
 316:../LIB_AP/Core/Ap_StrCmd.c **** }
 317:../LIB_AP/Core/Ap_StrCmd.c **** 
 318:../LIB_AP/Core/Ap_StrCmd.c **** 
 319:../LIB_AP/Core/Ap_StrCmd.c **** 
 320:../LIB_AP/Core/Ap_StrCmd.c **** 
 321:../LIB_AP/Core/Ap_StrCmd.c **** 
 322:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 323:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_AddCmd
 324:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 325:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 326:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 327:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 328:../LIB_AP/Core/Ap_StrCmd.c **** u8 Ap_StrCmd_AddCmd( char *NameStr, char *MenuStr,  Ap_StrCmd_FuncType Func_Ptr )
 329:../LIB_AP/Core/Ap_StrCmd.c **** {
 248              		.loc 1 329 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253              	.LVL11:
 254 0000 2DE9F003 		push	{r4, r5, r6, r7, r8, r9}
 255              	.LCFI3:
 256              		.cfi_def_cfa_offset 24
 257              		.cfi_offset 4, -24
 258              		.cfi_offset 5, -20
 259              		.cfi_offset 6, -16
 260              		.cfi_offset 7, -12
 261              		.cfi_offset 8, -8
 262              		.cfi_offset 9, -4
 330:../LIB_AP/Core/Ap_StrCmd.c **** 
 331:../LIB_AP/Core/Ap_StrCmd.c **** 	if( Ap_StrCmd_Size >= AP_STRCMD_DIC_MAX ) return FALSE;  // 사이즈 오버플로어
 263              		.loc 1 331 0
 264 0004 2B4F     		ldr	r7, .L41
 265 0006 3B88     		ldrh	r3, [r7, #0]
 266 0008 9BB2     		uxth	r3, r3
 267 000a 132B     		cmp	r3, #19
 268 000c 4BD8     		bhi	.L36
 269              	.LVL12:
 270              	.LBB57:
 271              	.LBB58:
 332:../LIB_AP/Core/Ap_StrCmd.c **** 	
 333:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_StrCopy( Ap_StrCmd_Dic_Ptr[Ap_StrCmd_Size].NameStr, NameStr );
 272              		.loc 1 333 0
 273 000e B7F80080 		ldrh	r8, [r7, #0]
 274              	.LBB59:
 275              	.LBB60:
 276              	.LBB61:
 277              	.LBB62:
 334:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_StrCopy( Ap_StrCmd_Dic_Ptr[Ap_StrCmd_Size].MenuStr, MenuStr );
 335:../LIB_AP/Core/Ap_StrCmd.c **** 	AP_STRCMD_DIC_FUNC_SET( Ap_StrCmd_Size, Func_Ptr );
 336:../LIB_AP/Core/Ap_StrCmd.c **** 
 337:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Size++;
 338:../LIB_AP/Core/Ap_StrCmd.c **** 	
 339:../LIB_AP/Core/Ap_StrCmd.c **** 	return TRUE;
 340:../LIB_AP/Core/Ap_StrCmd.c **** }
 341:../LIB_AP/Core/Ap_StrCmd.c **** 
 342:../LIB_AP/Core/Ap_StrCmd.c **** 
 343:../LIB_AP/Core/Ap_StrCmd.c **** 
 344:../LIB_AP/Core/Ap_StrCmd.c **** 
 345:../LIB_AP/Core/Ap_StrCmd.c **** 
 346:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 347:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_CmdClear
 348:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 349:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 350:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 351:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 352:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_CmdClear( void )
 353:../LIB_AP/Core/Ap_StrCmd.c **** {
 354:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdCheck  = 0;
 355:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_DlyCheck  = 0;
 356:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_LoopCheck = 0;	
 357:../LIB_AP/Core/Ap_StrCmd.c **** }
 358:../LIB_AP/Core/Ap_StrCmd.c **** 
 359:../LIB_AP/Core/Ap_StrCmd.c **** 
 360:../LIB_AP/Core/Ap_StrCmd.c **** 
 361:../LIB_AP/Core/Ap_StrCmd.c **** 
 362:../LIB_AP/Core/Ap_StrCmd.c **** 
 363:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 364:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_GetSize
 365:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 366:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 367:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 368:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 369:../LIB_AP/Core/Ap_StrCmd.c **** u16 Ap_StrCmd_GetSize( void )
 370:../LIB_AP/Core/Ap_StrCmd.c **** {
 371:../LIB_AP/Core/Ap_StrCmd.c **** 	return Ap_StrCmd_Size;
 372:../LIB_AP/Core/Ap_StrCmd.c **** }
 373:../LIB_AP/Core/Ap_StrCmd.c **** 
 374:../LIB_AP/Core/Ap_StrCmd.c **** 
 375:../LIB_AP/Core/Ap_StrCmd.c **** 
 376:../LIB_AP/Core/Ap_StrCmd.c **** 
 377:../LIB_AP/Core/Ap_StrCmd.c **** 
 378:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 379:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_Print
 380:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 381:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 382:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 383:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 384:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_Print( char *Buffer )
 385:../LIB_AP/Core/Ap_StrCmd.c **** {
 386:../LIB_AP/Core/Ap_StrCmd.c **** 	while( *Buffer != '\0') 
 387:../LIB_AP/Core/Ap_StrCmd.c **** 	{
 388:../LIB_AP/Core/Ap_StrCmd.c **** 		if( *Buffer == '\n' )
 389:../LIB_AP/Core/Ap_StrCmd.c **** 		{
 390:../LIB_AP/Core/Ap_StrCmd.c **** 			Ap_StrCmd_Putch( '\r' );
 391:../LIB_AP/Core/Ap_StrCmd.c **** 		}
 392:../LIB_AP/Core/Ap_StrCmd.c **** 
 393:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_Putch( *Buffer ) ;                              		
 394:../LIB_AP/Core/Ap_StrCmd.c **** 		Buffer++;
 395:../LIB_AP/Core/Ap_StrCmd.c **** 	}
 396:../LIB_AP/Core/Ap_StrCmd.c **** }
 397:../LIB_AP/Core/Ap_StrCmd.c **** 
 398:../LIB_AP/Core/Ap_StrCmd.c **** 
 399:../LIB_AP/Core/Ap_StrCmd.c **** 
 400:../LIB_AP/Core/Ap_StrCmd.c **** 
 401:../LIB_AP/Core/Ap_StrCmd.c **** 
 402:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 403:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_Printf
 404:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 405:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 406:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 407:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 408:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_Printf( char *format, ... )
 409:../LIB_AP/Core/Ap_StrCmd.c **** {
 410:../LIB_AP/Core/Ap_StrCmd.c **** 	char Str[200];
 411:../LIB_AP/Core/Ap_StrCmd.c **** 	Lb_va_list ap;
 412:../LIB_AP/Core/Ap_StrCmd.c **** 	
 413:../LIB_AP/Core/Ap_StrCmd.c **** 	Lb_va_start( ap, format );
 414:../LIB_AP/Core/Ap_StrCmd.c **** 
 415:../LIB_AP/Core/Ap_StrCmd.c **** 	Lb_vsprintf( Str, format, ap );	
 416:../LIB_AP/Core/Ap_StrCmd.c **** 
 417:../LIB_AP/Core/Ap_StrCmd.c **** 	Lb_va_end(ap);	
 418:../LIB_AP/Core/Ap_StrCmd.c **** 	
 419:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Print(Str);
 420:../LIB_AP/Core/Ap_StrCmd.c **** }
 421:../LIB_AP/Core/Ap_StrCmd.c **** 
 422:../LIB_AP/Core/Ap_StrCmd.c **** 
 423:../LIB_AP/Core/Ap_StrCmd.c **** 
 424:../LIB_AP/Core/Ap_StrCmd.c **** 
 425:../LIB_AP/Core/Ap_StrCmd.c **** 
 426:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 427:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_ExeCmd
 428:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 429:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 430:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 431:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 432:../LIB_AP/Core/Ap_StrCmd.c **** u8 Ap_StrCmd_ExeCmd( void )
 433:../LIB_AP/Core/Ap_StrCmd.c **** {
 434:../LIB_AP/Core/Ap_StrCmd.c **** 	u8 Ret = FALSE;
 435:../LIB_AP/Core/Ap_StrCmd.c **** 
 436:../LIB_AP/Core/Ap_StrCmd.c **** 	if( Ap_StrCmd_Q_SIZE(AP_STRCMD_Q_RX_CH) )
 437:../LIB_AP/Core/Ap_StrCmd.c **** 	{
 438:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_ExeFunc();
 439:../LIB_AP/Core/Ap_StrCmd.c **** 		Ret = TRUE;
 440:../LIB_AP/Core/Ap_StrCmd.c **** 	}
 441:../LIB_AP/Core/Ap_StrCmd.c **** 
 442:../LIB_AP/Core/Ap_StrCmd.c **** 	return Ret; 
 443:../LIB_AP/Core/Ap_StrCmd.c **** }
 444:../LIB_AP/Core/Ap_StrCmd.c **** 
 445:../LIB_AP/Core/Ap_StrCmd.c **** 
 446:../LIB_AP/Core/Ap_StrCmd.c **** 
 447:../LIB_AP/Core/Ap_StrCmd.c **** 
 448:../LIB_AP/Core/Ap_StrCmd.c **** 
 449:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 450:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_ExeFunc
 451:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 452:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 453:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 454:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 455:../LIB_AP/Core/Ap_StrCmd.c **** s16 Ap_StrCmd_ExeFunc( void )
 456:../LIB_AP/Core/Ap_StrCmd.c **** {
 457:../LIB_AP/Core/Ap_StrCmd.c **** 	u16 CmdSize;
 458:../LIB_AP/Core/Ap_StrCmd.c **** 	u16 CmdStrSize;	
 459:../LIB_AP/Core/Ap_StrCmd.c **** 	u16 CmdBufStrSize;
 460:../LIB_AP/Core/Ap_StrCmd.c **** 	s16 CmdCheck;
 461:../LIB_AP/Core/Ap_StrCmd.c **** 	u16 i;
 462:../LIB_AP/Core/Ap_StrCmd.c **** 	u16 j;
 463:../LIB_AP/Core/Ap_StrCmd.c **** 
 464:../LIB_AP/Core/Ap_StrCmd.c **** 	AP_STRCMD_CMD_OBJ CmdMsg;
 465:../LIB_AP/Core/Ap_StrCmd.c **** 	
 466:../LIB_AP/Core/Ap_StrCmd.c **** 	
 467:../LIB_AP/Core/Ap_StrCmd.c **** 	Disable_ISR();
 468:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Q_Pop( AP_STRCMD_Q_RX_CH, &CmdMsg );
 469:../LIB_AP/Core/Ap_StrCmd.c **** 	Enable_ISR();
 470:../LIB_AP/Core/Ap_StrCmd.c **** 	
 471:../LIB_AP/Core/Ap_StrCmd.c **** 	CmdSize = Ap_StrCmd_GetSize();
 472:../LIB_AP/Core/Ap_StrCmd.c **** 	
 473:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<CmdSize; i++ )
 474:../LIB_AP/Core/Ap_StrCmd.c **** 	{
 475:../LIB_AP/Core/Ap_StrCmd.c **** 		CmdStrSize = Ap_StrCmd_StrLen( Ap_StrCmd_Dic_Ptr[i].NameStr );
 476:../LIB_AP/Core/Ap_StrCmd.c **** 		CmdBufStrSize = strlen( (char *)CmdMsg.Str );
 477:../LIB_AP/Core/Ap_StrCmd.c **** 		
 478:../LIB_AP/Core/Ap_StrCmd.c **** 		for( j=0; j<CmdBufStrSize; j++ )
 479:../LIB_AP/Core/Ap_StrCmd.c **** 		{
 480:../LIB_AP/Core/Ap_StrCmd.c **** 			CmdMsg.Str[j] = toupper( CmdMsg.Str[j] );
 481:../LIB_AP/Core/Ap_StrCmd.c **** 		}
 482:../LIB_AP/Core/Ap_StrCmd.c **** 		
 483:../LIB_AP/Core/Ap_StrCmd.c **** 		CmdCheck = strncmp( Ap_StrCmd_Dic_Ptr[i].NameStr, (char *)CmdMsg.Str, CmdStrSize );
 484:../LIB_AP/Core/Ap_StrCmd.c **** 		
 485:../LIB_AP/Core/Ap_StrCmd.c **** 		
 486:../LIB_AP/Core/Ap_StrCmd.c **** 		if( CmdCheck == 0 && Ap_StrCmd_Dic_Ptr[i].Func_Ptr != NULL )
 487:../LIB_AP/Core/Ap_StrCmd.c **** 		{		
 488:../LIB_AP/Core/Ap_StrCmd.c **** 			AP_STRCMD_DIC_FUNC_EXEC(i, CmdMsg.Str); 			
 489:../LIB_AP/Core/Ap_StrCmd.c **** 			break;
 490:../LIB_AP/Core/Ap_StrCmd.c **** 		}
 491:../LIB_AP/Core/Ap_StrCmd.c **** 	}
 492:../LIB_AP/Core/Ap_StrCmd.c **** 	
 493:../LIB_AP/Core/Ap_StrCmd.c **** 	
 494:../LIB_AP/Core/Ap_StrCmd.c **** 	return 0;
 495:../LIB_AP/Core/Ap_StrCmd.c **** }
 496:../LIB_AP/Core/Ap_StrCmd.c **** 
 497:../LIB_AP/Core/Ap_StrCmd.c **** 
 498:../LIB_AP/Core/Ap_StrCmd.c **** 
 499:../LIB_AP/Core/Ap_StrCmd.c **** 
 500:../LIB_AP/Core/Ap_StrCmd.c **** 
 501:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 502:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_Delay
 503:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 504:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 505:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 506:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 507:../LIB_AP/Core/Ap_StrCmd.c **** s16 Ap_StrCmd_Delay( long DlyData  )
 508:../LIB_AP/Core/Ap_StrCmd.c **** {
 509:../LIB_AP/Core/Ap_StrCmd.c **** 	u32 DlyDataIn = 1000;
 510:../LIB_AP/Core/Ap_StrCmd.c **** 	u32 i;
 511:../LIB_AP/Core/Ap_StrCmd.c **** 	
 512:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_DlyCheck = 0;
 513:../LIB_AP/Core/Ap_StrCmd.c **** 	
 514:../LIB_AP/Core/Ap_StrCmd.c **** 	while( DlyData-- )
 515:../LIB_AP/Core/Ap_StrCmd.c **** 	{
 516:../LIB_AP/Core/Ap_StrCmd.c **** 		for( i=0; i<DlyDataIn; i++ )
 517:../LIB_AP/Core/Ap_StrCmd.c **** 		{
 518:../LIB_AP/Core/Ap_StrCmd.c **** 			if( Ap_StrCmd_DlyCheck == 1 ) break;
 519:../LIB_AP/Core/Ap_StrCmd.c **** 		}
 520:../LIB_AP/Core/Ap_StrCmd.c **** 	}	
 521:../LIB_AP/Core/Ap_StrCmd.c **** 	
 522:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_DlyCheck = 0;
 523:../LIB_AP/Core/Ap_StrCmd.c **** 	
 524:../LIB_AP/Core/Ap_StrCmd.c **** 	return 0;
 525:../LIB_AP/Core/Ap_StrCmd.c **** }
 526:../LIB_AP/Core/Ap_StrCmd.c **** 
 527:../LIB_AP/Core/Ap_StrCmd.c **** 
 528:../LIB_AP/Core/Ap_StrCmd.c **** 
 529:../LIB_AP/Core/Ap_StrCmd.c **** 
 530:../LIB_AP/Core/Ap_StrCmd.c **** 
 531:../LIB_AP/Core/Ap_StrCmd.c **** 
 532:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 533:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_Loop
 534:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 535:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 536:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 537:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 538:../LIB_AP/Core/Ap_StrCmd.c **** s16 Ap_StrCmd_Loop(void)
 539:../LIB_AP/Core/Ap_StrCmd.c **** {	
 540:../LIB_AP/Core/Ap_StrCmd.c **** 	s16 Ret;
 541:../LIB_AP/Core/Ap_StrCmd.c **** 
 542:../LIB_AP/Core/Ap_StrCmd.c **** 	if( Ap_StrCmd_LoopCheck == 1 )
 543:../LIB_AP/Core/Ap_StrCmd.c **** 	{
 544:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_LoopCheck = 0;
 545:../LIB_AP/Core/Ap_StrCmd.c **** 		Ret = 0;
 546:../LIB_AP/Core/Ap_StrCmd.c **** 	}
 547:../LIB_AP/Core/Ap_StrCmd.c **** 	else
 548:../LIB_AP/Core/Ap_StrCmd.c **** 	{
 549:../LIB_AP/Core/Ap_StrCmd.c **** 		Ret = 1;
 550:../LIB_AP/Core/Ap_StrCmd.c **** 	}
 551:../LIB_AP/Core/Ap_StrCmd.c **** 
 552:../LIB_AP/Core/Ap_StrCmd.c **** 	return Ret;
 553:../LIB_AP/Core/Ap_StrCmd.c **** }
 554:../LIB_AP/Core/Ap_StrCmd.c **** 
 555:../LIB_AP/Core/Ap_StrCmd.c **** 
 556:../LIB_AP/Core/Ap_StrCmd.c **** 
 557:../LIB_AP/Core/Ap_StrCmd.c **** 
 558:../LIB_AP/Core/Ap_StrCmd.c **** 
 559:../LIB_AP/Core/Ap_StrCmd.c **** 
 560:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 561:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_StrLen
 562:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 563:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 564:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 565:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 566:../LIB_AP/Core/Ap_StrCmd.c **** u16 Ap_StrCmd_StrLen( char *Dest )
 567:../LIB_AP/Core/Ap_StrCmd.c **** {
 568:../LIB_AP/Core/Ap_StrCmd.c **** 	u16 Size = 0;
 569:../LIB_AP/Core/Ap_StrCmd.c **** 
 570:../LIB_AP/Core/Ap_StrCmd.c **** 	while(1)
 571:../LIB_AP/Core/Ap_StrCmd.c **** 	{
 572:../LIB_AP/Core/Ap_StrCmd.c **** 		if( Dest[Size] == 0 ) break;
 278              		.loc 1 572 0
 279 0012 0478     		ldrb	r4, [r0, #0]	@ zero_extendqisi2
 280              	.LBE62:
 281              	.LBE61:
 282              	.LBE60:
 283              	.LBE59:
 333:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_StrCopy( Ap_StrCmd_Dic_Ptr[Ap_StrCmd_Size].NameStr, NameStr );
 284              		.loc 1 333 0
 285 0014 1FFA88F8 		uxth	r8, r8
 286              	.LVL13:
 287              	.LBB68:
 288              	.LBB67:
 289              	.LBB65:
 290              	.LBB63:
 291              		.loc 1 572 0
 292 0018 002C     		cmp	r4, #0
 293 001a 48D0     		beq	.L37
 294 001c 0024     		movs	r4, #0
 295              	.LVL14:
 296              	.L27:
 573:../LIB_AP/Core/Ap_StrCmd.c **** 
 574:../LIB_AP/Core/Ap_StrCmd.c **** 		Size++;
 297              		.loc 1 574 0
 298 001e 0134     		adds	r4, r4, #1
 299 0020 A4B2     		uxth	r4, r4
 300              	.LVL15:
 572:../LIB_AP/Core/Ap_StrCmd.c **** 		if( Dest[Size] == 0 ) break;
 301              		.loc 1 572 0
 302 0022 035D     		ldrb	r3, [r0, r4]	@ zero_extendqisi2
 303 0024 002B     		cmp	r3, #0
 304 0026 FAD1     		bne	.L27
 305              	.LVL16:
 328:../LIB_AP/Core/Ap_StrCmd.c **** u8 Ap_StrCmd_AddCmd( char *NameStr, char *MenuStr,  Ap_StrCmd_FuncType Func_Ptr )
 306              		.loc 1 328 0
 307 0028 DFF88CC0 		ldr	ip, .L41+4
 308              	.LBE63:
 309              	.LBE65:
 575:../LIB_AP/Core/Ap_StrCmd.c **** 	}
 576:../LIB_AP/Core/Ap_StrCmd.c **** 
 577:../LIB_AP/Core/Ap_StrCmd.c **** 	return Size;
 578:../LIB_AP/Core/Ap_StrCmd.c **** }
 579:../LIB_AP/Core/Ap_StrCmd.c **** 
 580:../LIB_AP/Core/Ap_StrCmd.c **** 
 581:../LIB_AP/Core/Ap_StrCmd.c **** 
 582:../LIB_AP/Core/Ap_StrCmd.c **** 
 583:../LIB_AP/Core/Ap_StrCmd.c **** 
 584:../LIB_AP/Core/Ap_StrCmd.c **** /*---------------------------------------------------------------------------
 585:../LIB_AP/Core/Ap_StrCmd.c ****      TITLE   : Ap_StrCmd_StrCopy
 586:../LIB_AP/Core/Ap_StrCmd.c ****      WORK    : 
 587:../LIB_AP/Core/Ap_StrCmd.c ****      ARG     : void
 588:../LIB_AP/Core/Ap_StrCmd.c ****      RET     : void   
 589:../LIB_AP/Core/Ap_StrCmd.c **** ---------------------------------------------------------------------------*/
 590:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_StrCopy( char *Dest, char *Origin )
 591:../LIB_AP/Core/Ap_StrCmd.c **** {
 592:../LIB_AP/Core/Ap_StrCmd.c **** 	u16 Size;
 593:../LIB_AP/Core/Ap_StrCmd.c **** 	u16 i;
 594:../LIB_AP/Core/Ap_StrCmd.c **** 
 595:../LIB_AP/Core/Ap_StrCmd.c **** 	Size = Ap_StrCmd_StrLen( Origin );
 596:../LIB_AP/Core/Ap_StrCmd.c **** 
 597:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<Size; i++ )
 310              		.loc 1 597 0
 311 002c 44B1     		cbz	r4, .L26
 312              	.LBB66:
 313              	.LBB64:
 328:../LIB_AP/Core/Ap_StrCmd.c **** u8 Ap_StrCmd_AddCmd( char *NameStr, char *MenuStr,  Ap_StrCmd_FuncType Func_Ptr )
 314              		.loc 1 328 0
 315 002e 2C26     		movs	r6, #44
 316 0030 06FB08C6 		mla	r6, r6, r8, ip
 317              	.LVL17:
 318              	.L30:
 319              	.LBE64:
 320              	.LBE66:
 598:../LIB_AP/Core/Ap_StrCmd.c **** 	{
 599:../LIB_AP/Core/Ap_StrCmd.c **** 		Dest[i] = Origin[i];
 321              		.loc 1 599 0
 322 0034 C55C     		ldrb	r5, [r0, r3]	@ zero_extendqisi2
 323 0036 F554     		strb	r5, [r6, r3]
 324 0038 0133     		adds	r3, r3, #1
 597:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<Size; i++ )
 325              		.loc 1 597 0
 326 003a 9DB2     		uxth	r5, r3
 327 003c A542     		cmp	r5, r4
 328 003e F9D3     		bcc	.L30
 329              	.LVL18:
 330              	.L26:
 600:../LIB_AP/Core/Ap_StrCmd.c **** 	}
 601:../LIB_AP/Core/Ap_StrCmd.c **** 	Dest[i] = 0;
 331              		.loc 1 601 0
 332 0040 2C23     		movs	r3, #44
 333 0042 03FB0844 		mla	r4, r3, r8, r4
 334 0046 0020     		movs	r0, #0
 335              	.LVL19:
 336 0048 0CF80400 		strb	r0, [ip, r4]
 337              	.LBE67:
 338              	.LBE68:
 334:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_StrCopy( Ap_StrCmd_Dic_Ptr[Ap_StrCmd_Size].MenuStr, MenuStr );
 339              		.loc 1 334 0
 340 004c B7F80090 		ldrh	r9, [r7, #0]
 341              	.LBB69:
 342              	.LBB70:
 343              	.LBB71:
 344              	.LBB72:
 572:../LIB_AP/Core/Ap_StrCmd.c **** 		if( Dest[Size] == 0 ) break;
 345              		.loc 1 572 0
 346 0050 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 347              	.LBE72:
 348              	.LBE71:
 349              	.LBE70:
 350              	.LBE69:
 334:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_StrCopy( Ap_StrCmd_Dic_Ptr[Ap_StrCmd_Size].MenuStr, MenuStr );
 351              		.loc 1 334 0
 352 0052 1FFA89F9 		uxth	r9, r9
 353              	.LVL20:
 354              	.LBB84:
 355              	.LBB79:
 356              	.LBB76:
 357              	.LBB73:
 572:../LIB_AP/Core/Ap_StrCmd.c **** 		if( Dest[Size] == 0 ) break;
 358              		.loc 1 572 0
 359 0056 002B     		cmp	r3, #0
 360 0058 27D0     		beq	.L38
 361              	.LVL21:
 362              	.L32:
 574:../LIB_AP/Core/Ap_StrCmd.c **** 		Size++;
 363              		.loc 1 574 0
 364 005a 0130     		adds	r0, r0, #1
 365 005c 80B2     		uxth	r0, r0
 366              	.LVL22:
 572:../LIB_AP/Core/Ap_StrCmd.c **** 		if( Dest[Size] == 0 ) break;
 367              		.loc 1 572 0
 368 005e 0B5C     		ldrb	r3, [r1, r0]	@ zero_extendqisi2
 369 0060 002B     		cmp	r3, #0
 370 0062 FAD1     		bne	.L32
 371              	.LVL23:
 372              	.LBE73:
 373              	.LBE76:
 597:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<Size; i++ )
 374              		.loc 1 597 0
 375 0064 58B1     		cbz	r0, .L31
 376              	.LBB77:
 377              	.LBB74:
 328:../LIB_AP/Core/Ap_StrCmd.c **** u8 Ap_StrCmd_AddCmd( char *NameStr, char *MenuStr,  Ap_StrCmd_FuncType Func_Ptr )
 378              		.loc 1 328 0
 379 0066 4FF02C08 		mov	r8, #44
 380              	.LVL24:
 381 006a 08FB09C8 		mla	r8, r8, r9, ip
 382              	.LVL25:
 383              	.L35:
 384              	.LBE74:
 385              	.LBE77:
 599:../LIB_AP/Core/Ap_StrCmd.c **** 		Dest[i] = Origin[i];
 386              		.loc 1 599 0
 387 006e CE5C     		ldrb	r6, [r1, r3]	@ zero_extendqisi2
 328:../LIB_AP/Core/Ap_StrCmd.c **** u8 Ap_StrCmd_AddCmd( char *NameStr, char *MenuStr,  Ap_StrCmd_FuncType Func_Ptr )
 388              		.loc 1 328 0
 389 0070 08EB0305 		add	r5, r8, r3
 390 0074 0133     		adds	r3, r3, #1
 597:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<Size; i++ )
 391              		.loc 1 597 0
 392 0076 9CB2     		uxth	r4, r3
 393 0078 8442     		cmp	r4, r0
 599:../LIB_AP/Core/Ap_StrCmd.c **** 		Dest[i] = Origin[i];
 394              		.loc 1 599 0
 395 007a 2E75     		strb	r6, [r5, #20]
 597:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<Size; i++ )
 396              		.loc 1 597 0
 397 007c F7D3     		bcc	.L35
 398              	.LVL26:
 399              	.L31:
 400              	.LBE79:
 401              	.LBE84:
 335:../LIB_AP/Core/Ap_StrCmd.c **** 	AP_STRCMD_DIC_FUNC_SET( Ap_StrCmd_Size, Func_Ptr );
 402              		.loc 1 335 0
 403 007e 3C88     		ldrh	r4, [r7, #0]
 404              	.LBB85:
 405              	.LBB80:
 406              		.loc 1 601 0
 407 0080 2C23     		movs	r3, #44
 408 0082 03FB09C9 		mla	r9, r3, r9, ip
 409              	.LVL27:
 410              	.LBE80:
 411              	.LBE85:
 335:../LIB_AP/Core/Ap_StrCmd.c **** 	AP_STRCMD_DIC_FUNC_SET( Ap_StrCmd_Size, Func_Ptr );
 412              		.loc 1 335 0
 413 0086 A4B2     		uxth	r4, r4
 337:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Size++;
 414              		.loc 1 337 0
 415 0088 3988     		ldrh	r1, [r7, #0]
 416              	.LVL28:
 335:../LIB_AP/Core/Ap_StrCmd.c **** 	AP_STRCMD_DIC_FUNC_SET( Ap_StrCmd_Size, Func_Ptr );
 417              		.loc 1 335 0
 418 008a 03FB04CC 		mla	ip, r3, r4, ip
 337:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Size++;
 419              		.loc 1 337 0
 420 008e 0131     		adds	r1, r1, #1
 421              	.LBB86:
 422              	.LBB81:
 423              		.loc 1 601 0
 424 0090 4844     		add	r0, r9, r0
 425              	.LBE81:
 426              	.LBE86:
 337:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Size++;
 427              		.loc 1 337 0
 428 0092 89B2     		uxth	r1, r1
 429              	.LBB87:
 430              	.LBB82:
 431              		.loc 1 601 0
 432 0094 0023     		movs	r3, #0
 433 0096 0375     		strb	r3, [r0, #20]
 434              	.LBE82:
 435              	.LBE87:
 335:../LIB_AP/Core/Ap_StrCmd.c **** 	AP_STRCMD_DIC_FUNC_SET( Ap_StrCmd_Size, Func_Ptr );
 436              		.loc 1 335 0
 437 0098 CCF82820 		str	r2, [ip, #40]
 337:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Size++;
 438              		.loc 1 337 0
 439 009c 3980     		strh	r1, [r7, #0]	@ movhi
 440 009e 0120     		movs	r0, #1
 441              	.LVL29:
 442              	.L25:
 443              	.LBE58:
 444              	.LBE57:
 340:../LIB_AP/Core/Ap_StrCmd.c **** }
 445              		.loc 1 340 0
 446 00a0 BDE8F003 		pop	{r4, r5, r6, r7, r8, r9}
 447 00a4 7047     		bx	lr
 448              	.LVL30:
 449              	.L36:
 331:../LIB_AP/Core/Ap_StrCmd.c **** 	if( Ap_StrCmd_Size >= AP_STRCMD_DIC_MAX ) return FALSE;  // 사이즈 오버플로어
 450              		.loc 1 331 0
 451 00a6 0020     		movs	r0, #0
 452              	.LVL31:
 453 00a8 FAE7     		b	.L25
 454              	.LVL32:
 455              	.L38:
 456              	.LBB90:
 457              	.LBB89:
 458              	.LBB88:
 459              	.LBB83:
 460              	.LBB78:
 461              	.LBB75:
 572:../LIB_AP/Core/Ap_StrCmd.c **** 		if( Dest[Size] == 0 ) break;
 462              		.loc 1 572 0
 463 00aa 1846     		mov	r0, r3
 464 00ac E7E7     		b	.L31
 465              	.LVL33:
 466              	.L37:
 467 00ae DFF808C0 		ldr	ip, .L41+4
 468 00b2 C5E7     		b	.L26
 469              	.L42:
 470              		.align	2
 471              	.L41:
 472 00b4 00000000 		.word	Ap_StrCmd_Size
 473 00b8 00000000 		.word	Ap_StrCmd_Dic_Ptr
 474              	.LBE75:
 475              	.LBE78:
 476              	.LBE83:
 477              	.LBE88:
 478              	.LBE89:
 479              	.LBE90:
 480              		.cfi_endproc
 481              	.LFE9:
 483              		.section	.text.Ap_StrCmd_Init,"ax",%progbits
 484              		.align	2
 485              		.global	Ap_StrCmd_Init
 486              		.thumb
 487              		.thumb_func
 489              	Ap_StrCmd_Init:
 490              	.LFB1:
  78:../LIB_AP/Core/Ap_StrCmd.c **** {
 491              		.loc 1 78 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              	.LVL34:
 496 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 497              	.LCFI4:
 498              		.cfi_def_cfa_offset 24
 499              		.cfi_offset 3, -24
 500              		.cfi_offset 4, -20
 501              		.cfi_offset 5, -16
 502              		.cfi_offset 6, -12
 503              		.cfi_offset 7, -8
 504              		.cfi_offset 14, -4
 505 0002 184B     		ldr	r3, .L46
  85:../LIB_AP/Core/Ap_StrCmd.c **** 		AP_STRCMD_DIC_FUNC(i)   = NULL_FUNC;  // 모두 어떠한 함수도 가르키지 않는다
 506              		.loc 1 85 0
 507 0004 0021     		movs	r1, #0
  77:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_Init( void )
 508              		.loc 1 77 0
 509 0006 03F55C72 		add	r2, r3, #880
 510              	.LVL35:
 511              	.L44:
  85:../LIB_AP/Core/Ap_StrCmd.c **** 		AP_STRCMD_DIC_FUNC(i)   = NULL_FUNC;  // 모두 어떠한 함수도 가르키지 않는다
 512              		.loc 1 85 0 discriminator 2
 513 000a 9962     		str	r1, [r3, #40]
 514 000c 2C33     		adds	r3, r3, #44
 515 000e 0024     		movs	r4, #0
  83:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<AP_STRCMD_DIC_MAX; i++)
 516              		.loc 1 83 0 discriminator 2
 517 0010 9342     		cmp	r3, r2
 518 0012 FAD1     		bne	.L44
  88:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Size     	= 0;				
 519              		.loc 1 88 0
 520 0014 144F     		ldr	r7, .L46+4
  92:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_PutchPtr 	= NULL;
 521              		.loc 1 92 0
 522 0016 154E     		ldr	r6, .L46+8
  88:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Size     	= 0;				
 523              		.loc 1 88 0
 524 0018 3C80     		strh	r4, [r7, #0]	@ movhi
  89:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_ChSize   	= 0;
 525              		.loc 1 89 0
 526 001a 154F     		ldr	r7, .L46+12
  88:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Size     	= 0;				
 527              		.loc 1 88 0
 528 001c 2346     		mov	r3, r4	@ movhi
  89:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_ChSize   	= 0;
 529              		.loc 1 89 0
 530 001e 3C80     		strh	r4, [r7, #0]	@ movhi
  93:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_PrintPtr 	= NULL;
 531              		.loc 1 93 0
 532 0020 144F     		ldr	r7, .L46+16
  92:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_PutchPtr 	= NULL;
 533              		.loc 1 92 0
 534 0022 3460     		str	r4, [r6, #0]
  93:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_PrintPtr 	= NULL;
 535              		.loc 1 93 0
 536 0024 3C60     		str	r4, [r7, #0]
  90:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdCheck 	= 0;	
 537              		.loc 1 90 0
 538 0026 144C     		ldr	r4, .L46+20
  97:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_AddCmd( "HELP", "Menu Help",        Ap_StrCmd_ShowMenuHelp );	
 539              		.loc 1 97 0
 540 0028 144D     		ldr	r5, .L46+24
  90:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdCheck 	= 0;	
 541              		.loc 1 90 0
 542 002a 2370     		strb	r3, [r4, #0]
  95:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_EchoEnable = FALSE;
 543              		.loc 1 95 0
 544 002c 144C     		ldr	r4, .L46+28
  97:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_AddCmd( "HELP", "Menu Help",        Ap_StrCmd_ShowMenuHelp );	
 545              		.loc 1 97 0
 546 002e 1549     		ldr	r1, .L46+32
 547 0030 154A     		ldr	r2, .L46+36
 548 0032 1648     		ldr	r0, .L46+40
  95:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_EchoEnable = FALSE;
 549              		.loc 1 95 0
 550 0034 2370     		strb	r3, [r4, #0]
  97:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_AddCmd( "HELP", "Menu Help",        Ap_StrCmd_ShowMenuHelp );	
 551              		.loc 1 97 0
 552 0036 A847     		blx	r5
 553              	.LVL36:
  98:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_AddCmd( "MENU", "Display Menu",     Ap_StrCmd_ShowMenu );
 554              		.loc 1 98 0
 555 0038 1549     		ldr	r1, .L46+44
 556 003a 164A     		ldr	r2, .L46+48
 557 003c 1648     		ldr	r0, .L46+52
 558 003e A847     		blx	r5
 559              	.LVL37:
  99:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_AddCmd( "INFO", "Info",     		  Ap_StrCmd_ShowInfo );
 560              		.loc 1 99 0
 561 0040 1649     		ldr	r1, .L46+56
 562 0042 174A     		ldr	r2, .L46+60
 563 0044 1748     		ldr	r0, .L46+64
 564 0046 A847     		blx	r5
 565              	.LVL38:
 100:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_AddCmd( "ECHO", "Echo",     		  Ap_StrCmd_Echo );
 566              		.loc 1 100 0
 567 0048 1749     		ldr	r1, .L46+68
 568 004a 184A     		ldr	r2, .L46+72
 569 004c 1848     		ldr	r0, .L46+76
 570 004e A847     		blx	r5
 571              	.LVL39:
 103:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Q_Init();
 572              		.loc 1 103 0
 573 0050 184B     		ldr	r3, .L46+80
 574 0052 9847     		blx	r3
 575              	.LVL40:
 576              	.LBB91:
 577              	.LBB92:
 244:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_PutchPtr = FuncPtr;
 578              		.loc 1 244 0
 579 0054 184B     		ldr	r3, .L46+84
 580              	.LBE92:
 581              	.LBE91:
 110:../LIB_AP/Core/Ap_StrCmd.c **** 	Hw_Uart_SetReceiveFuncISR( HW_USE_UART_CH_STRCMD, Ap_StrCmd_CallBack_RxdISR );
 582              		.loc 1 110 0
 583 0056 0120     		movs	r0, #1
 584              	.LBB94:
 585              	.LBB93:
 244:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_PutchPtr = FuncPtr;
 586              		.loc 1 244 0
 587 0058 3360     		str	r3, [r6, #0]
 588              	.LBE93:
 589              	.LBE94:
 110:../LIB_AP/Core/Ap_StrCmd.c **** 	Hw_Uart_SetReceiveFuncISR( HW_USE_UART_CH_STRCMD, Ap_StrCmd_CallBack_RxdISR );
 590              		.loc 1 110 0
 591 005a 1849     		ldr	r1, .L46+88
 592 005c 184B     		ldr	r3, .L46+92
 593 005e 9847     		blx	r3
 594              	.LVL41:
 595 0060 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 596              	.L47:
 597 0062 00BF     		.align	2
 598              	.L46:
 599 0064 00000000 		.word	Ap_StrCmd_Dic_Ptr
 600 0068 00000000 		.word	Ap_StrCmd_Size
 601 006c 00000000 		.word	Ap_StrCmd_PutchPtr
 602 0070 00000000 		.word	Ap_StrCmd_ChSize
 603 0074 00000000 		.word	Ap_StrCmd_PrintPtr
 604 0078 00000000 		.word	Ap_StrCmd_CmdCheck
 605 007c 00000000 		.word	Ap_StrCmd_AddCmd
 606 0080 00000000 		.word	.LANCHOR0
 607 0084 08000000 		.word	.LC1
 608 0088 00000000 		.word	Ap_StrCmd_ShowMenuHelp
 609 008c 00000000 		.word	.LC0
 610 0090 1C000000 		.word	.LC3
 611 0094 00000000 		.word	Ap_StrCmd_ShowMenu
 612 0098 14000000 		.word	.LC2
 613 009c 34000000 		.word	.LC5
 614 00a0 00000000 		.word	Ap_StrCmd_ShowInfo
 615 00a4 2C000000 		.word	.LC4
 616 00a8 44000000 		.word	.LC7
 617 00ac 00000000 		.word	Ap_StrCmd_Echo
 618 00b0 3C000000 		.word	.LC6
 619 00b4 00000000 		.word	Ap_StrCmd_Q_Init
 620 00b8 00000000 		.word	Ap_StrCmd_PutFunc
 621 00bc 00000000 		.word	Ap_StrCmd_CallBack_RxdISR
 622 00c0 00000000 		.word	Hw_Uart_SetReceiveFuncISR
 623              		.cfi_endproc
 624              	.LFE1:
 626              		.section	.text.Ap_StrCmd_CmdClear,"ax",%progbits
 627              		.align	2
 628              		.global	Ap_StrCmd_CmdClear
 629              		.thumb
 630              		.thumb_func
 632              	Ap_StrCmd_CmdClear:
 633              	.LFB10:
 353:../LIB_AP/Core/Ap_StrCmd.c **** {
 634              		.loc 1 353 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              		@ link register save eliminated.
 354:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdCheck  = 0;
 639              		.loc 1 354 0
 640 0000 40F20000 		movw	r0, #:lower16:Ap_StrCmd_CmdCheck
 355:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_DlyCheck  = 0;
 641              		.loc 1 355 0
 642 0004 40F20001 		movw	r1, #:lower16:Ap_StrCmd_DlyCheck
 356:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_LoopCheck = 0;	
 643              		.loc 1 356 0
 644 0008 40F20003 		movw	r3, #:lower16:Ap_StrCmd_LoopCheck
 354:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdCheck  = 0;
 645              		.loc 1 354 0
 646 000c 0022     		movs	r2, #0
 647 000e C0F20000 		movt	r0, #:upper16:Ap_StrCmd_CmdCheck
 355:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_DlyCheck  = 0;
 648              		.loc 1 355 0
 649 0012 C0F20001 		movt	r1, #:upper16:Ap_StrCmd_DlyCheck
 356:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_LoopCheck = 0;	
 650              		.loc 1 356 0
 651 0016 C0F20003 		movt	r3, #:upper16:Ap_StrCmd_LoopCheck
 354:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdCheck  = 0;
 652              		.loc 1 354 0
 653 001a 0270     		strb	r2, [r0, #0]
 355:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_DlyCheck  = 0;
 654              		.loc 1 355 0
 655 001c 0A70     		strb	r2, [r1, #0]
 356:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_LoopCheck = 0;	
 656              		.loc 1 356 0
 657 001e 1A70     		strb	r2, [r3, #0]
 658 0020 7047     		bx	lr
 659              		.cfi_endproc
 660              	.LFE10:
 662 0022 00BF     		.section	.text.Ap_StrCmd_GetSize,"ax",%progbits
 663              		.align	2
 664              		.global	Ap_StrCmd_GetSize
 665              		.thumb
 666              		.thumb_func
 668              	Ap_StrCmd_GetSize:
 669              	.LFB11:
 370:../LIB_AP/Core/Ap_StrCmd.c **** {
 670              		.loc 1 370 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674              		@ link register save eliminated.
 371:../LIB_AP/Core/Ap_StrCmd.c **** 	return Ap_StrCmd_Size;
 675              		.loc 1 371 0
 676 0000 40F20003 		movw	r3, #:lower16:Ap_StrCmd_Size
 677 0004 C0F20003 		movt	r3, #:upper16:Ap_StrCmd_Size
 678 0008 1888     		ldrh	r0, [r3, #0]
 372:../LIB_AP/Core/Ap_StrCmd.c **** }
 679              		.loc 1 372 0
 680 000a 80B2     		uxth	r0, r0
 681 000c 7047     		bx	lr
 682              		.cfi_endproc
 683              	.LFE11:
 685 000e 00BF     		.section	.text.Ap_StrCmd_Print,"ax",%progbits
 686              		.align	2
 687              		.global	Ap_StrCmd_Print
 688              		.thumb
 689              		.thumb_func
 691              	Ap_StrCmd_Print:
 692              	.LFB12:
 385:../LIB_AP/Core/Ap_StrCmd.c **** {
 693              		.loc 1 385 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 697              	.LVL42:
 698 0000 38B5     		push	{r3, r4, r5, lr}
 699              	.LCFI5:
 700              		.cfi_def_cfa_offset 16
 701              		.cfi_offset 3, -16
 702              		.cfi_offset 4, -12
 703              		.cfi_offset 5, -8
 704              		.cfi_offset 14, -4
 386:../LIB_AP/Core/Ap_StrCmd.c **** 	while( *Buffer != '\0') 
 705              		.loc 1 386 0
 706 0002 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 707 0004 93B1     		cbz	r3, .L50
 708 0006 0A4D     		ldr	r5, .L62
 384:../LIB_AP/Core/Ap_StrCmd.c **** void Ap_StrCmd_Print( char *Buffer )
 709              		.loc 1 384 0
 710 0008 441C     		adds	r4, r0, #1
 711 000a 07E0     		b	.L56
 712              	.LVL43:
 713              	.L52:
 714              	.LBB95:
 715              	.LBB96:
 312:../LIB_AP/Core/Ap_StrCmd.c **** 	if( Ap_StrCmd_PutchPtr != NULL_FUNC )
 716              		.loc 1 312 0
 717 000c 2B68     		ldr	r3, [r5, #0]
 718              	.LBE96:
 719              	.LBE95:
 393:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_Putch( *Buffer ) ;                              		
 720              		.loc 1 393 0
 721 000e 14F8010C 		ldrb	r0, [r4, #-1]	@ zero_extendqisi2
 722              	.LVL44:
 723              	.LBB98:
 724              	.LBB97:
 312:../LIB_AP/Core/Ap_StrCmd.c **** 	if( Ap_StrCmd_PutchPtr != NULL_FUNC )
 725              		.loc 1 312 0
 726 0012 03B1     		cbz	r3, .L54
 314:../LIB_AP/Core/Ap_StrCmd.c **** 		(*Ap_StrCmd_PutchPtr)( Ch );
 727              		.loc 1 314 0
 728 0014 9847     		blx	r3
 729              	.LVL45:
 730              	.L54:
 731              	.LBE97:
 732              	.LBE98:
 386:../LIB_AP/Core/Ap_StrCmd.c **** 	while( *Buffer != '\0') 
 733              		.loc 1 386 0
 734 0016 14F8013B 		ldrb	r3, [r4], #1	@ zero_extendqisi2
 735 001a 3BB1     		cbz	r3, .L50
 736              	.L56:
 388:../LIB_AP/Core/Ap_StrCmd.c **** 		if( *Buffer == '\n' )
 737              		.loc 1 388 0
 738 001c 0A2B     		cmp	r3, #10
 739 001e F5D1     		bne	.L52
 740              	.LVL46:
 741              	.LBB99:
 742              	.LBB100:
 312:../LIB_AP/Core/Ap_StrCmd.c **** 	if( Ap_StrCmd_PutchPtr != NULL_FUNC )
 743              		.loc 1 312 0
 744 0020 2B68     		ldr	r3, [r5, #0]
 314:../LIB_AP/Core/Ap_StrCmd.c **** 		(*Ap_StrCmd_PutchPtr)( Ch );
 745              		.loc 1 314 0
 746 0022 0D20     		movs	r0, #13
 312:../LIB_AP/Core/Ap_StrCmd.c **** 	if( Ap_StrCmd_PutchPtr != NULL_FUNC )
 747              		.loc 1 312 0
 748 0024 002B     		cmp	r3, #0
 749 0026 F6D0     		beq	.L54
 314:../LIB_AP/Core/Ap_StrCmd.c **** 		(*Ap_StrCmd_PutchPtr)( Ch );
 750              		.loc 1 314 0
 751 0028 9847     		blx	r3
 752              	.LVL47:
 753 002a EFE7     		b	.L52
 754              	.LVL48:
 755              	.L50:
 756 002c 38BD     		pop	{r3, r4, r5, pc}
 757              	.L63:
 758 002e 00BF     		.align	2
 759              	.L62:
 760 0030 00000000 		.word	Ap_StrCmd_PutchPtr
 761              	.LBE100:
 762              	.LBE99:
 763              		.cfi_endproc
 764              	.LFE12:
 766              		.section	.text.Ap_StrCmd_ShowMenuHelp,"ax",%progbits
 767              		.align	2
 768              		.global	Ap_StrCmd_ShowMenuHelp
 769              		.thumb
 770              		.thumb_func
 772              	Ap_StrCmd_ShowMenuHelp:
 773              	.LFB3:
 156:../LIB_AP/Core/Ap_StrCmd.c **** {
 774              		.loc 1 156 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 104
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              	.LVL49:
 779 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 780              	.LCFI6:
 781              		.cfi_def_cfa_offset 28
 782              		.cfi_offset 4, -28
 783              		.cfi_offset 5, -24
 784              		.cfi_offset 6, -20
 785              		.cfi_offset 7, -16
 786              		.cfi_offset 8, -12
 787              		.cfi_offset 9, -8
 788              		.cfi_offset 14, -4
 789              	.LBB101:
 790              	.LBB102:
 371:../LIB_AP/Core/Ap_StrCmd.c **** 	return Ap_StrCmd_Size;
 791              		.loc 1 371 0
 792 0004 134E     		ldr	r6, .L70
 793              	.LBE102:
 794              	.LBE101:
 156:../LIB_AP/Core/Ap_StrCmd.c **** {
 795              		.loc 1 156 0
 796 0006 9DB0     		sub	sp, sp, #116
 797              	.LCFI7:
 798              		.cfi_def_cfa_offset 144
 799              	.LBB106:
 800              	.LBB103:
 371:../LIB_AP/Core/Ap_StrCmd.c **** 	return Ap_StrCmd_Size;
 801              		.loc 1 371 0
 802 0008 3388     		ldrh	r3, [r6, #0]
 803 000a 9BB2     		uxth	r3, r3
 804              	.LBE103:
 805              	.LBE106:
 163:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<Ap_StrCmd_GetSize(); i++ )
 806              		.loc 1 163 0
 807 000c C3B1     		cbz	r3, .L66
 808 000e 124D     		ldr	r5, .L70+4
 809 0010 DFF85890 		ldr	r9, .L70+24
 810 0014 DFF85880 		ldr	r8, .L70+28
 811 0018 0024     		movs	r4, #0
 165:../LIB_AP/Core/Ap_StrCmd.c **** 		Lb_sprintf( StrBuf, "%c<%s> - %s\n", AP_STRCMD_FRAME_PRINT, Ap_StrCmd_Dic_Ptr[i].NameStr, Ap_StrC
 812              		.loc 1 165 0
 813 001a 2C27     		movs	r7, #44
 814              	.LVL50:
 815              	.L65:
 165:../LIB_AP/Core/Ap_StrCmd.c **** 		Lb_sprintf( StrBuf, "%c<%s> - %s\n", AP_STRCMD_FRAME_PRINT, Ap_StrCmd_Dic_Ptr[i].NameStr, Ap_StrC
 816              		.loc 1 165 0 is_stmt 0 discriminator 2
 817 001c 07FB04F3 		mul	r3, r7, r4
 818 0020 E818     		adds	r0, r5, r3
 819 0022 1430     		adds	r0, r0, #20
 820 0024 2A22     		movs	r2, #42
 821 0026 EB18     		adds	r3, r5, r3
 822 0028 0C49     		ldr	r1, .L70+8
 823 002a 0090     		str	r0, [sp, #0]
 824 002c 03A8     		add	r0, sp, #12
 825 002e C847     		blx	r9
 826              	.LVL51:
 166:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_Print( StrBuf );
 827              		.loc 1 166 0 is_stmt 1 discriminator 2
 828 0030 03A8     		add	r0, sp, #12
 829 0032 C047     		blx	r8
 830              	.LVL52:
 831              	.LBB107:
 832              	.LBB104:
 371:../LIB_AP/Core/Ap_StrCmd.c **** 	return Ap_StrCmd_Size;
 833              		.loc 1 371 0 discriminator 2
 834 0034 3388     		ldrh	r3, [r6, #0]
 835              	.LBE104:
 836              	.LBE107:
 163:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<Ap_StrCmd_GetSize(); i++ )
 837              		.loc 1 163 0 discriminator 2
 838 0036 0134     		adds	r4, r4, #1
 839 0038 A4B2     		uxth	r4, r4
 840              	.LVL53:
 841              	.LBB108:
 842              	.LBB105:
 371:../LIB_AP/Core/Ap_StrCmd.c **** 	return Ap_StrCmd_Size;
 843              		.loc 1 371 0 discriminator 2
 844 003a 9BB2     		uxth	r3, r3
 845              	.LBE105:
 846              	.LBE108:
 163:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<Ap_StrCmd_GetSize(); i++ )
 847              		.loc 1 163 0 discriminator 2
 848 003c 9C42     		cmp	r4, r3
 849 003e EDD3     		bcc	.L65
 850              	.LVL54:
 851              	.L66:
 852              	.LBB109:
 853              	.LBB110:
 354:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdCheck  = 0;
 854              		.loc 1 354 0
 855 0040 074A     		ldr	r2, .L70+12
 856 0042 0023     		movs	r3, #0
 857 0044 1370     		strb	r3, [r2, #0]
 355:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_DlyCheck  = 0;
 858              		.loc 1 355 0
 859 0046 074A     		ldr	r2, .L70+16
 860 0048 1370     		strb	r3, [r2, #0]
 356:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_LoopCheck = 0;	
 861              		.loc 1 356 0
 862 004a 074A     		ldr	r2, .L70+20
 863 004c 1370     		strb	r3, [r2, #0]
 864              	.LBE110:
 865              	.LBE109:
 171:../LIB_AP/Core/Ap_StrCmd.c **** }
 866              		.loc 1 171 0
 867 004e 1DB0     		add	sp, sp, #116
 868 0050 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 869              	.L71:
 870              		.align	2
 871              	.L70:
 872 0054 00000000 		.word	Ap_StrCmd_Size
 873 0058 00000000 		.word	Ap_StrCmd_Dic_Ptr
 874 005c 4C000000 		.word	.LC8
 875 0060 00000000 		.word	Ap_StrCmd_CmdCheck
 876 0064 00000000 		.word	Ap_StrCmd_DlyCheck
 877 0068 00000000 		.word	Ap_StrCmd_LoopCheck
 878 006c 00000000 		.word	Lb_sprintf
 879 0070 00000000 		.word	Ap_StrCmd_Print
 880              		.cfi_endproc
 881              	.LFE3:
 883              		.section	.text.Ap_StrCmd_ShowMenu,"ax",%progbits
 884              		.align	2
 885              		.global	Ap_StrCmd_ShowMenu
 886              		.thumb
 887              		.thumb_func
 889              	Ap_StrCmd_ShowMenu:
 890              	.LFB2:
 129:../LIB_AP/Core/Ap_StrCmd.c **** {
 891              		.loc 1 129 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 200
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895              	.LVL55:
 896 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 897              	.LCFI8:
 898              		.cfi_def_cfa_offset 28
 899              		.cfi_offset 4, -28
 900              		.cfi_offset 5, -24
 901              		.cfi_offset 6, -20
 902              		.cfi_offset 7, -16
 903              		.cfi_offset 8, -12
 904              		.cfi_offset 9, -8
 905              		.cfi_offset 14, -4
 906              	.LBB111:
 907              	.LBB112:
 371:../LIB_AP/Core/Ap_StrCmd.c **** 	return Ap_StrCmd_Size;
 908              		.loc 1 371 0
 909 0004 114D     		ldr	r5, .L78
 910              	.LBE112:
 911              	.LBE111:
 129:../LIB_AP/Core/Ap_StrCmd.c **** {
 912              		.loc 1 129 0
 913 0006 B3B0     		sub	sp, sp, #204
 914              	.LCFI9:
 915              		.cfi_def_cfa_offset 232
 916              	.LBB116:
 917              	.LBB113:
 371:../LIB_AP/Core/Ap_StrCmd.c **** 	return Ap_StrCmd_Size;
 918              		.loc 1 371 0
 919 0008 2B88     		ldrh	r3, [r5, #0]
 920 000a 9BB2     		uxth	r3, r3
 921              	.LBE113:
 922              	.LBE116:
 136:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<Ap_StrCmd_GetSize(); i++ )
 923              		.loc 1 136 0
 924 000c A3B1     		cbz	r3, .L74
 925 000e DFF85490 		ldr	r9, .L78+24
 926 0012 DFF85480 		ldr	r8, .L78+28
 927 0016 0E4F     		ldr	r7, .L78+4
 928 0018 0024     		movs	r4, #0
 138:../LIB_AP/Core/Ap_StrCmd.c **** 		Lb_sprintf( StrBuf, "%c%s\n", AP_STRCMD_FRAME_PRINT, Ap_StrCmd_Dic_Ptr[i].NameStr );
 929              		.loc 1 138 0
 930 001a 2C26     		movs	r6, #44
 931              	.LVL56:
 932              	.L73:
 138:../LIB_AP/Core/Ap_StrCmd.c **** 		Lb_sprintf( StrBuf, "%c%s\n", AP_STRCMD_FRAME_PRINT, Ap_StrCmd_Dic_Ptr[i].NameStr );
 933              		.loc 1 138 0 is_stmt 0 discriminator 2
 934 001c 06FB0493 		mla	r3, r6, r4, r9
 935 0020 2A22     		movs	r2, #42
 936 0022 0C49     		ldr	r1, .L78+8
 937 0024 6846     		mov	r0, sp
 938 0026 C047     		blx	r8
 939              	.LVL57:
 139:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_Print( StrBuf );
 940              		.loc 1 139 0 is_stmt 1 discriminator 2
 941 0028 6846     		mov	r0, sp
 942 002a B847     		blx	r7
 943              	.LVL58:
 944              	.LBB117:
 945              	.LBB114:
 371:../LIB_AP/Core/Ap_StrCmd.c **** 	return Ap_StrCmd_Size;
 946              		.loc 1 371 0 discriminator 2
 947 002c 2B88     		ldrh	r3, [r5, #0]
 948              	.LBE114:
 949              	.LBE117:
 136:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<Ap_StrCmd_GetSize(); i++ )
 950              		.loc 1 136 0 discriminator 2
 951 002e 0134     		adds	r4, r4, #1
 952 0030 A4B2     		uxth	r4, r4
 953              	.LVL59:
 954              	.LBB118:
 955              	.LBB115:
 371:../LIB_AP/Core/Ap_StrCmd.c **** 	return Ap_StrCmd_Size;
 956              		.loc 1 371 0 discriminator 2
 957 0032 9BB2     		uxth	r3, r3
 958              	.LBE115:
 959              	.LBE118:
 136:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<Ap_StrCmd_GetSize(); i++ )
 960              		.loc 1 136 0 discriminator 2
 961 0034 9C42     		cmp	r4, r3
 962 0036 F1D3     		bcc	.L73
 963              	.LVL60:
 964              	.L74:
 965              	.LBB119:
 966              	.LBB120:
 354:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdCheck  = 0;
 967              		.loc 1 354 0
 968 0038 074A     		ldr	r2, .L78+12
 969 003a 0023     		movs	r3, #0
 970 003c 1370     		strb	r3, [r2, #0]
 355:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_DlyCheck  = 0;
 971              		.loc 1 355 0
 972 003e 074A     		ldr	r2, .L78+16
 973 0040 1370     		strb	r3, [r2, #0]
 356:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_LoopCheck = 0;	
 974              		.loc 1 356 0
 975 0042 074A     		ldr	r2, .L78+20
 976 0044 1370     		strb	r3, [r2, #0]
 977              	.LBE120:
 978              	.LBE119:
 143:../LIB_AP/Core/Ap_StrCmd.c **** }
 979              		.loc 1 143 0
 980 0046 33B0     		add	sp, sp, #204
 981 0048 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 982              	.L79:
 983              		.align	2
 984              	.L78:
 985 004c 00000000 		.word	Ap_StrCmd_Size
 986 0050 00000000 		.word	Ap_StrCmd_Print
 987 0054 5C000000 		.word	.LC9
 988 0058 00000000 		.word	Ap_StrCmd_CmdCheck
 989 005c 00000000 		.word	Ap_StrCmd_DlyCheck
 990 0060 00000000 		.word	Ap_StrCmd_LoopCheck
 991 0064 00000000 		.word	Ap_StrCmd_Dic_Ptr
 992 0068 00000000 		.word	Lb_sprintf
 993              		.cfi_endproc
 994              	.LFE2:
 996              		.section	.text.Ap_StrCmd_Printf,"ax",%progbits
 997              		.align	2
 998              		.global	Ap_StrCmd_Printf
 999              		.thumb
 1000              		.thumb_func
 1002              	Ap_StrCmd_Printf:
 1003              	.LFB13:
 409:../LIB_AP/Core/Ap_StrCmd.c **** {
 1004              		.loc 1 409 0
 1005              		.cfi_startproc
 1006              		@ args = 4, pretend = 16, frame = 200
 1007              		@ frame_needed = 0, uses_anonymous_args = 1
 1008              	.LVL61:
 1009 0000 0FB4     		push	{r0, r1, r2, r3}
 1010              	.LCFI10:
 1011              		.cfi_def_cfa_offset 16
 1012              		.cfi_offset 0, -16
 1013              		.cfi_offset 1, -12
 1014              		.cfi_offset 2, -8
 1015              		.cfi_offset 3, -4
 1016 0002 00B5     		push	{lr}
 1017              	.LCFI11:
 1018              		.cfi_def_cfa_offset 20
 1019              		.cfi_offset 14, -20
 1020 0004 B3B0     		sub	sp, sp, #204
 1021              	.LCFI12:
 1022              		.cfi_def_cfa_offset 224
 1023              	.LVL62:
 415:../LIB_AP/Core/Ap_StrCmd.c **** 	Lb_vsprintf( Str, format, ap );	
 1024              		.loc 1 415 0
 1025 0006 34AA     		add	r2, sp, #208
 1026 0008 40F20003 		movw	r3, #:lower16:Lb_vsprintf
 1027 000c 6846     		mov	r0, sp
 1028 000e 52F8041B 		ldr	r1, [r2], #4
 1029 0012 C0F20003 		movt	r3, #:upper16:Lb_vsprintf
 1030 0016 9847     		blx	r3
 1031              	.LVL63:
 419:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Print(Str);
 1032              		.loc 1 419 0
 1033 0018 40F20003 		movw	r3, #:lower16:Ap_StrCmd_Print
 1034 001c 6846     		mov	r0, sp
 1035 001e C0F20003 		movt	r3, #:upper16:Ap_StrCmd_Print
 1036 0022 9847     		blx	r3
 1037              	.LVL64:
 420:../LIB_AP/Core/Ap_StrCmd.c **** }
 1038              		.loc 1 420 0
 1039 0024 33B0     		add	sp, sp, #204
 1040 0026 5DF804EB 		pop	{lr}
 1041 002a 04B0     		add	sp, sp, #16
 1042 002c 7047     		bx	lr
 1043              		.cfi_endproc
 1044              	.LFE13:
 1046 002e 00BF     		.section	.text.Ap_StrCmd_Echo,"ax",%progbits
 1047              		.align	2
 1048              		.global	Ap_StrCmd_Echo
 1049              		.thumb
 1050              		.thumb_func
 1052              	Ap_StrCmd_Echo:
 1053              	.LFB5:
 210:../LIB_AP/Core/Ap_StrCmd.c **** {
 1054              		.loc 1 210 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 24
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
 1058              	.LVL65:
 1059 0000 10B5     		push	{r4, lr}
 1060              	.LCFI13:
 1061              		.cfi_def_cfa_offset 8
 1062              		.cfi_offset 4, -8
 1063              		.cfi_offset 14, -4
 1064 0002 86B0     		sub	sp, sp, #24
 1065              	.LCFI14:
 1066              		.cfi_def_cfa_offset 32
 217:../LIB_AP/Core/Ap_StrCmd.c **** 	sscanf(arg, "%s %s", CmdMain, Arg1);
 1067              		.loc 1 217 0
 1068 0004 0846     		mov	r0, r1
 1069 0006 6A46     		mov	r2, sp
 1070 0008 1049     		ldr	r1, .L85
 1071              	.LVL66:
 1072 000a 03AB     		add	r3, sp, #12
 1073 000c 104C     		ldr	r4, .L85+4
 1074 000e A047     		blx	r4
 1075              	.LVL67:
 219:../LIB_AP/Core/Ap_StrCmd.c **** 	if( strncmp( Arg1, "ON", 2 ) == 0 )
 1076              		.loc 1 219 0
 1077 0010 03A8     		add	r0, sp, #12
 1078 0012 1049     		ldr	r1, .L85+8
 1079 0014 0222     		movs	r2, #2
 1080 0016 104B     		ldr	r3, .L85+12
 1081 0018 9847     		blx	r3
 1082              	.LVL68:
 1083 001a 78B1     		cbz	r0, .L84
 226:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_EchoEnable = FALSE;
 1084              		.loc 1 226 0
 1085 001c 0F4B     		ldr	r3, .L85+16
 1086 001e 0022     		movs	r2, #0
 1087 0020 1A70     		strb	r2, [r3, #0]
 227:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_Printf("%cEcho off\n", AP_STRCMD_FRAME_PRINT);	
 1088              		.loc 1 227 0
 1089 0022 0F48     		ldr	r0, .L85+20
 1090 0024 2A21     		movs	r1, #42
 1091 0026 0F4B     		ldr	r3, .L85+24
 1092 0028 9847     		blx	r3
 1093              	.LVL69:
 1094              	.L83:
 1095              	.LBB121:
 1096              	.LBB122:
 354:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdCheck  = 0;
 1097              		.loc 1 354 0
 1098 002a 0F4A     		ldr	r2, .L85+28
 1099 002c 0023     		movs	r3, #0
 1100 002e 1370     		strb	r3, [r2, #0]
 355:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_DlyCheck  = 0;
 1101              		.loc 1 355 0
 1102 0030 0E4A     		ldr	r2, .L85+32
 1103 0032 1370     		strb	r3, [r2, #0]
 356:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_LoopCheck = 0;	
 1104              		.loc 1 356 0
 1105 0034 0E4A     		ldr	r2, .L85+36
 1106 0036 1370     		strb	r3, [r2, #0]
 1107              	.LBE122:
 1108              	.LBE121:
 231:../LIB_AP/Core/Ap_StrCmd.c **** }
 1109              		.loc 1 231 0
 1110 0038 06B0     		add	sp, sp, #24
 1111 003a 10BD     		pop	{r4, pc}
 1112              	.L84:
 221:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_EchoEnable = TRUE;
 1113              		.loc 1 221 0
 1114 003c 074B     		ldr	r3, .L85+16
 1115 003e 0122     		movs	r2, #1
 1116 0040 1A70     		strb	r2, [r3, #0]
 222:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_Printf("%cEcho on\n", AP_STRCMD_FRAME_PRINT);
 1117              		.loc 1 222 0
 1118 0042 0C48     		ldr	r0, .L85+40
 1119 0044 2A21     		movs	r1, #42
 1120 0046 074B     		ldr	r3, .L85+24
 1121 0048 9847     		blx	r3
 1122              	.LVL70:
 1123 004a EEE7     		b	.L83
 1124              	.L86:
 1125              		.align	2
 1126              	.L85:
 1127 004c 64000000 		.word	.LC10
 1128 0050 00000000 		.word	sscanf
 1129 0054 6C000000 		.word	.LC11
 1130 0058 00000000 		.word	strncmp
 1131 005c 00000000 		.word	.LANCHOR0
 1132 0060 7C000000 		.word	.LC13
 1133 0064 00000000 		.word	Ap_StrCmd_Printf
 1134 0068 00000000 		.word	Ap_StrCmd_CmdCheck
 1135 006c 00000000 		.word	Ap_StrCmd_DlyCheck
 1136 0070 00000000 		.word	Ap_StrCmd_LoopCheck
 1137 0074 70000000 		.word	.LC12
 1138              		.cfi_endproc
 1139              	.LFE5:
 1141              		.section	.text.Ap_StrCmd_ShowInfo,"ax",%progbits
 1142              		.align	2
 1143              		.global	Ap_StrCmd_ShowInfo
 1144              		.thumb
 1145              		.thumb_func
 1147              	Ap_StrCmd_ShowInfo:
 1148              	.LFB4:
 184:../LIB_AP/Core/Ap_StrCmd.c **** {
 1149              		.loc 1 184 0
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 0
 1152              		@ frame_needed = 0, uses_anonymous_args = 0
 1153              	.LVL71:
 1154 0000 38B5     		push	{r3, r4, r5, lr}
 1155              	.LCFI15:
 1156              		.cfi_def_cfa_offset 16
 1157              		.cfi_offset 3, -16
 1158              		.cfi_offset 4, -12
 1159              		.cfi_offset 5, -8
 1160              		.cfi_offset 14, -4
 188:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Printf( "%c----------------------------------------- \r\n", AP_STRCMD_FRAME_PRINT );
 1161              		.loc 1 188 0
 1162 0002 40F20005 		movw	r5, #:lower16:.LC14
 1163 0006 C0F20005 		movt	r5, #:upper16:.LC14
 1164 000a 40F20004 		movw	r4, #:lower16:Ap_StrCmd_Printf
 1165 000e C0F20004 		movt	r4, #:upper16:Ap_StrCmd_Printf
 1166 0012 2846     		mov	r0, r5
 1167 0014 2A21     		movs	r1, #42
 1168              	.LVL72:
 1169 0016 A047     		blx	r4
 1170              	.LVL73:
 189:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Printf( "%c             Ap_StrCmd v0.1               \r\n", AP_STRCMD_FRAME_PRINT );
 1171              		.loc 1 189 0
 1172 0018 40F20000 		movw	r0, #:lower16:.LC15
 1173 001c C0F20000 		movt	r0, #:upper16:.LC15
 1174 0020 2A21     		movs	r1, #42
 1175 0022 A047     		blx	r4
 1176              	.LVL74:
 190:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Printf( "%c                                          \r\n", AP_STRCMD_FRAME_PRINT );
 1177              		.loc 1 190 0
 1178 0024 40F20000 		movw	r0, #:lower16:.LC16
 1179 0028 C0F20000 		movt	r0, #:upper16:.LC16
 1180 002c 2A21     		movs	r1, #42
 1181 002e A047     		blx	r4
 1182              	.LVL75:
 191:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Printf( "%c        made by : Cho Han Cheol           \r\n", AP_STRCMD_FRAME_PRINT );	
 1183              		.loc 1 191 0
 1184 0030 40F20000 		movw	r0, #:lower16:.LC17
 1185 0034 2A21     		movs	r1, #42
 1186 0036 C0F20000 		movt	r0, #:upper16:.LC17
 1187 003a A047     		blx	r4
 1188              	.LVL76:
 192:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Printf( "%c----------------------------------------- \r\n", AP_STRCMD_FRAME_PRINT );
 1189              		.loc 1 192 0
 1190 003c 2846     		mov	r0, r5
 1191 003e 2A21     		movs	r1, #42
 1192 0040 A047     		blx	r4
 1193              	.LVL77:
 1194              	.LBB123:
 1195              	.LBB124:
 354:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdCheck  = 0;
 1196              		.loc 1 354 0
 1197 0042 40F20000 		movw	r0, #:lower16:Ap_StrCmd_CmdCheck
 355:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_DlyCheck  = 0;
 1198              		.loc 1 355 0
 1199 0046 40F20001 		movw	r1, #:lower16:Ap_StrCmd_DlyCheck
 356:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_LoopCheck = 0;	
 1200              		.loc 1 356 0
 1201 004a 40F20003 		movw	r3, #:lower16:Ap_StrCmd_LoopCheck
 354:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdCheck  = 0;
 1202              		.loc 1 354 0
 1203 004e 0022     		movs	r2, #0
 1204 0050 C0F20000 		movt	r0, #:upper16:Ap_StrCmd_CmdCheck
 355:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_DlyCheck  = 0;
 1205              		.loc 1 355 0
 1206 0054 C0F20001 		movt	r1, #:upper16:Ap_StrCmd_DlyCheck
 356:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_LoopCheck = 0;	
 1207              		.loc 1 356 0
 1208 0058 C0F20003 		movt	r3, #:upper16:Ap_StrCmd_LoopCheck
 354:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_CmdCheck  = 0;
 1209              		.loc 1 354 0
 1210 005c 0270     		strb	r2, [r0, #0]
 355:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_DlyCheck  = 0;
 1211              		.loc 1 355 0
 1212 005e 0A70     		strb	r2, [r1, #0]
 356:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_LoopCheck = 0;	
 1213              		.loc 1 356 0
 1214 0060 1A70     		strb	r2, [r3, #0]
 1215 0062 38BD     		pop	{r3, r4, r5, pc}
 1216              	.LBE124:
 1217              	.LBE123:
 1218              		.cfi_endproc
 1219              	.LFE4:
 1221              		.section	.text.Ap_StrCmd_ExeFunc,"ax",%progbits
 1222              		.align	2
 1223              		.global	Ap_StrCmd_ExeFunc
 1224              		.thumb
 1225              		.thumb_func
 1227              	Ap_StrCmd_ExeFunc:
 1228              	.LFB15:
 456:../LIB_AP/Core/Ap_StrCmd.c **** {
 1229              		.loc 1 456 0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 64
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1234              	.LCFI16:
 1235              		.cfi_def_cfa_offset 36
 1236              		.cfi_offset 4, -36
 1237              		.cfi_offset 5, -32
 1238              		.cfi_offset 6, -28
 1239              		.cfi_offset 7, -24
 1240              		.cfi_offset 8, -20
 1241              		.cfi_offset 9, -16
 1242              		.cfi_offset 10, -12
 1243              		.cfi_offset 11, -8
 1244              		.cfi_offset 14, -4
 1245 0004 91B0     		sub	sp, sp, #68
 1246              	.LCFI17:
 1247              		.cfi_def_cfa_offset 104
 467:../LIB_AP/Core/Ap_StrCmd.c **** 	Disable_ISR();
 1248              		.loc 1 467 0
 1249              	@ 467 "../LIB_AP/Core/Ap_StrCmd.c" 1
 1250 0006 72B6     		cpsid i
 1251              	@ 0 "" 2
 468:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_Q_Pop( AP_STRCMD_Q_RX_CH, &CmdMsg );
 1252              		.loc 1 468 0
 1253              		.thumb
 1254 0008 0020     		movs	r0, #0
 1255 000a 01A9     		add	r1, sp, #4
 1256 000c 2F4B     		ldr	r3, .L112
 1257 000e 9847     		blx	r3
 1258              	.LVL78:
 469:../LIB_AP/Core/Ap_StrCmd.c **** 	Enable_ISR();
 1259              		.loc 1 469 0
 1260              	@ 469 "../LIB_AP/Core/Ap_StrCmd.c" 1
 1261 0010 62B6     		cpsie i
 1262              	@ 0 "" 2
 1263              		.thumb
 1264              	.LBB125:
 1265              	.LBB126:
 371:../LIB_AP/Core/Ap_StrCmd.c **** 	return Ap_StrCmd_Size;
 1266              		.loc 1 371 0
 1267 0012 2F4B     		ldr	r3, .L112+4
 1268 0014 B3F80080 		ldrh	r8, [r3, #0]
 1269 0018 1FFA88F8 		uxth	r8, r8
 1270              	.LVL79:
 1271              	.LBE126:
 1272              	.LBE125:
 473:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<CmdSize; i++ )
 1273              		.loc 1 473 0
 1274 001c B8F1000F 		cmp	r8, #0
 1275 0020 49D0     		beq	.L89
 1276 0022 2C4B     		ldr	r3, .L112+8
 1277 0024 DFF8B0A0 		ldr	sl, .L112+12
 1278 0028 4FF0000B 		mov	fp, #0
 1279 002c 1C68     		ldr	r4, [r3, #0]
 1280 002e 5546     		mov	r5, sl
 1281 0030 5E46     		mov	r6, fp
 1282              	.LBB127:
 1283              	.LBB128:
 572:../LIB_AP/Core/Ap_StrCmd.c **** 		if( Dest[Size] == 0 ) break;
 1284              		.loc 1 572 0
 1285 0032 2C27     		movs	r7, #44
 1286              	.LVL80:
 1287              	.L97:
 1288 0034 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1289 0036 002B     		cmp	r3, #0
 1290 0038 41D0     		beq	.L98
 1291 003a 07FB0BF1 		mul	r1, r7, fp
 1292 003e 0023     		movs	r3, #0
 1293              	.LVL81:
 1294              	.L91:
 574:../LIB_AP/Core/Ap_StrCmd.c **** 		Size++;
 1295              		.loc 1 574 0
 1296 0040 0133     		adds	r3, r3, #1
 1297 0042 9BB2     		uxth	r3, r3
 1298              	.LVL82:
 572:../LIB_AP/Core/Ap_StrCmd.c **** 		if( Dest[Size] == 0 ) break;
 1299              		.loc 1 572 0
 1300 0044 CA18     		adds	r2, r1, r3
 1301 0046 1AF80220 		ldrb	r2, [sl, r2]	@ zero_extendqisi2
 1302 004a 9946     		mov	r9, r3
 1303 004c 002A     		cmp	r2, #0
 1304 004e F7D1     		bne	.L91
 1305              	.LVL83:
 1306              	.L90:
 1307              	.LBE128:
 1308              	.LBE127:
 476:../LIB_AP/Core/Ap_StrCmd.c **** 		CmdBufStrSize = strlen( (char *)CmdMsg.Str );
 1309              		.loc 1 476 0
 1310 0050 40F20002 		movw	r2, #:lower16:strlen
 1311 0054 01A8     		add	r0, sp, #4
 1312 0056 C0F20002 		movt	r2, #:upper16:strlen
 1313 005a 9047     		blx	r2
 1314              	.LVL84:
 1315 005c 80B2     		uxth	r0, r0
 1316              	.LVL85:
 478:../LIB_AP/Core/Ap_StrCmd.c **** 		for( j=0; j<CmdBufStrSize; j++ )
 1317              		.loc 1 478 0
 1318 005e B0B1     		cbz	r0, .L92
 455:../LIB_AP/Core/Ap_StrCmd.c **** s16 Ap_StrCmd_ExeFunc( void )
 1319              		.loc 1 455 0
 1320 0060 00F1FF3E 		add	lr, r0, #-1
 1321 0064 1FFA8EFE 		uxth	lr, lr
 1322 0068 0DF10502 		add	r2, sp, #5
 1323 006c 01AB     		add	r3, sp, #4
 1324 006e 9644     		add	lr, r2, lr
 1325              	.LVL86:
 1326              	.L95:
 1327              	.LBB130:
 480:../LIB_AP/Core/Ap_StrCmd.c **** 			CmdMsg.Str[j] = toupper( CmdMsg.Str[j] );
 1328              		.loc 1 480 0
 1329 0070 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 1330              	.LVL87:
 1331 0074 A118     		adds	r1, r4, r2
 1332 0076 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 1333 0078 1146     		mov	r1, r2
 1334 007a 00F00300 		and	r0, r0, #3
 1335 007e 0228     		cmp	r0, #2
 1336 0080 08BF     		it	eq
 1337 0082 A2F12001 		subeq	r1, r2, #32
 1338              	.LBE130:
 478:../LIB_AP/Core/Ap_StrCmd.c **** 		for( j=0; j<CmdBufStrSize; j++ )
 1339              		.loc 1 478 0
 1340 0086 7345     		cmp	r3, lr
 480:../LIB_AP/Core/Ap_StrCmd.c **** 			CmdMsg.Str[j] = toupper( CmdMsg.Str[j] );
 1341              		.loc 1 480 0
 1342 0088 03F8011C 		strb	r1, [r3, #-1]
 478:../LIB_AP/Core/Ap_StrCmd.c **** 		for( j=0; j<CmdBufStrSize; j++ )
 1343              		.loc 1 478 0
 1344 008c F0D1     		bne	.L95
 1345              	.LVL88:
 1346              	.L92:
 483:../LIB_AP/Core/Ap_StrCmd.c **** 		CmdCheck = strncmp( Ap_StrCmd_Dic_Ptr[i].NameStr, (char *)CmdMsg.Str, CmdStrSize );
 1347              		.loc 1 483 0
 1348 008e 40F20003 		movw	r3, #:lower16:strncmp
 1349 0092 07FB0BA0 		mla	r0, r7, fp, sl
 1350 0096 01A9     		add	r1, sp, #4
 1351 0098 4A46     		mov	r2, r9
 1352 009a C0F20003 		movt	r3, #:upper16:strncmp
 1353 009e 9847     		blx	r3
 1354              	.LVL89:
 486:../LIB_AP/Core/Ap_StrCmd.c **** 		if( CmdCheck == 0 && Ap_StrCmd_Dic_Ptr[i].Func_Ptr != NULL )
 1355              		.loc 1 486 0
 1356 00a0 00B2     		sxth	r0, r0
 1357 00a2 08B9     		cbnz	r0, .L96
 486:../LIB_AP/Core/Ap_StrCmd.c **** 		if( CmdCheck == 0 && Ap_StrCmd_Dic_Ptr[i].Func_Ptr != NULL )
 1358              		.loc 1 486 0 is_stmt 0 discriminator 1
 1359 00a4 AB6A     		ldr	r3, [r5, #40]
 1360 00a6 63B9     		cbnz	r3, .L111
 1361              	.L96:
 1362 00a8 0BF1010B 		add	fp, fp, #1
 1363              	.LVL90:
 473:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<CmdSize; i++ )
 1364              		.loc 1 473 0 is_stmt 1
 1365 00ac 1FFA8BF6 		uxth	r6, fp
 1366 00b0 2C35     		adds	r5, r5, #44
 1367 00b2 B045     		cmp	r8, r6
 1368 00b4 BED8     		bhi	.L97
 1369              	.LVL91:
 1370              	.L89:
 495:../LIB_AP/Core/Ap_StrCmd.c **** }
 1371              		.loc 1 495 0
 1372 00b6 0020     		movs	r0, #0
 1373 00b8 11B0     		add	sp, sp, #68
 1374 00ba BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1375              	.LVL92:
 1376              	.L98:
 1377              	.LBB131:
 1378              	.LBB129:
 572:../LIB_AP/Core/Ap_StrCmd.c **** 		if( Dest[Size] == 0 ) break;
 1379              		.loc 1 572 0
 1380 00be 9946     		mov	r9, r3
 1381 00c0 C6E7     		b	.L90
 1382              	.LVL93:
 1383              	.L111:
 1384              	.LBE129:
 1385              	.LBE131:
 488:../LIB_AP/Core/Ap_StrCmd.c **** 			AP_STRCMD_DIC_FUNC_EXEC(i, CmdMsg.Str); 			
 1386              		.loc 1 488 0
 1387 00c2 F0B2     		uxtb	r0, r6
 1388              	.LVL94:
 1389 00c4 01A9     		add	r1, sp, #4
 1390 00c6 9847     		blx	r3
 1391              	.LVL95:
 489:../LIB_AP/Core/Ap_StrCmd.c **** 			break;
 1392              		.loc 1 489 0
 1393 00c8 F5E7     		b	.L89
 1394              	.L113:
 1395 00ca 00BF     		.align	2
 1396              	.L112:
 1397 00cc 00000000 		.word	Ap_StrCmd_Q_Pop
 1398 00d0 00000000 		.word	Ap_StrCmd_Size
 1399 00d4 00000000 		.word	__ctype_ptr__
 1400 00d8 00000000 		.word	Ap_StrCmd_Dic_Ptr
 1401              		.cfi_endproc
 1402              	.LFE15:
 1404              		.section	.text.Ap_StrCmd_ExeCmd,"ax",%progbits
 1405              		.align	2
 1406              		.global	Ap_StrCmd_ExeCmd
 1407              		.thumb
 1408              		.thumb_func
 1410              	Ap_StrCmd_ExeCmd:
 1411              	.LFB14:
 433:../LIB_AP/Core/Ap_StrCmd.c **** {
 1412              		.loc 1 433 0
 1413              		.cfi_startproc
 1414              		@ args = 0, pretend = 0, frame = 0
 1415              		@ frame_needed = 0, uses_anonymous_args = 0
 1416              	.LVL96:
 1417 0000 08B5     		push	{r3, lr}
 1418              	.LCFI18:
 1419              		.cfi_def_cfa_offset 8
 1420              		.cfi_offset 3, -8
 1421              		.cfi_offset 14, -4
 436:../LIB_AP/Core/Ap_StrCmd.c **** 	if( Ap_StrCmd_Q_SIZE(AP_STRCMD_Q_RX_CH) )
 1422              		.loc 1 436 0
 1423 0002 0020     		movs	r0, #0
 1424 0004 034B     		ldr	r3, .L117
 1425 0006 9847     		blx	r3
 1426              	.LVL97:
 1427 0008 10B1     		cbz	r0, .L115
 438:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_ExeFunc();
 1428              		.loc 1 438 0
 1429 000a 034B     		ldr	r3, .L117+4
 1430 000c 9847     		blx	r3
 1431              	.LVL98:
 439:../LIB_AP/Core/Ap_StrCmd.c **** 		Ret = TRUE;
 1432              		.loc 1 439 0
 1433 000e 0120     		movs	r0, #1
 1434              	.LVL99:
 1435              	.L115:
 443:../LIB_AP/Core/Ap_StrCmd.c **** }
 1436              		.loc 1 443 0
 1437 0010 08BD     		pop	{r3, pc}
 1438              	.L118:
 1439 0012 00BF     		.align	2
 1440              	.L117:
 1441 0014 00000000 		.word	Ap_StrCmd_Q_SIZE
 1442 0018 00000000 		.word	Ap_StrCmd_ExeFunc
 1443              		.cfi_endproc
 1444              	.LFE14:
 1446              		.section	.text.Ap_StrCmd_Delay,"ax",%progbits
 1447              		.align	2
 1448              		.global	Ap_StrCmd_Delay
 1449              		.thumb
 1450              		.thumb_func
 1452              	Ap_StrCmd_Delay:
 1453              	.LFB16:
 508:../LIB_AP/Core/Ap_StrCmd.c **** {
 1454              		.loc 1 508 0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 0
 1457              		@ frame_needed = 0, uses_anonymous_args = 0
 1458              		@ link register save eliminated.
 1459              	.LVL100:
 512:../LIB_AP/Core/Ap_StrCmd.c **** 	Ap_StrCmd_DlyCheck = 0;
 1460              		.loc 1 512 0
 1461 0000 40F20003 		movw	r3, #:lower16:Ap_StrCmd_DlyCheck
 1462 0004 0020     		movs	r0, #0
 1463              	.LVL101:
 1464 0006 C0F20003 		movt	r3, #:upper16:Ap_StrCmd_DlyCheck
 1465 000a 1870     		strb	r0, [r3, #0]
 1466              	.LVL102:
 525:../LIB_AP/Core/Ap_StrCmd.c **** }
 1467              		.loc 1 525 0
 1468 000c 7047     		bx	lr
 1469              		.cfi_endproc
 1470              	.LFE16:
 1472              		.section	.text.Ap_StrCmd_Loop,"ax",%progbits
 1473              		.align	2
 1474              		.global	Ap_StrCmd_Loop
 1475              		.thumb
 1476              		.thumb_func
 1478              	Ap_StrCmd_Loop:
 1479              	.LFB17:
 539:../LIB_AP/Core/Ap_StrCmd.c **** {	
 1480              		.loc 1 539 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
 1484              		@ link register save eliminated.
 542:../LIB_AP/Core/Ap_StrCmd.c **** 	if( Ap_StrCmd_LoopCheck == 1 )
 1485              		.loc 1 542 0
 1486 0000 044B     		ldr	r3, .L124
 1487 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1488 0004 012A     		cmp	r2, #1
 1489 0006 01D0     		beq	.L123
 549:../LIB_AP/Core/Ap_StrCmd.c **** 		Ret = 1;
 1490              		.loc 1 549 0
 1491 0008 0120     		movs	r0, #1
 1492              	.LVL103:
 553:../LIB_AP/Core/Ap_StrCmd.c **** }
 1493              		.loc 1 553 0
 1494 000a 7047     		bx	lr
 1495              	.LVL104:
 1496              	.L123:
 544:../LIB_AP/Core/Ap_StrCmd.c **** 		Ap_StrCmd_LoopCheck = 0;
 1497              		.loc 1 544 0
 1498 000c 0020     		movs	r0, #0
 1499 000e 1870     		strb	r0, [r3, #0]
 1500              	.LVL105:
 1501 0010 7047     		bx	lr
 1502              	.L125:
 1503 0012 00BF     		.align	2
 1504              	.L124:
 1505 0014 00000000 		.word	Ap_StrCmd_LoopCheck
 1506              		.cfi_endproc
 1507              	.LFE17:
 1509              		.section	.text.Ap_StrCmd_StrLen,"ax",%progbits
 1510              		.align	2
 1511              		.global	Ap_StrCmd_StrLen
 1512              		.thumb
 1513              		.thumb_func
 1515              	Ap_StrCmd_StrLen:
 1516              	.LFB18:
 567:../LIB_AP/Core/Ap_StrCmd.c **** {
 1517              		.loc 1 567 0
 1518              		.cfi_startproc
 1519              		@ args = 0, pretend = 0, frame = 0
 1520              		@ frame_needed = 0, uses_anonymous_args = 0
 1521              		@ link register save eliminated.
 1522              	.LVL106:
 567:../LIB_AP/Core/Ap_StrCmd.c **** {
 1523              		.loc 1 567 0
 1524 0000 0246     		mov	r2, r0
 572:../LIB_AP/Core/Ap_StrCmd.c **** 		if( Dest[Size] == 0 ) break;
 1525              		.loc 1 572 0
 1526 0002 0078     		ldrb	r0, [r0, #0]	@ zero_extendqisi2
 1527              	.LVL107:
 1528 0004 28B1     		cbz	r0, .L127
 1529 0006 0020     		movs	r0, #0
 1530              	.LVL108:
 1531              	.L128:
 574:../LIB_AP/Core/Ap_StrCmd.c **** 		Size++;
 1532              		.loc 1 574 0
 1533 0008 0130     		adds	r0, r0, #1
 1534 000a 80B2     		uxth	r0, r0
 1535              	.LVL109:
 572:../LIB_AP/Core/Ap_StrCmd.c **** 		if( Dest[Size] == 0 ) break;
 1536              		.loc 1 572 0
 1537 000c 135C     		ldrb	r3, [r2, r0]	@ zero_extendqisi2
 1538 000e 002B     		cmp	r3, #0
 1539 0010 FAD1     		bne	.L128
 1540              	.LVL110:
 1541              	.L127:
 578:../LIB_AP/Core/Ap_StrCmd.c **** }
 1542              		.loc 1 578 0
 1543 0012 7047     		bx	lr
 1544              		.cfi_endproc
 1545              	.LFE18:
 1547              		.section	.text.Ap_StrCmd_StrCopy,"ax",%progbits
 1548              		.align	2
 1549              		.global	Ap_StrCmd_StrCopy
 1550              		.thumb
 1551              		.thumb_func
 1553              	Ap_StrCmd_StrCopy:
 1554              	.LFB19:
 591:../LIB_AP/Core/Ap_StrCmd.c **** {
 1555              		.loc 1 591 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 0
 1558              		@ frame_needed = 0, uses_anonymous_args = 0
 1559              		@ link register save eliminated.
 1560              	.LVL111:
 1561              	.LBB132:
 1562              	.LBB133:
 572:../LIB_AP/Core/Ap_StrCmd.c **** 		if( Dest[Size] == 0 ) break;
 1563              		.loc 1 572 0
 1564 0000 0A78     		ldrb	r2, [r1, #0]	@ zero_extendqisi2
 1565              	.LBE133:
 1566              	.LBE132:
 591:../LIB_AP/Core/Ap_StrCmd.c **** {
 1567              		.loc 1 591 0
 1568 0002 10B4     		push	{r4}
 1569              	.LCFI19:
 1570              		.cfi_def_cfa_offset 4
 1571              		.cfi_offset 4, -4
 1572              	.LBB135:
 1573              	.LBB134:
 572:../LIB_AP/Core/Ap_StrCmd.c **** 		if( Dest[Size] == 0 ) break;
 1574              		.loc 1 572 0
 1575 0004 62B1     		cbz	r2, .L132
 1576 0006 0022     		movs	r2, #0
 1577              	.LVL112:
 1578              	.L133:
 574:../LIB_AP/Core/Ap_StrCmd.c **** 		Size++;
 1579              		.loc 1 574 0
 1580 0008 0132     		adds	r2, r2, #1
 1581 000a 92B2     		uxth	r2, r2
 1582              	.LVL113:
 572:../LIB_AP/Core/Ap_StrCmd.c **** 		if( Dest[Size] == 0 ) break;
 1583              		.loc 1 572 0
 1584 000c 8B5C     		ldrb	r3, [r1, r2]	@ zero_extendqisi2
 1585 000e 002B     		cmp	r3, #0
 1586 0010 FAD1     		bne	.L133
 1587              	.LVL114:
 1588              	.LBE134:
 1589              	.LBE135:
 597:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<Size; i++ )
 1590              		.loc 1 597 0 discriminator 1
 1591 0012 2AB1     		cbz	r2, .L132
 1592              	.LVL115:
 1593              	.L134:
 599:../LIB_AP/Core/Ap_StrCmd.c **** 		Dest[i] = Origin[i];
 1594              		.loc 1 599 0 discriminator 2
 1595 0014 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 1596 0016 C454     		strb	r4, [r0, r3]
 1597 0018 0133     		adds	r3, r3, #1
 597:../LIB_AP/Core/Ap_StrCmd.c **** 	for( i=0; i<Size; i++ )
 1598              		.loc 1 597 0 discriminator 2
 1599 001a 9CB2     		uxth	r4, r3
 1600 001c 9442     		cmp	r4, r2
 1601 001e F9D3     		bcc	.L134
 1602              	.LVL116:
 1603              	.L132:
 1604              		.loc 1 601 0
 1605 0020 0023     		movs	r3, #0
 1606 0022 8354     		strb	r3, [r0, r2]
 602:../LIB_AP/Core/Ap_StrCmd.c **** }
 1607              		.loc 1 602 0
 1608 0024 10BC     		pop	{r4}
 1609 0026 7047     		bx	lr
 1610              		.cfi_endproc
 1611              	.LFE19:
 1613              		.global	Ap_StrCmd_EchoEnable
 1614              		.comm	Ap_StrCmd_PrintPtr,4,4
 1615              		.comm	Ap_StrCmd_PutchPtr,4,4
 1616              		.comm	Ap_StrCmd_CmdStrExe,60,4
 1617              		.comm	Ap_StrCmd_CmdStr,60,4
 1618              		.comm	Ap_StrCmd_CmdCheck,1,1
 1619              		.comm	Ap_StrCmd_ChSize,2,2
 1620              		.comm	Ap_StrCmd_Size,2,2
 1621              		.comm	Ap_StrCmd_Dic_Ptr,880,4
 1622              		.comm	Ap_StrCmd_LoopCheck,1,1
 1623              		.comm	Ap_StrCmd_DlyCheck,1,1
 1624              		.section	.rodata.str1.4,"aMS",%progbits,1
 1625              		.align	2
 1626              	.LC0:
 1627 0000 48454C50 		.ascii	"HELP\000"
 1627      00
 1628 0005 000000   		.space	3
 1629              	.LC1:
 1630 0008 4D656E75 		.ascii	"Menu Help\000"
 1630      2048656C 
 1630      7000
 1631 0012 0000     		.space	2
 1632              	.LC2:
 1633 0014 4D454E55 		.ascii	"MENU\000"
 1633      00
 1634 0019 000000   		.space	3
 1635              	.LC3:
 1636 001c 44697370 		.ascii	"Display Menu\000"
 1636      6C617920 
 1636      4D656E75 
 1636      00
 1637 0029 000000   		.space	3
 1638              	.LC4:
 1639 002c 494E464F 		.ascii	"INFO\000"
 1639      00
 1640 0031 000000   		.space	3
 1641              	.LC5:
 1642 0034 496E666F 		.ascii	"Info\000"
 1642      00
 1643 0039 000000   		.space	3
 1644              	.LC6:
 1645 003c 4543484F 		.ascii	"ECHO\000"
 1645      00
 1646 0041 000000   		.space	3
 1647              	.LC7:
 1648 0044 4563686F 		.ascii	"Echo\000"
 1648      00
 1649 0049 000000   		.space	3
 1650              	.LC8:
 1651 004c 25633C25 		.ascii	"%c<%s> - %s\012\000"
 1651      733E202D 
 1651      2025730A 
 1651      00
 1652 0059 000000   		.space	3
 1653              	.LC9:
 1654 005c 25632573 		.ascii	"%c%s\012\000"
 1654      0A00
 1655 0062 0000     		.space	2
 1656              	.LC10:
 1657 0064 25732025 		.ascii	"%s %s\000"
 1657      7300
 1658 006a 0000     		.space	2
 1659              	.LC11:
 1660 006c 4F4E00   		.ascii	"ON\000"
 1661 006f 00       		.space	1
 1662              	.LC12:
 1663 0070 25634563 		.ascii	"%cEcho on\012\000"
 1663      686F206F 
 1663      6E0A00
 1664 007b 00       		.space	1
 1665              	.LC13:
 1666 007c 25634563 		.ascii	"%cEcho off\012\000"
 1666      686F206F 
 1666      66660A00 
 1667              	.LC14:
 1668 0088 25632D2D 		.ascii	"%c----------------------------------------- \015\012"
 1668      2D2D2D2D 
 1668      2D2D2D2D 
 1668      2D2D2D2D 
 1668      2D2D2D2D 
 1669 00b6 00       		.ascii	"\000"
 1670 00b7 00       		.space	1
 1671              	.LC15:
 1672 00b8 25632020 		.ascii	"%c             Ap_StrCmd v0.1               \015\012"
 1672      20202020 
 1672      20202020 
 1672      20202041 
 1672      705F5374 
 1673 00e6 00       		.ascii	"\000"
 1674 00e7 00       		.space	1
 1675              	.LC16:
 1676 00e8 25632020 		.ascii	"%c                                          \015\012"
 1676      20202020 
 1676      20202020 
 1676      20202020 
 1676      20202020 
 1677 0116 00       		.ascii	"\000"
 1678 0117 00       		.space	1
 1679              	.LC17:
 1680 0118 25632020 		.ascii	"%c        made by : Cho Han Cheol           \015\012"
 1680      20202020 
 1680      20206D61 
 1680      64652062 
 1680      79203A20 
 1681 0146 00       		.ascii	"\000"
 1682 0147 00       		.section	.bss.Ap_StrCmd_EchoEnable,"aw",%nobits
 1683              		.set	.LANCHOR0,. + 0
 1686              	Ap_StrCmd_EchoEnable:
 1687 0000 00       		.space	1
 1688              		.text
 1689              	.Letext0:
 1690              		.file 2 "../LIB_HW/Core/Hw_Define.h"
 1691              		.file 3 "../LIB_LB/Lb_Printf.h"
 1692              		.file 4 "../LIB_AP/Core/Ap_StrCmd.h"
 1693              		.file 5 "<built-in>"
 1694              		.file 6 "/opt/local/lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/ctype.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ap_StrCmd.c
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:19     .text.Ap_StrCmd_PutFunc:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:24     .text.Ap_StrCmd_PutFunc:0000000000000000 Ap_StrCmd_PutFunc
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:52     .text.Ap_StrCmd_CallBack_RxdISR:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:57     .text.Ap_StrCmd_CallBack_RxdISR:0000000000000000 Ap_StrCmd_CallBack_RxdISR
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:173    .text.Ap_StrCmd_CallBack_RxdISR:000000000000006c $d
                            *COM*:0000000000000002 Ap_StrCmd_ChSize
                            *COM*:000000000000003c Ap_StrCmd_CmdStr
                            *COM*:0000000000000004 Ap_StrCmd_PutchPtr
                            *COM*:0000000000000001 Ap_StrCmd_DlyCheck
                            *COM*:0000000000000001 Ap_StrCmd_CmdCheck
                            *COM*:0000000000000001 Ap_StrCmd_LoopCheck
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:185    .text.Ap_StrCmd_SetFunc_Putch:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:190    .text.Ap_StrCmd_SetFunc_Putch:0000000000000000 Ap_StrCmd_SetFunc_Putch
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:207    .text.Ap_StrCmd_Putch:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:212    .text.Ap_StrCmd_Putch:0000000000000000 Ap_StrCmd_Putch
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:236    .text.Ap_StrCmd_Putch:000000000000000c $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:241    .text.Ap_StrCmd_AddCmd:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:246    .text.Ap_StrCmd_AddCmd:0000000000000000 Ap_StrCmd_AddCmd
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:472    .text.Ap_StrCmd_AddCmd:00000000000000b4 $d
                            *COM*:0000000000000002 Ap_StrCmd_Size
                            *COM*:0000000000000370 Ap_StrCmd_Dic_Ptr
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:484    .text.Ap_StrCmd_Init:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:489    .text.Ap_StrCmd_Init:0000000000000000 Ap_StrCmd_Init
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:599    .text.Ap_StrCmd_Init:0000000000000064 $d
                            *COM*:0000000000000004 Ap_StrCmd_PrintPtr
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:772    .text.Ap_StrCmd_ShowMenuHelp:0000000000000000 Ap_StrCmd_ShowMenuHelp
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:889    .text.Ap_StrCmd_ShowMenu:0000000000000000 Ap_StrCmd_ShowMenu
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1147   .text.Ap_StrCmd_ShowInfo:0000000000000000 Ap_StrCmd_ShowInfo
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1052   .text.Ap_StrCmd_Echo:0000000000000000 Ap_StrCmd_Echo
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:627    .text.Ap_StrCmd_CmdClear:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:632    .text.Ap_StrCmd_CmdClear:0000000000000000 Ap_StrCmd_CmdClear
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:663    .text.Ap_StrCmd_GetSize:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:668    .text.Ap_StrCmd_GetSize:0000000000000000 Ap_StrCmd_GetSize
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:686    .text.Ap_StrCmd_Print:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:691    .text.Ap_StrCmd_Print:0000000000000000 Ap_StrCmd_Print
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:760    .text.Ap_StrCmd_Print:0000000000000030 $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:767    .text.Ap_StrCmd_ShowMenuHelp:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:872    .text.Ap_StrCmd_ShowMenuHelp:0000000000000054 $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:884    .text.Ap_StrCmd_ShowMenu:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:985    .text.Ap_StrCmd_ShowMenu:000000000000004c $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:997    .text.Ap_StrCmd_Printf:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1002   .text.Ap_StrCmd_Printf:0000000000000000 Ap_StrCmd_Printf
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1047   .text.Ap_StrCmd_Echo:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1127   .text.Ap_StrCmd_Echo:000000000000004c $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1142   .text.Ap_StrCmd_ShowInfo:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1667   .rodata.str1.4:0000000000000088 .LC14
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1671   .rodata.str1.4:00000000000000b8 .LC15
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1675   .rodata.str1.4:00000000000000e8 .LC16
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1679   .rodata.str1.4:0000000000000118 .LC17
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1222   .text.Ap_StrCmd_ExeFunc:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1227   .text.Ap_StrCmd_ExeFunc:0000000000000000 Ap_StrCmd_ExeFunc
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1397   .text.Ap_StrCmd_ExeFunc:00000000000000cc $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1405   .text.Ap_StrCmd_ExeCmd:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1410   .text.Ap_StrCmd_ExeCmd:0000000000000000 Ap_StrCmd_ExeCmd
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1441   .text.Ap_StrCmd_ExeCmd:0000000000000014 $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1447   .text.Ap_StrCmd_Delay:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1452   .text.Ap_StrCmd_Delay:0000000000000000 Ap_StrCmd_Delay
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1473   .text.Ap_StrCmd_Loop:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1478   .text.Ap_StrCmd_Loop:0000000000000000 Ap_StrCmd_Loop
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1505   .text.Ap_StrCmd_Loop:0000000000000014 $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1510   .text.Ap_StrCmd_StrLen:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1515   .text.Ap_StrCmd_StrLen:0000000000000000 Ap_StrCmd_StrLen
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1548   .text.Ap_StrCmd_StrCopy:0000000000000000 $t
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1553   .text.Ap_StrCmd_StrCopy:0000000000000000 Ap_StrCmd_StrCopy
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1686   .bss.Ap_StrCmd_EchoEnable:0000000000000000 Ap_StrCmd_EchoEnable
                            *COM*:000000000000003c Ap_StrCmd_CmdStrExe
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1625   .rodata.str1.4:0000000000000000 $d
/var/folders/7z/kps_xzfj7sn5l5gkyq8s9db00000gn/T//ccs1vL0i.s:1687   .bss.Ap_StrCmd_EchoEnable:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
Hw_Uart_Putch
Ap_StrCmd_Q_Push
Ap_StrCmd_Q_Init
Hw_Uart_SetReceiveFuncISR
Lb_sprintf
Lb_vsprintf
sscanf
strncmp
strlen
Ap_StrCmd_Q_Pop
__ctype_ptr__
Ap_StrCmd_Q_SIZE
