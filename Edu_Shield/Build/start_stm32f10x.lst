   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Ap_EduMenu.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.KeyPad_DownKeyEvent,"ax",%progbits
  19              		.align	2
  20              		.global	KeyPad_DownKeyEvent
  21              		.thumb
  22              		.thumb_func
  24              	KeyPad_DownKeyEvent:
  25              	.LFB1:
  26              		.file 1 "../LIB_AP/Ap_EduMenu.c"
   1:../LIB_AP/Ap_EduMenu.c **** //----------------------------------------------------------------------------
   2:../LIB_AP/Ap_EduMenu.c **** //    프로그램명 	: Edu Menu 관련 함수
   3:../LIB_AP/Ap_EduMenu.c **** //
   4:../LIB_AP/Ap_EduMenu.c **** //    만든이     	: Cho Han Cheol
   5:../LIB_AP/Ap_EduMenu.c **** //
   6:../LIB_AP/Ap_EduMenu.c **** //    날  짜     	: 
   7:../LIB_AP/Ap_EduMenu.c **** //    
   8:../LIB_AP/Ap_EduMenu.c **** //    최종 수정  	: 
   9:../LIB_AP/Ap_EduMenu.c **** //
  10:../LIB_AP/Ap_EduMenu.c **** //    MPU_Type		:
  11:../LIB_AP/Ap_EduMenu.c **** //
  12:../LIB_AP/Ap_EduMenu.c **** //    파일명     	: Ap_EduMenu.h
  13:../LIB_AP/Ap_EduMenu.c **** //----------------------------------------------------------------------------
  14:../LIB_AP/Ap_EduMenu.c **** 
  15:../LIB_AP/Ap_EduMenu.c **** 
  16:../LIB_AP/Ap_EduMenu.c **** 
  17:../LIB_AP/Ap_EduMenu.c **** //----- 헤더파일 열기
  18:../LIB_AP/Ap_EduMenu.c **** //
  19:../LIB_AP/Ap_EduMenu.c **** #define  AP_EDUMENU_LOCAL
  20:../LIB_AP/Ap_EduMenu.c **** 
  21:../LIB_AP/Ap_EduMenu.c **** #include "Ap_EduMenu.h"
  22:../LIB_AP/Ap_EduMenu.c **** 
  23:../LIB_AP/Ap_EduMenu.c **** 
  24:../LIB_AP/Ap_EduMenu.c **** 
  25:../LIB_AP/Ap_EduMenu.c **** //-- 내부 선언
  26:../LIB_AP/Ap_EduMenu.c **** //
  27:../LIB_AP/Ap_EduMenu.c **** 
  28:../LIB_AP/Ap_EduMenu.c **** 
  29:../LIB_AP/Ap_EduMenu.c **** 
  30:../LIB_AP/Ap_EduMenu.c **** //-- 내부 변수
  31:../LIB_AP/Ap_EduMenu.c **** //
  32:../LIB_AP/Ap_EduMenu.c **** u16 Seg_Count = 0;
  33:../LIB_AP/Ap_EduMenu.c **** 
  34:../LIB_AP/Ap_EduMenu.c **** 
  35:../LIB_AP/Ap_EduMenu.c **** //-- 내부 함수
  36:../LIB_AP/Ap_EduMenu.c **** //
  37:../LIB_AP/Ap_EduMenu.c **** void Ap_EduMenu_ShowMenu(void);
  38:../LIB_AP/Ap_EduMenu.c **** 
  39:../LIB_AP/Ap_EduMenu.c **** 
  40:../LIB_AP/Ap_EduMenu.c **** 
  41:../LIB_AP/Ap_EduMenu.c **** void KeyPad_UpKeyEvent( u32 Event )
  42:../LIB_AP/Ap_EduMenu.c **** {
  43:../LIB_AP/Ap_EduMenu.c **** 	if( Event == HW_KEYPAD_EVENT_RELEASED || Event == HW_KEYPAD_EVENT_REPEAT )
  44:../LIB_AP/Ap_EduMenu.c **** 	{
  45:../LIB_AP/Ap_EduMenu.c **** 		Hw_7Seg_Print( 0, "%d", Seg_Count++ );
  46:../LIB_AP/Ap_EduMenu.c **** 	}
  47:../LIB_AP/Ap_EduMenu.c **** }
  48:../LIB_AP/Ap_EduMenu.c **** 
  49:../LIB_AP/Ap_EduMenu.c **** void KeyPad_DownKeyEvent( u32 Event )
  50:../LIB_AP/Ap_EduMenu.c **** {
  27              		.loc 1 50 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  51:../LIB_AP/Ap_EduMenu.c **** 	if( Event == HW_KEYPAD_EVENT_RELEASED || Event == HW_KEYPAD_EVENT_REPEAT )
  32              		.loc 1 51 0
  33 0000 0138     		subs	r0, r0, #1
  34              	.LVL1:
  35 0002 0128     		cmp	r0, #1
  50:../LIB_AP/Ap_EduMenu.c **** {
  36              		.loc 1 50 0
  37 0004 10B5     		push	{r4, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
  41              		.cfi_offset 14, -4
  42              		.loc 1 51 0
  43 0006 00D9     		bls	.L4
  44 0008 10BD     		pop	{r4, pc}
  45              	.L4:
  46              	.LBB4:
  47              	.LBB5:
  52:../LIB_AP/Ap_EduMenu.c **** 	{
  53:../LIB_AP/Ap_EduMenu.c **** 		Seg_Count -= 2;
  48              		.loc 1 53 0
  49 000a 054B     		ldr	r3, .L5
  54:../LIB_AP/Ap_EduMenu.c **** 		
  55:../LIB_AP/Ap_EduMenu.c **** 		
  56:../LIB_AP/Ap_EduMenu.c **** 		Hw_7Seg_Print( 0, "%d", Seg_Count++ );
  50              		.loc 1 56 0
  51 000c 0020     		movs	r0, #0
  52              	.LVL2:
  53:../LIB_AP/Ap_EduMenu.c **** 		Seg_Count -= 2;
  53              		.loc 1 53 0
  54 000e 1C88     		ldrh	r4, [r3, #0]
  55              		.loc 1 56 0
  56 0010 0449     		ldr	r1, .L5+4
  53:../LIB_AP/Ap_EduMenu.c **** 		Seg_Count -= 2;
  57              		.loc 1 53 0
  58 0012 A21E     		subs	r2, r4, #2
  59              		.loc 1 56 0
  60 0014 013C     		subs	r4, r4, #1
  61 0016 1C80     		strh	r4, [r3, #0]	@ movhi
  62 0018 92B2     		uxth	r2, r2
  63 001a 034B     		ldr	r3, .L5+8
  64 001c 9847     		blx	r3
  65              	.LVL3:
  66 001e 10BD     		pop	{r4, pc}
  67              	.L6:
  68              		.align	2
  69              	.L5:
  70 0020 00000000 		.word	.LANCHOR0
  71 0024 00000000 		.word	.LC0
  72 0028 00000000 		.word	Hw_7Seg_Print
  73              	.LBE5:
  74              	.LBE4:
  75              		.cfi_endproc
  76              	.LFE1:
  78              		.section	.text.KeyPad_UpKeyEvent,"ax",%progbits
  79              		.align	2
  80              		.global	KeyPad_UpKeyEvent
  81              		.thumb
  82              		.thumb_func
  84              	KeyPad_UpKeyEvent:
  85              	.LFB0:
  42:../LIB_AP/Ap_EduMenu.c **** {
  86              		.loc 1 42 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              	.LVL4:
  43:../LIB_AP/Ap_EduMenu.c **** 	if( Event == HW_KEYPAD_EVENT_RELEASED || Event == HW_KEYPAD_EVENT_REPEAT )
  91              		.loc 1 43 0
  92 0000 0138     		subs	r0, r0, #1
  93              	.LVL5:
  94 0002 0128     		cmp	r0, #1
  42:../LIB_AP/Ap_EduMenu.c **** {
  95              		.loc 1 42 0
  96 0004 10B5     		push	{r4, lr}
  97              	.LCFI1:
  98              		.cfi_def_cfa_offset 8
  99              		.cfi_offset 4, -8
 100              		.cfi_offset 14, -4
  43:../LIB_AP/Ap_EduMenu.c **** 	if( Event == HW_KEYPAD_EVENT_RELEASED || Event == HW_KEYPAD_EVENT_REPEAT )
 101              		.loc 1 43 0
 102 0006 00D9     		bls	.L9
 103 0008 10BD     		pop	{r4, pc}
 104              	.L9:
 105              	.LBB8:
 106              	.LBB9:
  45:../LIB_AP/Ap_EduMenu.c **** 		Hw_7Seg_Print( 0, "%d", Seg_Count++ );
 107              		.loc 1 45 0
 108 000a 044B     		ldr	r3, .L10
 109 000c 0020     		movs	r0, #0
 110              	.LVL6:
 111 000e 1A88     		ldrh	r2, [r3, #0]
 112 0010 0349     		ldr	r1, .L10+4
 113 0012 541C     		adds	r4, r2, #1
 114 0014 1C80     		strh	r4, [r3, #0]	@ movhi
 115 0016 034B     		ldr	r3, .L10+8
 116 0018 9847     		blx	r3
 117              	.LVL7:
 118 001a 10BD     		pop	{r4, pc}
 119              	.L11:
 120              		.align	2
 121              	.L10:
 122 001c 00000000 		.word	.LANCHOR0
 123 0020 00000000 		.word	.LC0
 124 0024 00000000 		.word	Hw_7Seg_Print
 125              	.LBE9:
 126              	.LBE8:
 127              		.cfi_endproc
 128              	.LFE0:
 130              		.section	.text.Ap_EduMenu_ShowMenu,"ax",%progbits
 131              		.align	2
 132              		.global	Ap_EduMenu_ShowMenu
 133              		.thumb
 134              		.thumb_func
 136              	Ap_EduMenu_ShowMenu:
 137              	.LFB2:
  57:../LIB_AP/Ap_EduMenu.c **** 	}	
  58:../LIB_AP/Ap_EduMenu.c **** }
  59:../LIB_AP/Ap_EduMenu.c **** 
  60:../LIB_AP/Ap_EduMenu.c **** 
  61:../LIB_AP/Ap_EduMenu.c **** 
  62:../LIB_AP/Ap_EduMenu.c **** /*---------------------------------------------------------------------------
  63:../LIB_AP/Ap_EduMenu.c ****      TITLE   : Ap_EduMenu_ShowMenu
  64:../LIB_AP/Ap_EduMenu.c ****      WORK    : 
  65:../LIB_AP/Ap_EduMenu.c ****      ARG     : void
  66:../LIB_AP/Ap_EduMenu.c ****      RET     : void
  67:../LIB_AP/Ap_EduMenu.c **** ---------------------------------------------------------------------------*/
  68:../LIB_AP/Ap_EduMenu.c **** void Ap_EduMenu_ShowMenu(void)
  69:../LIB_AP/Ap_EduMenu.c **** {
 138              		.loc 1 69 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142 0000 38B5     		push	{r3, r4, r5, lr}
 143              	.LCFI2:
 144              		.cfi_def_cfa_offset 16
 145              		.cfi_offset 3, -16
 146              		.cfi_offset 4, -12
 147              		.cfi_offset 5, -8
 148              		.cfi_offset 14, -4
  70:../LIB_AP/Ap_EduMenu.c **** 	u8 key;
  71:../LIB_AP/Ap_EduMenu.c **** 
  72:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("\n\n");
 149              		.loc 1 72 0
 150 0002 40F20000 		movw	r0, #:lower16:.LC1
 151 0006 40F20004 		movw	r4, #:lower16:Lb_printf
  73:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("*******************************************************\n");
 152              		.loc 1 73 0
 153 000a 40F20005 		movw	r5, #:lower16:.LC2
  72:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("\n\n");
 154              		.loc 1 72 0
 155 000e C0F20004 		movt	r4, #:upper16:Lb_printf
 156              		.loc 1 73 0
 157 0012 C0F20005 		movt	r5, #:upper16:.LC2
  72:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("\n\n");
 158              		.loc 1 72 0
 159 0016 C0F20000 		movt	r0, #:upper16:.LC1
 160 001a A047     		blx	r4
 161              	.LVL8:
 162              		.loc 1 73 0
 163 001c 2846     		mov	r0, r5
 164 001e A047     		blx	r4
 165              	.LVL9:
  74:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("                      Edu V0.5                         \n");
 166              		.loc 1 74 0
 167 0020 40F20000 		movw	r0, #:lower16:.LC3
 168 0024 C0F20000 		movt	r0, #:upper16:.LC3
 169 0028 A047     		blx	r4
 170              	.LVL10:
  75:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("*******************************************************\n");
 171              		.loc 1 75 0
 172 002a 2846     		mov	r0, r5
 173 002c A047     		blx	r4
 174              	.LVL11:
  76:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 1. Test.. LED                                       *\n");
 175              		.loc 1 76 0
 176 002e 40F20000 		movw	r0, #:lower16:.LC4
 177 0032 C0F20000 		movt	r0, #:upper16:.LC4
 178 0036 A047     		blx	r4
 179              	.LVL12:
  77:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 2. Test.. KeyPad                                    *\n");
 180              		.loc 1 77 0
 181 0038 40F20000 		movw	r0, #:lower16:.LC5
 182 003c C0F20000 		movt	r0, #:upper16:.LC5
 183 0040 A047     		blx	r4
 184              	.LVL13:
  78:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 3. Test.. 7Seg                                      *\n");
 185              		.loc 1 78 0
 186 0042 40F20000 		movw	r0, #:lower16:.LC6
 187 0046 C0F20000 		movt	r0, #:upper16:.LC6
 188 004a A047     		blx	r4
 189              	.LVL14:
  79:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 4. Test.. CLcd                                      *\n");
 190              		.loc 1 79 0
 191 004c 40F20000 		movw	r0, #:lower16:.LC7
 192 0050 C0F20000 		movt	r0, #:upper16:.LC7
 193 0054 A047     		blx	r4
 194              	.LVL15:
  80:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 5. Test.. BT                                        *\n");
 195              		.loc 1 80 0
 196 0056 40F20000 		movw	r0, #:lower16:.LC8
 197 005a C0F20000 		movt	r0, #:upper16:.LC8
 198 005e A047     		blx	r4
 199              	.LVL16:
  81:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 6. Test.. Temperature                               *\n");
 200              		.loc 1 81 0
 201 0060 40F20000 		movw	r0, #:lower16:.LC9
 202 0064 C0F20000 		movt	r0, #:upper16:.LC9
 203 0068 A047     		blx	r4
 204              	.LVL17:
  82:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 7.                                                  *\n");
 205              		.loc 1 82 0
 206 006a 40F20000 		movw	r0, #:lower16:.LC10
 207 006e C0F20000 		movt	r0, #:upper16:.LC10
 208 0072 A047     		blx	r4
 209              	.LVL18:
  83:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 8.                                                  *\n");
 210              		.loc 1 83 0
 211 0074 40F20000 		movw	r0, #:lower16:.LC11
 212 0078 C0F20000 		movt	r0, #:upper16:.LC11
 213 007c A047     		blx	r4
 214              	.LVL19:
  84:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* 9.                                                  *\n");
 215              		.loc 1 84 0
 216 007e 40F20000 		movw	r0, #:lower16:.LC12
 217 0082 C0F20000 		movt	r0, #:upper16:.LC12
 218 0086 A047     		blx	r4
 219              	.LVL20:
  85:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("* m.  Menu                                            *\n");
 220              		.loc 1 85 0
 221 0088 40F20000 		movw	r0, #:lower16:.LC13
 222 008c C0F20000 		movt	r0, #:upper16:.LC13
 223 0090 A047     		blx	r4
 224              	.LVL21:
  86:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("*******************************************************\n");
 225              		.loc 1 86 0
 226 0092 2846     		mov	r0, r5
 227 0094 A047     		blx	r4
 228              	.LVL22:
  87:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("\n");
 229              		.loc 1 87 0
 230 0096 40F20000 		movw	r0, #:lower16:.LC14
 231 009a C0F20000 		movt	r0, #:upper16:.LC14
 232 009e A047     		blx	r4
 233              	.LVL23:
 234 00a0 38BD     		pop	{r3, r4, r5, pc}
 235              		.cfi_endproc
 236              	.LFE2:
 238 00a2 00BF     		.section	.text.Ap_EduMenu_GetCmd,"ax",%progbits
 239              		.align	2
 240              		.global	Ap_EduMenu_GetCmd
 241              		.thumb
 242              		.thumb_func
 244              	Ap_EduMenu_GetCmd:
 245              	.LFB3:
  88:../LIB_AP/Ap_EduMenu.c **** }
  89:../LIB_AP/Ap_EduMenu.c **** 
  90:../LIB_AP/Ap_EduMenu.c **** 
  91:../LIB_AP/Ap_EduMenu.c **** 
  92:../LIB_AP/Ap_EduMenu.c **** 
  93:../LIB_AP/Ap_EduMenu.c **** 
  94:../LIB_AP/Ap_EduMenu.c **** /*---------------------------------------------------------------------------
  95:../LIB_AP/Ap_EduMenu.c ****      TITLE   : Ap_EduMenu_GetCmd
  96:../LIB_AP/Ap_EduMenu.c ****      WORK    : 
  97:../LIB_AP/Ap_EduMenu.c ****      ARG     : void
  98:../LIB_AP/Ap_EduMenu.c ****      RET     : 
  99:../LIB_AP/Ap_EduMenu.c **** 				u8 : 눌려진 메뉴키 데이터 
 100:../LIB_AP/Ap_EduMenu.c **** ---------------------------------------------------------------------------*/
 101:../LIB_AP/Ap_EduMenu.c **** u8 Ap_EduMenu_GetCmd(void)
 102:../LIB_AP/Ap_EduMenu.c **** {
 246              		.loc 1 102 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250 0000 38B5     		push	{r3, r4, r5, lr}
 251              	.LCFI3:
 252              		.cfi_def_cfa_offset 16
 253              		.cfi_offset 3, -16
 254              		.cfi_offset 4, -12
 255              		.cfi_offset 5, -8
 256              		.cfi_offset 14, -4
 103:../LIB_AP/Ap_EduMenu.c **** 	u8  key;
 104:../LIB_AP/Ap_EduMenu.c **** 	
 105:../LIB_AP/Ap_EduMenu.c **** 
 106:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf(">> ");
 257              		.loc 1 106 0
 258 0002 40F20000 		movw	r0, #:lower16:.LC15
 259 0006 40F20004 		movw	r4, #:lower16:Lb_printf
 260 000a C0F20004 		movt	r4, #:upper16:Lb_printf
 261 000e C0F20000 		movt	r0, #:upper16:.LC15
 262 0012 A047     		blx	r4
 263              	.LVL24:
 107:../LIB_AP/Ap_EduMenu.c **** 
 108:../LIB_AP/Ap_EduMenu.c ****     key=get_byte();
 264              		.loc 1 108 0
 265 0014 40F20003 		movw	r3, #:lower16:get_byte
 266 0018 C0F20003 		movt	r3, #:upper16:get_byte
 267 001c 9847     		blx	r3
 268              	.LVL25:
 269 001e 0546     		mov	r5, r0
 270              	.LVL26:
 109:../LIB_AP/Ap_EduMenu.c **** 	
 110:../LIB_AP/Ap_EduMenu.c **** 	Lb_printf("\n");
 271              		.loc 1 110 0
 272 0020 40F20000 		movw	r0, #:lower16:.LC14
 273              	.LVL27:
 274 0024 C0F20000 		movt	r0, #:upper16:.LC14
 275 0028 A047     		blx	r4
 276              	.LVL28:
 111:../LIB_AP/Ap_EduMenu.c **** 	
 112:../LIB_AP/Ap_EduMenu.c ****     return key;
 113:../LIB_AP/Ap_EduMenu.c **** }
 277              		.loc 1 113 0
 278 002a 2846     		mov	r0, r5
 279 002c 38BD     		pop	{r3, r4, r5, pc}
 280              		.cfi_endproc
 281              	.LFE3:
 283 002e 00BF     		.section	.text.Ap_EduMenu_ExeCmd,"ax",%progbits
 284              		.align	2
 285              		.global	Ap_EduMenu_ExeCmd
 286              		.thumb
 287              		.thumb_func
 289              	Ap_EduMenu_ExeCmd:
 290              	.LFB4:
 114:../LIB_AP/Ap_EduMenu.c **** 
 115:../LIB_AP/Ap_EduMenu.c **** 
 116:../LIB_AP/Ap_EduMenu.c **** 
 117:../LIB_AP/Ap_EduMenu.c **** 
 118:../LIB_AP/Ap_EduMenu.c **** /*---------------------------------------------------------------------------
 119:../LIB_AP/Ap_EduMenu.c ****      TITLE   : Ap_EduMenu_ExeCmd
 120:../LIB_AP/Ap_EduMenu.c ****      WORK    : 
 121:../LIB_AP/Ap_EduMenu.c ****      ARG     : void
 122:../LIB_AP/Ap_EduMenu.c ****      RET     : 
 123:../LIB_AP/Ap_EduMenu.c **** 				u8 : 눌려진 메뉴키 데이터 
 124:../LIB_AP/Ap_EduMenu.c **** ---------------------------------------------------------------------------*/
 125:../LIB_AP/Ap_EduMenu.c **** u8 Ap_EduMenu_ExeCmd(void)
 126:../LIB_AP/Ap_EduMenu.c **** {
 291              		.loc 1 126 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 16
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              	.LVL29:
 296 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 297              	.LCFI4:
 298              		.cfi_def_cfa_offset 36
 299              		.cfi_offset 4, -36
 300              		.cfi_offset 5, -32
 301              		.cfi_offset 6, -28
 302              		.cfi_offset 7, -24
 303              		.cfi_offset 8, -20
 304              		.cfi_offset 9, -16
 305              		.cfi_offset 10, -12
 306              		.cfi_offset 11, -8
 307              		.cfi_offset 14, -4
 127:../LIB_AP/Ap_EduMenu.c **** 	u8  key;
 128:../LIB_AP/Ap_EduMenu.c **** 	u8  UartData;
 129:../LIB_AP/Ap_EduMenu.c **** 	u8  i;
 130:../LIB_AP/Ap_EduMenu.c **** 	u32 KeyPressedCnt;
 131:../LIB_AP/Ap_EduMenu.c **** 	u32 KeyEvent;
 132:../LIB_AP/Ap_EduMenu.c **** 	u32 KeyNum;
 133:../LIB_AP/Ap_EduMenu.c **** 	u16 SegCnt = 0;
 134:../LIB_AP/Ap_EduMenu.c **** 	s16 Temp = 0;
 135:../LIB_AP/Ap_EduMenu.c **** 	
 136:../LIB_AP/Ap_EduMenu.c **** 	static u8 ExeFirst = TRUE;
 137:../LIB_AP/Ap_EduMenu.c **** 	u16 Ret = ERR_NONE;
 138:../LIB_AP/Ap_EduMenu.c **** 			
 139:../LIB_AP/Ap_EduMenu.c **** 	
 140:../LIB_AP/Ap_EduMenu.c **** 	if( ExeFirst == TRUE )
 141:../LIB_AP/Ap_EduMenu.c **** 	{
 142:../LIB_AP/Ap_EduMenu.c **** 		Ap_EduMenu_ShowMenu();		
 308              		.loc 1 142 0
 309 0004 40F20003 		movw	r3, #:lower16:Ap_EduMenu_ShowMenu
 126:../LIB_AP/Ap_EduMenu.c **** {
 310              		.loc 1 126 0
 311 0008 85B0     		sub	sp, sp, #20
 312              	.LCFI5:
 313              		.cfi_def_cfa_offset 56
 314              		.loc 1 142 0
 315 000a C0F20003 		movt	r3, #:upper16:Ap_EduMenu_ShowMenu
 316 000e 9847     		blx	r3
 317              	.LVL30:
 143:../LIB_AP/Ap_EduMenu.c **** 		
 144:../LIB_AP/Ap_EduMenu.c **** 		Hw_KeyPad_SetEventFunc( 2, KeyPad_UpKeyEvent );
 318              		.loc 1 144 0
 319 0010 A34C     		ldr	r4, .L50
 320 0012 0220     		movs	r0, #2
 321 0014 A349     		ldr	r1, .L50+4
 322 0016 A047     		blx	r4
 323              	.LVL31:
 145:../LIB_AP/Ap_EduMenu.c **** 		Hw_KeyPad_SetEventFunc( 0, KeyPad_DownKeyEvent );	
 146:../LIB_AP/Ap_EduMenu.c **** 	}
 147:../LIB_AP/Ap_EduMenu.c **** 
 148:../LIB_AP/Ap_EduMenu.c ****     while( (key = Ap_EduMenu_GetCmd()) != 0 )
 149:../LIB_AP/Ap_EduMenu.c ****     {
 150:../LIB_AP/Ap_EduMenu.c ****         switch(key)
 151:../LIB_AP/Ap_EduMenu.c ****         {
 152:../LIB_AP/Ap_EduMenu.c ****            case '1':
 153:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 0 );
 154:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 155:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 1 );
 156:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 157:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 2 );;
 158:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 159:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 3 );
 160:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 161:../LIB_AP/Ap_EduMenu.c ****                	break;
 162:../LIB_AP/Ap_EduMenu.c **** 
 163:../LIB_AP/Ap_EduMenu.c ****            case '2':
 164:../LIB_AP/Ap_EduMenu.c ****            		Lb_printf("KeyPad Start : press two keys to exit\n");
 165:../LIB_AP/Ap_EduMenu.c ****            		while(1)
 166:../LIB_AP/Ap_EduMenu.c ****            		{
 167:../LIB_AP/Ap_EduMenu.c ****            			KeyEvent = Hw_KeyPad_WaitForEvent(1000);
 168:../LIB_AP/Ap_EduMenu.c ****            			 
 169:../LIB_AP/Ap_EduMenu.c ****            			if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_PRESSED) )
 170:../LIB_AP/Ap_EduMenu.c ****            			{ 
 171:../LIB_AP/Ap_EduMenu.c ****            				Lb_printf("%x KeyPressed\n", Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_PRESSED) );  
 172:../LIB_AP/Ap_EduMenu.c **** 					}										
 173:../LIB_AP/Ap_EduMenu.c **** 					else
 174:../LIB_AP/Ap_EduMenu.c **** 					if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_RELEASED) )
 175:../LIB_AP/Ap_EduMenu.c **** 					{
 176:../LIB_AP/Ap_EduMenu.c **** 						Lb_printf("%x KeyReleased\n", Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_RELEASED) );         
 177:../LIB_AP/Ap_EduMenu.c **** 					}
 178:../LIB_AP/Ap_EduMenu.c **** 					else
 179:../LIB_AP/Ap_EduMenu.c **** 					if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_REPEAT) )
 180:../LIB_AP/Ap_EduMenu.c **** 					{
 181:../LIB_AP/Ap_EduMenu.c **** 						KeyNum = Hw_KeyPad_GetEventKeyNum(HW_KEYPAD_EVENT_REPEAT);
 182:../LIB_AP/Ap_EduMenu.c **** 						
 183:../LIB_AP/Ap_EduMenu.c **** 						Lb_printf("%x KeyRepeat Cnt : %d\n",Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_REPEAT), Hw_Key
 184:../LIB_AP/Ap_EduMenu.c **** 					}
 185:../LIB_AP/Ap_EduMenu.c **** 					
 186:../LIB_AP/Ap_EduMenu.c **** 					KeyPressedCnt = Hw_KeyPad_GetPressedCnt();
 187:../LIB_AP/Ap_EduMenu.c **** 						
 188:../LIB_AP/Ap_EduMenu.c **** 					if( KeyPressedCnt >= 2 )
 189:../LIB_AP/Ap_EduMenu.c **** 					{
 190:../LIB_AP/Ap_EduMenu.c **** 						Lb_printf("Key Exit\n");
 191:../LIB_AP/Ap_EduMenu.c **** 						break;
 192:../LIB_AP/Ap_EduMenu.c **** 					}	
 193:../LIB_AP/Ap_EduMenu.c **** 				}
 194:../LIB_AP/Ap_EduMenu.c **** 				break;
 195:../LIB_AP/Ap_EduMenu.c **** 
 196:../LIB_AP/Ap_EduMenu.c ****            case '3':	
 197:../LIB_AP/Ap_EduMenu.c ****            		Hw_7Seg_Print( 0, "%d", Seg_Count++ );
 198:../LIB_AP/Ap_EduMenu.c ****                break; 
 199:../LIB_AP/Ap_EduMenu.c **** 
 200:../LIB_AP/Ap_EduMenu.c ****            case '4':
 201:../LIB_AP/Ap_EduMenu.c ****            		Hw_CLcd_Print( 0, 1, "Cnt : %d", Seg_Count++);
 202:../LIB_AP/Ap_EduMenu.c **** 				break;  
 203:../LIB_AP/Ap_EduMenu.c **** 
 204:../LIB_AP/Ap_EduMenu.c ****            case '5':
 205:../LIB_AP/Ap_EduMenu.c ****            		Lb_printf("BT Test Start, press x to exit\n");
 206:../LIB_AP/Ap_EduMenu.c **** 
 207:../LIB_AP/Ap_EduMenu.c ****            		while(1)
 208:../LIB_AP/Ap_EduMenu.c ****            		{
 209:../LIB_AP/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_BT, &UartData) == TRUE )
 210:../LIB_AP/Ap_EduMenu.c ****            			{
 211:../LIB_AP/Ap_EduMenu.c ****            				Lb_printf( "BT Rxd : %c \n", UartData );
 212:../LIB_AP/Ap_EduMenu.c ****            			}
 213:../LIB_AP/Ap_EduMenu.c **** 
 214:../LIB_AP/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_MENU, &UartData ) == TRUE )
 215:../LIB_AP/Ap_EduMenu.c ****            			{
 216:../LIB_AP/Ap_EduMenu.c ****            				if( UartData == 'x' )
 217:../LIB_AP/Ap_EduMenu.c ****            				{
 218:../LIB_AP/Ap_EduMenu.c ****            					break;
 219:../LIB_AP/Ap_EduMenu.c ****            				}
 220:../LIB_AP/Ap_EduMenu.c ****            				else
 221:../LIB_AP/Ap_EduMenu.c ****            				{
 222:../LIB_AP/Ap_EduMenu.c ****            					Hw_Uart_Print( HW_USE_UART_CH_BT, "Menu:Send : %c\r\n",UartData );
 223:../LIB_AP/Ap_EduMenu.c ****            				}
 224:../LIB_AP/Ap_EduMenu.c ****            			}
 225:../LIB_AP/Ap_EduMenu.c **** 
 226:../LIB_AP/Ap_EduMenu.c **** 				}
 227:../LIB_AP/Ap_EduMenu.c **** 				
 228:../LIB_AP/Ap_EduMenu.c **** 				Lb_printf("BT Test Exit\n");
 229:../LIB_AP/Ap_EduMenu.c **** 				break; 
 230:../LIB_AP/Ap_EduMenu.c **** 
 231:../LIB_AP/Ap_EduMenu.c ****            case '6':
 232:../LIB_AP/Ap_EduMenu.c ****            		Lb_printf("ADC 15 : %d\n", Hw_Adc_GetData(16));
 233:../LIB_AP/Ap_EduMenu.c ****            		Lb_printf("ADC 16 : %d\n", Hw_Adc_GetData(17)*330/4095);
 324              		.loc 1 233 0
 325 0018 8123     		movs	r3, #129
 145:../LIB_AP/Ap_EduMenu.c **** 		Hw_KeyPad_SetEventFunc( 0, KeyPad_DownKeyEvent );	
 326              		.loc 1 145 0
 327 001a 0020     		movs	r0, #0
 328 001c A249     		ldr	r1, .L50+8
 329              		.loc 1 233 0
 330 001e 0193     		str	r3, [sp, #4]
 145:../LIB_AP/Ap_EduMenu.c **** 		Hw_KeyPad_SetEventFunc( 0, KeyPad_DownKeyEvent );	
 331              		.loc 1 145 0
 332 0020 A047     		blx	r4
 333              	.LVL32:
 334              		.loc 1 233 0
 335 0022 019B     		ldr	r3, [sp, #4]
 336 0024 A14F     		ldr	r7, .L50+12
 337 0026 C8F20803 		movt	r3, 32776
 232:../LIB_AP/Ap_EduMenu.c ****            		Lb_printf("ADC 15 : %d\n", Hw_Adc_GetData(16));
 338              		.loc 1 232 0
 339 002a A14C     		ldr	r4, .L50+16
 340              		.loc 1 233 0
 341 002c 0193     		str	r3, [sp, #4]
 342              	.LVL33:
 343              	.L43:
 148:../LIB_AP/Ap_EduMenu.c ****     while( (key = Ap_EduMenu_GetCmd()) != 0 )
 344              		.loc 1 148 0 discriminator 1
 345 002e B847     		blx	r7
 346              	.LVL34:
 347 0030 0346     		mov	r3, r0
 348 0032 0028     		cmp	r0, #0
 349 0034 00F0A380 		beq	.L45
 350              	.L34:
 150:../LIB_AP/Ap_EduMenu.c ****         switch(key)
 351              		.loc 1 150 0
 352 0038 A3F13100 		sub	r0, r3, #49
 353              	.LVL35:
 354 003c 3C28     		cmp	r0, #60
 355 003e F6D8     		bhi	.L43
 356 0040 01A3     		adr	r3, .L24
 357 0042 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 358 0046 00BF     		.align	2
 359              	.L24:
 360 0048 2F020000 		.word	.L17+1
 361 004c EF010000 		.word	.L18+1
 362 0050 DD010000 		.word	.L19+1
 363 0054 C9010000 		.word	.L20+1
 364 0058 85010000 		.word	.L21+1
 365 005c 3D010000 		.word	.L22+1
 366 0060 2F000000 		.word	.L43+1
 367 0064 2F000000 		.word	.L43+1
 368 0068 2F000000 		.word	.L43+1
 369 006c 2F000000 		.word	.L43+1
 370 0070 2F000000 		.word	.L43+1
 371 0074 2F000000 		.word	.L43+1
 372 0078 2F000000 		.word	.L43+1
 373 007c 2F000000 		.word	.L43+1
 374 0080 2F000000 		.word	.L43+1
 375 0084 2F000000 		.word	.L43+1
 376 0088 2F000000 		.word	.L43+1
 377 008c 2F000000 		.word	.L43+1
 378 0090 2F000000 		.word	.L43+1
 379 0094 2F000000 		.word	.L43+1
 380 0098 2F000000 		.word	.L43+1
 381 009c 2F000000 		.word	.L43+1
 382 00a0 2F000000 		.word	.L43+1
 383 00a4 2F000000 		.word	.L43+1
 384 00a8 2F000000 		.word	.L43+1
 385 00ac 2F000000 		.word	.L43+1
 386 00b0 2F000000 		.word	.L43+1
 387 00b4 2F000000 		.word	.L43+1
 388 00b8 5D020000 		.word	.L23+1
 389 00bc 2F000000 		.word	.L43+1
 390 00c0 2F000000 		.word	.L43+1
 391 00c4 2F000000 		.word	.L43+1
 392 00c8 2F000000 		.word	.L43+1
 393 00cc 2F000000 		.word	.L43+1
 394 00d0 2F000000 		.word	.L43+1
 395 00d4 2F000000 		.word	.L43+1
 396 00d8 2F000000 		.word	.L43+1
 397 00dc 2F000000 		.word	.L43+1
 398 00e0 2F000000 		.word	.L43+1
 399 00e4 2F000000 		.word	.L43+1
 400 00e8 2F000000 		.word	.L43+1
 401 00ec 2F000000 		.word	.L43+1
 402 00f0 2F000000 		.word	.L43+1
 403 00f4 2F000000 		.word	.L43+1
 404 00f8 2F000000 		.word	.L43+1
 405 00fc 2F000000 		.word	.L43+1
 406 0100 2F000000 		.word	.L43+1
 407 0104 2F000000 		.word	.L43+1
 408 0108 2F000000 		.word	.L43+1
 409 010c 2F000000 		.word	.L43+1
 410 0110 2F000000 		.word	.L43+1
 411 0114 2F000000 		.word	.L43+1
 412 0118 2F000000 		.word	.L43+1
 413 011c 2F000000 		.word	.L43+1
 414 0120 2F000000 		.word	.L43+1
 415 0124 2F000000 		.word	.L43+1
 416 0128 2F000000 		.word	.L43+1
 417 012c 2F000000 		.word	.L43+1
 418 0130 2F000000 		.word	.L43+1
 419 0134 2F000000 		.word	.L43+1
 420 0138 5D020000 		.word	.L23+1
 421              	.L22:
 232:../LIB_AP/Ap_EduMenu.c ****            		Lb_printf("ADC 15 : %d\n", Hw_Adc_GetData(16));
 422              		.loc 1 232 0
 423 013c 40F20003 		movw	r3, #:lower16:Hw_Adc_GetData
 424 0140 C0F20003 		movt	r3, #:upper16:Hw_Adc_GetData
 425 0144 1020     		movs	r0, #16
 426 0146 9847     		blx	r3
 427              	.LVL36:
 428 0148 0146     		mov	r1, r0
 429 014a 5A48     		ldr	r0, .L50+20
 430 014c A047     		blx	r4
 431              	.LVL37:
 432              		.loc 1 233 0
 433 014e 40F20003 		movw	r3, #:lower16:Hw_Adc_GetData
 434 0152 C0F20003 		movt	r3, #:upper16:Hw_Adc_GetData
 435 0156 1120     		movs	r0, #17
 436 0158 9847     		blx	r3
 437              	.LVL38:
 438 015a 4FF4A573 		mov	r3, #330
 439 015e 03FB00F0 		mul	r0, r3, r0
 440 0162 019B     		ldr	r3, [sp, #4]
 441 0164 83FB0031 		smull	r3, r1, r3, r0
 442 0168 C317     		asrs	r3, r0, #31
 443 016a 0918     		adds	r1, r1, r0
 444 016c C3EBE121 		rsb	r1, r3, r1, asr #11
 445 0170 5148     		ldr	r0, .L50+24
 446 0172 A047     		blx	r4
 447              	.LVL39:
 148:../LIB_AP/Ap_EduMenu.c ****     while( (key = Ap_EduMenu_GetCmd()) != 0 )
 448              		.loc 1 148 0
 449 0174 B847     		blx	r7
 450              	.LVL40:
 451 0176 0346     		mov	r3, r0
 452 0178 0028     		cmp	r0, #0
 453 017a 7FF45DAF 		bne	.L34
 454              	.L45:
 234:../LIB_AP/Ap_EduMenu.c ****                break;  
 235:../LIB_AP/Ap_EduMenu.c **** 
 236:../LIB_AP/Ap_EduMenu.c ****            case '7':
 237:../LIB_AP/Ap_EduMenu.c ****                break;  
 238:../LIB_AP/Ap_EduMenu.c **** 
 239:../LIB_AP/Ap_EduMenu.c ****            case '8':           		
 240:../LIB_AP/Ap_EduMenu.c ****                break;
 241:../LIB_AP/Ap_EduMenu.c **** 
 242:../LIB_AP/Ap_EduMenu.c ****            case '9': 
 243:../LIB_AP/Ap_EduMenu.c ****                break;
 244:../LIB_AP/Ap_EduMenu.c **** 
 245:../LIB_AP/Ap_EduMenu.c ****            case '0':
 246:../LIB_AP/Ap_EduMenu.c ****                break;
 247:../LIB_AP/Ap_EduMenu.c **** 
 248:../LIB_AP/Ap_EduMenu.c **** 			case 'm':
 249:../LIB_AP/Ap_EduMenu.c **** 			case 'M':
 250:../LIB_AP/Ap_EduMenu.c **** 				Ap_EduMenu_ShowMenu();
 251:../LIB_AP/Ap_EduMenu.c **** 				break;
 252:../LIB_AP/Ap_EduMenu.c **** 				
 253:../LIB_AP/Ap_EduMenu.c ****            default :
 254:../LIB_AP/Ap_EduMenu.c ****                break;
 255:../LIB_AP/Ap_EduMenu.c ****         }
 256:../LIB_AP/Ap_EduMenu.c ****     }
 257:../LIB_AP/Ap_EduMenu.c ****     
 258:../LIB_AP/Ap_EduMenu.c ****     return Ret;
 259:../LIB_AP/Ap_EduMenu.c **** }
 455              		.loc 1 259 0
 456 017e 05B0     		add	sp, sp, #20
 457 0180 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 458              	.LVL41:
 459              	.L21:
 205:../LIB_AP/Ap_EduMenu.c ****            		Lb_printf("BT Test Start, press x to exit\n");
 460              		.loc 1 205 0
 461 0184 4D48     		ldr	r0, .L50+28
 462 0186 A047     		blx	r4
 463              	.LVL42:
 464 0188 4D4D     		ldr	r5, .L50+32
 222:../LIB_AP/Ap_EduMenu.c ****            					Hw_Uart_Print( HW_USE_UART_CH_BT, "Menu:Send : %c\r\n",UartData );
 465              		.loc 1 222 0
 466 018a 4E4E     		ldr	r6, .L50+36
 467 018c 05E0     		b	.L44
 468              	.L30:
 214:../LIB_AP/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_MENU, &UartData ) == TRUE )
 469              		.loc 1 214 0
 470 018e 0020     		movs	r0, #0
 471 0190 0DF10F01 		add	r1, sp, #15
 472 0194 A847     		blx	r5
 473              	.LVL43:
 474 0196 0128     		cmp	r0, #1
 475 0198 0FD0     		beq	.L46
 476              	.L44:
 209:../LIB_AP/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_BT, &UartData) == TRUE )
 477              		.loc 1 209 0
 478 019a 0120     		movs	r0, #1
 479 019c 0DF10F01 		add	r1, sp, #15
 480 01a0 A847     		blx	r5
 481              	.LVL44:
 482 01a2 0128     		cmp	r0, #1
 483 01a4 F3D1     		bne	.L30
 211:../LIB_AP/Ap_EduMenu.c ****            				Lb_printf( "BT Rxd : %c \n", UartData );
 484              		.loc 1 211 0
 485 01a6 9DF80F10 		ldrb	r1, [sp, #15]	@ zero_extendqisi2
 486 01aa 4748     		ldr	r0, .L50+40
 487 01ac A047     		blx	r4
 488              	.LVL45:
 214:../LIB_AP/Ap_EduMenu.c ****            			if( Hw_Uart_GetchNoWait( HW_USE_UART_CH_MENU, &UartData ) == TRUE )
 489              		.loc 1 214 0
 490 01ae 0020     		movs	r0, #0
 491 01b0 0DF10F01 		add	r1, sp, #15
 492 01b4 A847     		blx	r5
 493              	.LVL46:
 494 01b6 0128     		cmp	r0, #1
 495 01b8 EFD1     		bne	.L44
 496              	.L46:
 216:../LIB_AP/Ap_EduMenu.c ****            				if( UartData == 'x' )
 497              		.loc 1 216 0
 498 01ba 9DF80F20 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
 222:../LIB_AP/Ap_EduMenu.c ****            					Hw_Uart_Print( HW_USE_UART_CH_BT, "Menu:Send : %c\r\n",UartData );
 499              		.loc 1 222 0
 500 01be 4349     		ldr	r1, .L50+44
 216:../LIB_AP/Ap_EduMenu.c ****            				if( UartData == 'x' )
 501              		.loc 1 216 0
 502 01c0 782A     		cmp	r2, #120
 503 01c2 69D0     		beq	.L32
 222:../LIB_AP/Ap_EduMenu.c ****            					Hw_Uart_Print( HW_USE_UART_CH_BT, "Menu:Send : %c\r\n",UartData );
 504              		.loc 1 222 0
 505 01c4 B047     		blx	r6
 506              	.LVL47:
 507 01c6 E8E7     		b	.L44
 508              	.L20:
 201:../LIB_AP/Ap_EduMenu.c ****            		Hw_CLcd_Print( 0, 1, "Cnt : %d", Seg_Count++);
 509              		.loc 1 201 0
 510 01c8 414D     		ldr	r5, .L50+48
 511 01ca 0121     		movs	r1, #1
 512 01cc 2B88     		ldrh	r3, [r5, #0]
 513 01ce 414A     		ldr	r2, .L50+52
 514 01d0 5E18     		adds	r6, r3, r1
 515 01d2 2E80     		strh	r6, [r5, #0]	@ movhi
 516 01d4 0020     		movs	r0, #0
 517 01d6 404D     		ldr	r5, .L50+56
 518 01d8 A847     		blx	r5
 519              	.LVL48:
 202:../LIB_AP/Ap_EduMenu.c **** 				break;  
 520              		.loc 1 202 0
 521 01da 28E7     		b	.L43
 522              	.L19:
 197:../LIB_AP/Ap_EduMenu.c ****            		Hw_7Seg_Print( 0, "%d", Seg_Count++ );
 523              		.loc 1 197 0
 524 01dc 3C4B     		ldr	r3, .L50+48
 525 01de 0020     		movs	r0, #0
 526 01e0 1A88     		ldrh	r2, [r3, #0]
 527 01e2 3E49     		ldr	r1, .L50+60
 528 01e4 551C     		adds	r5, r2, #1
 529 01e6 1D80     		strh	r5, [r3, #0]	@ movhi
 530 01e8 3D4B     		ldr	r3, .L50+64
 531 01ea 9847     		blx	r3
 532              	.LVL49:
 198:../LIB_AP/Ap_EduMenu.c ****                break; 
 533              		.loc 1 198 0
 534 01ec 1FE7     		b	.L43
 535              	.L18:
 164:../LIB_AP/Ap_EduMenu.c ****            		Lb_printf("KeyPad Start : press two keys to exit\n");
 536              		.loc 1 164 0
 537 01ee 3D48     		ldr	r0, .L50+68
 538 01f0 A047     		blx	r4
 539              	.LVL50:
 540 01f2 3D4E     		ldr	r6, .L50+72
 541 01f4 3D4D     		ldr	r5, .L50+76
 181:../LIB_AP/Ap_EduMenu.c **** 						KeyNum = Hw_KeyPad_GetEventKeyNum(HW_KEYPAD_EVENT_REPEAT);
 542              		.loc 1 181 0
 543 01f6 DFF814A1 		ldr	sl, .L50+108
 183:../LIB_AP/Ap_EduMenu.c **** 						Lb_printf("%x KeyRepeat Cnt : %d\n",Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_REPEAT), Hw_Key
 544              		.loc 1 183 0
 545 01fa DFF81481 		ldr	r8, .L50+112
 546 01fe 06E0     		b	.L29
 547              	.LVL51:
 548              	.L26:
 174:../LIB_AP/Ap_EduMenu.c **** 					if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_RELEASED) )
 549              		.loc 1 174 0
 550 0200 4207     		lsls	r2, r0, #29
 551 0202 31D4     		bmi	.L47
 179:../LIB_AP/Ap_EduMenu.c **** 					if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_REPEAT) )
 552              		.loc 1 179 0
 553 0204 8307     		lsls	r3, r0, #30
 554 0206 35D4     		bmi	.L48
 555              	.LVL52:
 556              	.L27:
 186:../LIB_AP/Ap_EduMenu.c **** 					KeyPressedCnt = Hw_KeyPad_GetPressedCnt();
 557              		.loc 1 186 0
 558 0208 A847     		blx	r5
 559              	.LVL53:
 188:../LIB_AP/Ap_EduMenu.c **** 					if( KeyPressedCnt >= 2 )
 560              		.loc 1 188 0
 561 020a 0128     		cmp	r0, #1
 562 020c 0CD8     		bhi	.L49
 563              	.LVL54:
 564              	.L29:
 167:../LIB_AP/Ap_EduMenu.c ****            			KeyEvent = Hw_KeyPad_WaitForEvent(1000);
 565              		.loc 1 167 0
 566 020e 4FF47A70 		mov	r0, #1000
 567 0212 B047     		blx	r6
 568              	.LVL55:
 169:../LIB_AP/Ap_EduMenu.c ****            			if( IS_SET_BIT( KeyEvent, HW_KEYPAD_EVENT_PRESSED) )
 569              		.loc 1 169 0
 570 0214 C107     		lsls	r1, r0, #31
 571 0216 F3D5     		bpl	.L26
 171:../LIB_AP/Ap_EduMenu.c ****            				Lb_printf("%x KeyPressed\n", Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_PRESSED) );  
 572              		.loc 1 171 0
 573 0218 0020     		movs	r0, #0
 574              	.LVL56:
 575 021a C047     		blx	r8
 576              	.LVL57:
 577 021c 0146     		mov	r1, r0
 578 021e 3448     		ldr	r0, .L50+80
 579 0220 A047     		blx	r4
 580              	.LVL58:
 186:../LIB_AP/Ap_EduMenu.c **** 					KeyPressedCnt = Hw_KeyPad_GetPressedCnt();
 581              		.loc 1 186 0
 582 0222 A847     		blx	r5
 583              	.LVL59:
 188:../LIB_AP/Ap_EduMenu.c **** 					if( KeyPressedCnt >= 2 )
 584              		.loc 1 188 0
 585 0224 0128     		cmp	r0, #1
 586 0226 F2D9     		bls	.L29
 587              	.L49:
 190:../LIB_AP/Ap_EduMenu.c **** 						Lb_printf("Key Exit\n");
 588              		.loc 1 190 0
 589 0228 3248     		ldr	r0, .L50+84
 590              	.LVL60:
 591 022a A047     		blx	r4
 592              	.LVL61:
 194:../LIB_AP/Ap_EduMenu.c **** 				break;
 593              		.loc 1 194 0
 594 022c FFE6     		b	.L43
 595              	.L17:
 153:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 0 );
 596              		.loc 1 153 0
 597 022e 324E     		ldr	r6, .L50+88
 598 0230 0020     		movs	r0, #0
 154:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 599              		.loc 1 154 0
 600 0232 324D     		ldr	r5, .L50+92
 153:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 0 );
 601              		.loc 1 153 0
 602 0234 B047     		blx	r6
 603              	.LVL62:
 154:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 604              		.loc 1 154 0
 605 0236 4FF4FA70 		mov	r0, #500
 606 023a A847     		blx	r5
 607              	.LVL63:
 155:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 1 );
 608              		.loc 1 155 0
 609 023c 0120     		movs	r0, #1
 610 023e B047     		blx	r6
 611              	.LVL64:
 156:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 612              		.loc 1 156 0
 613 0240 4FF4FA70 		mov	r0, #500
 614 0244 A847     		blx	r5
 615              	.LVL65:
 157:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 2 );;
 616              		.loc 1 157 0
 617 0246 0220     		movs	r0, #2
 618 0248 B047     		blx	r6
 619              	.LVL66:
 158:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 620              		.loc 1 158 0
 621 024a 4FF4FA70 		mov	r0, #500
 622 024e A847     		blx	r5
 623              	.LVL67:
 159:../LIB_AP/Ap_EduMenu.c ****            		Hw_Led_Toggle( 3 );
 624              		.loc 1 159 0
 625 0250 0320     		movs	r0, #3
 626 0252 B047     		blx	r6
 627              	.LVL68:
 160:../LIB_AP/Ap_EduMenu.c ****            		Hw_Timer_Delay_ms(500);
 628              		.loc 1 160 0
 629 0254 4FF4FA70 		mov	r0, #500
 630 0258 A847     		blx	r5
 631              	.LVL69:
 161:../LIB_AP/Ap_EduMenu.c ****                	break;
 632              		.loc 1 161 0
 633 025a E8E6     		b	.L43
 634              	.L23:
 250:../LIB_AP/Ap_EduMenu.c **** 				Ap_EduMenu_ShowMenu();
 635              		.loc 1 250 0
 636 025c 40F20003 		movw	r3, #:lower16:Ap_EduMenu_ShowMenu
 637 0260 C0F20003 		movt	r3, #:upper16:Ap_EduMenu_ShowMenu
 638 0264 9847     		blx	r3
 639              	.LVL70:
 251:../LIB_AP/Ap_EduMenu.c **** 				break;
 640              		.loc 1 251 0
 641 0266 E2E6     		b	.L43
 642              	.LVL71:
 643              	.L47:
 176:../LIB_AP/Ap_EduMenu.c **** 						Lb_printf("%x KeyReleased\n", Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_RELEASED) );         
 644              		.loc 1 176 0
 645 0268 0220     		movs	r0, #2
 646              	.LVL72:
 647 026a C047     		blx	r8
 648              	.LVL73:
 649 026c 0146     		mov	r1, r0
 650 026e 2448     		ldr	r0, .L50+96
 651 0270 A047     		blx	r4
 652              	.LVL74:
 653 0272 C9E7     		b	.L27
 654              	.LVL75:
 655              	.L48:
 181:../LIB_AP/Ap_EduMenu.c **** 						KeyNum = Hw_KeyPad_GetEventKeyNum(HW_KEYPAD_EVENT_REPEAT);
 656              		.loc 1 181 0
 657 0274 0120     		movs	r0, #1
 658              	.LVL76:
 659 0276 D047     		blx	sl
 660              	.LVL77:
 661 0278 8146     		mov	r9, r0
 662              	.LVL78:
 183:../LIB_AP/Ap_EduMenu.c **** 						Lb_printf("%x KeyRepeat Cnt : %d\n",Hw_KeyPad_GetEventKeyData(HW_KEYPAD_EVENT_REPEAT), Hw_Key
 663              		.loc 1 183 0
 664 027a 0120     		movs	r0, #1
 665              	.LVL79:
 666 027c C047     		blx	r8
 667              	.LVL80:
 668 027e 40F20003 		movw	r3, #:lower16:Hw_KeyPad_GetRepeatCnt
 669 0282 8346     		mov	fp, r0
 670 0284 C0F20003 		movt	r3, #:upper16:Hw_KeyPad_GetRepeatCnt
 671 0288 5FFA89F0 		uxtb	r0, r9
 672 028c 9847     		blx	r3
 673              	.LVL81:
 674 028e 5946     		mov	r1, fp
 675 0290 0246     		mov	r2, r0
 676 0292 1C48     		ldr	r0, .L50+100
 677 0294 A047     		blx	r4
 678              	.LVL82:
 679 0296 B7E7     		b	.L27
 680              	.LVL83:
 681              	.L32:
 228:../LIB_AP/Ap_EduMenu.c **** 				Lb_printf("BT Test Exit\n");
 682              		.loc 1 228 0
 683 0298 1B48     		ldr	r0, .L50+104
 684 029a A047     		blx	r4
 685              	.LVL84:
 229:../LIB_AP/Ap_EduMenu.c **** 				break; 
 686              		.loc 1 229 0
 687 029c C7E6     		b	.L43
 688              	.L51:
 689 029e 00BF     		.align	2
 690              	.L50:
 691 02a0 00000000 		.word	Hw_KeyPad_SetEventFunc
 692 02a4 00000000 		.word	KeyPad_UpKeyEvent
 693 02a8 00000000 		.word	KeyPad_DownKeyEvent
 694 02ac 00000000 		.word	Ap_EduMenu_GetCmd
 695 02b0 00000000 		.word	Lb_printf
 696 02b4 AC030000 		.word	.LC26
 697 02b8 BC030000 		.word	.LC27
 698 02bc 58030000 		.word	.LC22
 699 02c0 00000000 		.word	Hw_Uart_GetchNoWait
 700 02c4 00000000 		.word	Hw_Uart_Print
 701 02c8 78030000 		.word	.LC23
 702 02cc 88030000 		.word	.LC24
 703 02d0 00000000 		.word	.LANCHOR0
 704 02d4 4C030000 		.word	.LC21
 705 02d8 00000000 		.word	Hw_CLcd_Print
 706 02dc 00000000 		.word	.LC0
 707 02e0 00000000 		.word	Hw_7Seg_Print
 708 02e4 E0020000 		.word	.LC16
 709 02e8 00000000 		.word	Hw_KeyPad_WaitForEvent
 710 02ec 00000000 		.word	Hw_KeyPad_GetPressedCnt
 711 02f0 08030000 		.word	.LC17
 712 02f4 40030000 		.word	.LC20
 713 02f8 00000000 		.word	Hw_Led_Toggle
 714 02fc 00000000 		.word	Hw_Timer_Delay_ms
 715 0300 18030000 		.word	.LC18
 716 0304 28030000 		.word	.LC19
 717 0308 9C030000 		.word	.LC25
 718 030c 00000000 		.word	Hw_KeyPad_GetEventKeyNum
 719 0310 00000000 		.word	Hw_KeyPad_GetEventKeyData
 720              		.cfi_endproc
 721              	.LFE4:
 723              		.global	Seg_Count
 724              		.section	.rodata.str1.4,"aMS",%progbits,1
 725              		.align	2
 726              	.LC0:
 727 0000 256400   		.ascii	"%d\000"
 728 0003 00       		.space	1
 729              	.LC1:
 730 0004 0A0A00   		.ascii	"\012\012\000"
 731 0007 00       		.space	1
 732              	.LC2:
 733 0008 2A2A2A2A 		.ascii	"***************************************************"
 733      2A2A2A2A 
 733      2A2A2A2A 
 733      2A2A2A2A 
 733      2A2A2A2A 
 734 003b 2A2A2A2A 		.ascii	"****\012\000"
 734      0A00
 735 0041 000000   		.space	3
 736              	.LC3:
 737 0044 20202020 		.ascii	"                      Edu V0.5                     "
 737      20202020 
 737      20202020 
 737      20202020 
 737      20202020 
 738 0077 20202020 		.ascii	"    \012\000"
 738      0A00
 739 007d 000000   		.space	3
 740              	.LC4:
 741 0080 2A20312E 		.ascii	"* 1. Test.. LED                                    "
 741      20546573 
 741      742E2E20 
 741      4C454420 
 741      20202020 
 742 00b3 2020202A 		.ascii	"   *\012\000"
 742      0A00
 743 00b9 000000   		.space	3
 744              	.LC5:
 745 00bc 2A20322E 		.ascii	"* 2. Test.. KeyPad                                 "
 745      20546573 
 745      742E2E20 
 745      4B657950 
 745      61642020 
 746 00ef 2020202A 		.ascii	"   *\012\000"
 746      0A00
 747 00f5 000000   		.space	3
 748              	.LC6:
 749 00f8 2A20332E 		.ascii	"* 3. Test.. 7Seg                                   "
 749      20546573 
 749      742E2E20 
 749      37536567 
 749      20202020 
 750 012b 2020202A 		.ascii	"   *\012\000"
 750      0A00
 751 0131 000000   		.space	3
 752              	.LC7:
 753 0134 2A20342E 		.ascii	"* 4. Test.. CLcd                                   "
 753      20546573 
 753      742E2E20 
 753      434C6364 
 753      20202020 
 754 0167 2020202A 		.ascii	"   *\012\000"
 754      0A00
 755 016d 000000   		.space	3
 756              	.LC8:
 757 0170 2A20352E 		.ascii	"* 5. Test.. BT                                     "
 757      20546573 
 757      742E2E20 
 757      42542020 
 757      20202020 
 758 01a3 2020202A 		.ascii	"   *\012\000"
 758      0A00
 759 01a9 000000   		.space	3
 760              	.LC9:
 761 01ac 2A20362E 		.ascii	"* 6. Test.. Temperature                            "
 761      20546573 
 761      742E2E20 
 761      54656D70 
 761      65726174 
 762 01df 2020202A 		.ascii	"   *\012\000"
 762      0A00
 763 01e5 000000   		.space	3
 764              	.LC10:
 765 01e8 2A20372E 		.ascii	"* 7.                                               "
 765      20202020 
 765      20202020 
 765      20202020 
 765      20202020 
 766 021b 2020202A 		.ascii	"   *\012\000"
 766      0A00
 767 0221 000000   		.space	3
 768              	.LC11:
 769 0224 2A20382E 		.ascii	"* 8.                                               "
 769      20202020 
 769      20202020 
 769      20202020 
 769      20202020 
 770 0257 2020202A 		.ascii	"   *\012\000"
 770      0A00
 771 025d 000000   		.space	3
 772              	.LC12:
 773 0260 2A20392E 		.ascii	"* 9.                                               "
 773      20202020 
 773      20202020 
 773      20202020 
 773      20202020 
 774 0293 2020202A 		.ascii	"   *\012\000"
 774      0A00
 775 0299 000000   		.space	3
 776              	.LC13:
 777 029c 2A206D2E 		.ascii	"* m.  Menu                                         "
 777      20204D65 
 777      6E752020 
 777      20202020 
 777      20202020 
 778 02cf 2020202A 		.ascii	"   *\012\000"
 778      0A00
 779 02d5 000000   		.space	3
 780              	.LC14:
 781 02d8 0A00     		.ascii	"\012\000"
 782 02da 0000     		.space	2
 783              	.LC15:
 784 02dc 3E3E2000 		.ascii	">> \000"
 785              	.LC16:
 786 02e0 4B657950 		.ascii	"KeyPad Start : press two keys to exit\012\000"
 786      61642053 
 786      74617274 
 786      203A2070 
 786      72657373 
 787 0307 00       		.space	1
 788              	.LC17:
 789 0308 2578204B 		.ascii	"%x KeyPressed\012\000"
 789      65795072 
 789      65737365 
 789      640A00
 790 0317 00       		.space	1
 791              	.LC18:
 792 0318 2578204B 		.ascii	"%x KeyReleased\012\000"
 792      65795265 
 792      6C656173 
 792      65640A00 
 793              	.LC19:
 794 0328 2578204B 		.ascii	"%x KeyRepeat Cnt : %d\012\000"
 794      65795265 
 794      70656174 
 794      20436E74 
 794      203A2025 
 795 033f 00       		.space	1
 796              	.LC20:
 797 0340 4B657920 		.ascii	"Key Exit\012\000"
 797      45786974 
 797      0A00
 798 034a 0000     		.space	2
 799              	.LC21:
 800 034c 436E7420 		.ascii	"Cnt : %d\000"
 800      3A202564 
 800      00
 801 0355 000000   		.space	3
 802              	.LC22:
 803 0358 42542054 		.ascii	"BT Test Start, press x to exit\012\000"
 803      65737420 
 803      53746172 
 803      742C2070 
 803      72657373 
 804              	.LC23:
 805 0378 42542052 		.ascii	"BT Rxd : %c \012\000"
 805      7864203A 
 805      20256320 
 805      0A00
 806 0386 0000     		.space	2
 807              	.LC24:
 808 0388 4D656E75 		.ascii	"Menu:Send : %c\015\012\000"
 808      3A53656E 
 808      64203A20 
 808      25630D0A 
 808      00
 809 0399 000000   		.space	3
 810              	.LC25:
 811 039c 42542054 		.ascii	"BT Test Exit\012\000"
 811      65737420 
 811      45786974 
 811      0A00
 812 03aa 0000     		.space	2
 813              	.LC26:
 814 03ac 41444320 		.ascii	"ADC 15 : %d\012\000"
 814      3135203A 
 814      2025640A 
 814      00
 815 03b9 000000   		.space	3
 816              	.LC27:
 817 03bc 41444320 		.ascii	"ADC 16 : %d\012\000"
 817      3136203A 
 817      2025640A 
 817      00
 818 03c9 000000   		.section	.bss.Seg_Count,"aw",%nobits
 819              		.align	1
 820              		.set	.LANCHOR0,. + 0
 823              	Seg_Count:
 824 0000 0000     		.space	2
 825              		.text
 826              	.Letext0:
 827              		.file 2 "../LIB_HW/Hw_Define.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ap_EduMenu.c
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:19     .text.KeyPad_DownKeyEvent:0000000000000000 $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:24     .text.KeyPad_DownKeyEvent:0000000000000000 KeyPad_DownKeyEvent
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:70     .text.KeyPad_DownKeyEvent:0000000000000020 $d
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:79     .text.KeyPad_UpKeyEvent:0000000000000000 $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:84     .text.KeyPad_UpKeyEvent:0000000000000000 KeyPad_UpKeyEvent
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:122    .text.KeyPad_UpKeyEvent:000000000000001c $d
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:131    .text.Ap_EduMenu_ShowMenu:0000000000000000 $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:136    .text.Ap_EduMenu_ShowMenu:0000000000000000 Ap_EduMenu_ShowMenu
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:729    .rodata.str1.4:0000000000000004 .LC1
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:732    .rodata.str1.4:0000000000000008 .LC2
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:736    .rodata.str1.4:0000000000000044 .LC3
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:740    .rodata.str1.4:0000000000000080 .LC4
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:744    .rodata.str1.4:00000000000000bc .LC5
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:748    .rodata.str1.4:00000000000000f8 .LC6
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:752    .rodata.str1.4:0000000000000134 .LC7
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:756    .rodata.str1.4:0000000000000170 .LC8
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:760    .rodata.str1.4:00000000000001ac .LC9
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:764    .rodata.str1.4:00000000000001e8 .LC10
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:768    .rodata.str1.4:0000000000000224 .LC11
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:772    .rodata.str1.4:0000000000000260 .LC12
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:776    .rodata.str1.4:000000000000029c .LC13
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:780    .rodata.str1.4:00000000000002d8 .LC14
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:239    .text.Ap_EduMenu_GetCmd:0000000000000000 $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:244    .text.Ap_EduMenu_GetCmd:0000000000000000 Ap_EduMenu_GetCmd
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:783    .rodata.str1.4:00000000000002dc .LC15
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:284    .text.Ap_EduMenu_ExeCmd:0000000000000000 $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:289    .text.Ap_EduMenu_ExeCmd:0000000000000000 Ap_EduMenu_ExeCmd
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:360    .text.Ap_EduMenu_ExeCmd:0000000000000048 $d
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:423    .text.Ap_EduMenu_ExeCmd:000000000000013c $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:691    .text.Ap_EduMenu_ExeCmd:00000000000002a0 $d
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:823    .bss.Seg_Count:0000000000000000 Seg_Count
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:725    .rodata.str1.4:0000000000000000 $d
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWF1Uno.s:819    .bss.Seg_Count:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
Hw_7Seg_Print
Lb_printf
get_byte
Hw_Adc_GetData
Hw_KeyPad_GetRepeatCnt
Hw_KeyPad_SetEventFunc
Hw_Uart_GetchNoWait
Hw_Uart_Print
Hw_CLcd_Print
Hw_KeyPad_WaitForEvent
Hw_KeyPad_GetPressedCnt
Hw_Led_Toggle
Hw_Timer_Delay_ms
Hw_KeyPad_GetEventKeyNum
Hw_KeyPad_GetEventKeyData
